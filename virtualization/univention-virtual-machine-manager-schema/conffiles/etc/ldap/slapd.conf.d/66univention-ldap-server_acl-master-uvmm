@!@
params = {}
params['right'] = 'write' if configRegistry['ldap/server/type'] == 'master' else 'read'
params['base'] = configRegistry['ldap/base']
import os.path

if os.path.exists('/usr/share/univention-ldap/schema/univention-virtual-machine-manager.schema'):
	print '''
access to dn.regex="^univentionVirtualMachineUUID=([^,]+),cn=Information,cn=Virtual Machine Manager,%(base)s$" filter="(objectClass=univentionVirtualMachine)" attrs=entry,@univentionVirtualMachine,@univentionObject
	by dn.onelevel="cn=dc,cn=computers,%(base)s" %(right)s
	by dn.onelevel="cn=memberserver,cn=computers,%(base)s" %(right)s
	by * read break

access to dn.regex="^cn=([^,]+),cn=CloudConnection,cn=Virtual Machine Manager,%(base)s$" filter="(objectClass=univentionVirtualMachineCloudConnection)" attrs=entry,@univentionVirtualMachineCloudConnection,@univentionVirtualMachineHostOC,@univentionObject
	by dn.onelevel="cn=dc,cn=computers,%(base)s" %(right)s
	by dn.onelevel="cn=memberserver,cn=computers,%(base)s" %(right)s
	by * read break

access to dn.regex="^cn=(Information|CloudConnection),cn=Virtual Machine Manager,%(base)s$" attrs=children,entry
	by dn.onelevel="cn=dc,cn=computers,%(base)s" %(right)s
	by dn.onelevel="cn=memberserver,cn=computers,%(base)s" %(right)s
	by * read break

''' % params
@!@
