x86/mm: fix a reference counting error in MMU_MACHPHYS_UPDATE

Any domain which can pass the XSM check against a translated guest can cause a
page reference to be leaked.

While shuffling the order of checks, drop the quite-pointless MEM_LOG().  This
brings the check in line with similar checks in the vicinity.

Discovered while reviewing the XSA-109/110 followup series.

This is XSA-113.

Signed-off-by: Andrew Cooper <andrew.cooper3@citrix.com>
Reviewed-by: Jan Beulich <jbeulich@suse.com>
Reviewed-by: Tim Deegan <tim@xen.org>

diff -aur xen-4.1.3.orig/xen/arch/x86/mm.c xen-4.1.3/xen/arch/x86/mm.c
--- xen-4.1.3.orig/xen/arch/x86/mm.c	2014-12-05 14:24:41.772853843 +0100
+++ xen-4.1.3/xen/arch/x86/mm.c	2014-12-05 14:31:56.277490670 +0100
@@ -3870,6 +3870,12 @@
 
         case MMU_MACHPHYS_UPDATE:
 
+            if ( unlikely(paging_mode_translate(pg_owner)) )
+            {
+                rc = -EINVAL;
+                break;
+            }
+
             mfn = req.ptr >> PAGE_SHIFT;
             gpfn = req.val;
 
@@ -3883,12 +3889,6 @@
                 break;
             }
 
-            if ( unlikely(paging_mode_translate(pg_owner)) )
-            {
-                MEM_LOG("Mach-phys update on auto-translate guest");
-                break;
-            }
-
             set_gpfn_from_mfn(mfn, gpfn);
             okay = 1;
 
Nur in xen-4.1.3/xen/arch/x86: mm.c~.
