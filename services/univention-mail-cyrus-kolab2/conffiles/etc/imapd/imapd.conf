# Warning: This file is auto-generated and might be overwritten by
#          univention-baseconfig.
#          Please edit the following file instead:
# Warnung: Diese Datei wurde automatisch generiert und kann durch
#          univention-baseconfig Ã¼berschrieben werden.
#          Bitte bearbeiten Sie an Stelle dessen die folgende Datei:
#
#   /etc/univention/templates/files/etc/imapd/imapd.conf
#


@!@
if baseConfig.has_key('mail/cyrus/murder/backend/hostname') and baseConfig['mail/cyrus/murder/backend/hostname'] != '':
	print 'servername: %s' % baseConfig['mail/cyrus/murder/backend/hostname']
@!@
configdirectory: /var/lib/cyrus
defaultpartition: default
partition-default: /var/spool/cyrus/mail
partition-news: /var/spool/cyrus/news
newsspool: /var/spool/news
userprefix: user
sharedprefix: shared
virtdomains: yes
robot101mode: yes
altnamespace: no
unixhierarchysep: yes
defaultacl: anyone none
lmtp_downcase_rcpt: yes
admins: cyrus root @!@
if baseConfig.has_key('mail/cyrus/admins') and baseConfig['mail/cyrus/admins']:
	print '%s' % baseConfig['mail/cyrus/admins'].replace(',',' '),
@!@

lmtp_admins: postman
imap_admins: cyrus root @!@
if baseConfig.has_key('mail/cyrus/imap/admins') and baseConfig['mail/cyrus/imap/admins']:
	print '%s' % baseConfig['mail/cyrus/imap/admins'].replace(',',' '),
if baseConfig.has_key('mail/cyrus/murder/master') and baseConfig['mail/cyrus/murder/master']:
	if baseConfig.has_key('mail/cyrus/murder/backends') and baseConfig['mail/cyrus/murder/backends'] != '':
		for fqdn in baseConfig['mail/cyrus/murder/backends'].split(' '):
			print '%s@%s' % (fqdn, baseConfig['domainname']),
	if baseConfig.has_key('mail/cyrus/murder/frontends') and baseConfig['mail/cyrus/murder/frontends'] != '':
		for fqdn in baseConfig['mail/cyrus/murder/frontends'].split(' '):
			print '%s@%s' % (fqdn, baseConfig['domainname']),
@!@
allowanonymouslogin: no
popminpoll: 0

autocreatequota: 0
@!@
if baseConfig.has_key('mail/cyrus/imap/quotawarnpercent'):
        print 'quotawarn: %s' % baseConfig['mail/cyrus/imap/quotawarnpercent']
if baseConfig.has_key('mail/cyrus/imap/quotawarnkb'):
        print 'quotawarnkb: %s' % baseConfig['mail/cyrus/imap/quotawarnkb']
@!@
umask: 077
sieveusehomedir: false
sievedir: /var/spool/cyrus/sieve
hashimapspool: true
allowplaintext: yes
sasl_mech_list: PLAIN
@!@
if baseConfig.has_key('mail/cyrus/loginrealms') and baseConfig['mail/cyrus/loginrealms'] != '':
	print 'loginrealms: %s' % baseConfig['mail/cyrus/loginrealms']
if baseConfig.has_key('mail/hosteddomains') and baseConfig['mail/hosteddomains'] != '':
	print 'loginrealms: %s' % baseConfig['mail/hosteddomains']
else:
	print 'loginrealms: %s' % baseConfig['domainname']
@!@
sasl_pwcheck_method: saslauthd
sasl_auxprop_plugin: sasldb
sasl_auto_transition: no

@!@
if baseConfig.has_key('mail/cyrus/imap/lookup_groups') and baseConfig['mail/cyrus/imap/lookup_groups'].lower() == 'no':
	print 'unix_group_enable: no'
else:
	print 'unix_group_enable: yes'
@!@
auth_ldap_group: true
ldap_base: @%@ldap/base@%@
ldap_host: @%@ldap/server/name@%@
ldap_port: @%@ldap/port@%@
ldap_to_attr: uid
ldap_from_attr: mailPrimaryAddress

tls_cert_file: /var/lib/cyrus/cert.pem
tls_key_file: /var/lib/cyrus/private.key

tls_ca_path: /etc/univention/ssl/ucsCA/certs/
tls_session_timeout: 1440
tls_cipher_list: TLSv1:SSLv3:SSLv2:!NULL:!EXPORT:!DES:!LOW:@STRENGTH
lmtpsocket: /var/run/cyrus/socket/lmtp
idlesocket: /var/run/cyrus/socket/idle
notifysocket: /var/run/cyrus/socket/notify

@!@
if baseConfig.has_key('mail/cyrus/murder/master') and baseConfig['mail/cyrus/murder/master'] != '':
	domainname = baseConfig['domainname']
	if baseConfig.has_key('mail/cyrus/murder/backend/hostname') and baseConfig['mail/cyrus/murder/backend/hostname'] != '':
		# if this parameter is set, the listener script cyrusMurderBackends will put it in into
		# mail/cyrus/murder/backends instead of the hostname (cyrus 2.2 'unified' emulation)
		emailname = configRegistry['mail/cyrus/murder/backend/hostname']
	else:
		emailname = '.'.join([ baseConfig['hostname'], domainname ])

	file = open('/etc/machine.secret','r')
	machinepass=file.read().strip()

	print '### How to contact the MUPDATE master'
	print 'mupdate_server: %s' % baseConfig['mail/cyrus/murder/master']
        print 'mupdate_authname: %s@%s' % (emailname, domainname)
	print 'mupdate_password: %s' % machinepass

	if baseConfig.has_key('mail/cyrus/murder/frontends') and baseConfig['mail/cyrus/murder/frontends'] != '':
		print'''
### How the frontends need to authenticate
## check with: testsaslauthd -s imap -u <id> -p <pw>
## Space separated ist of users and groups that are allowed to proxy for other
## users. Any user listed in this will be allowed to login for any other user.
## Just like 'admins:' above, you can have imap_proxyservers.'''
		print 'proxyservers: ',
		for fqdn in baseConfig['mail/cyrus/murder/frontends'].split(' '):
			print '%s@%s' % (fqdn, domainname),
		print

	if baseConfig.has_key('mail/cyrus/murder/backends') and baseConfig['mail/cyrus/murder/backends'] != '':
		print'### transfer between backends'
		print'allowusermoves: yes'
		print'# allowsubscribes: yes'
		print'### How to contact the neighbor backend servers'
		print 'proxy_authname: %s@%s' % (emailname, domainname)
		print
		for backend in baseConfig['mail/cyrus/murder/backends'].split(' '):
			dot = backend.find('.')
			if dot != -1:	# just in case
				backend=backend[:dot]
			print backend + '_password: %s' % machinepass
@!@
