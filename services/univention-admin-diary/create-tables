#!/usr/bin/python2.7
# -*- coding: utf-8 -*-
#
# Copyright 2019 Univention GmbH
#
# http://www.univention.de/
#
# All rights reserved.
#
# The source code of this program is made available
# under the terms of the GNU Affero General Public License version 3
# (GNU AGPL V3) as published by the Free Software Foundation.
#
# Binary versions of this program provided by Univention to you as
# well as other copyrighted, protected or trademarked materials like
# Logos, graphics, fonts, specific documentations and configurations,
# cryptographic keys etc. are subject to a license agreement between
# you and Univention and not subject to the GNU AGPL V3.
#
# In the case you use this program under the terms of the GNU AGPL V3,
# the program is provided in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public
# License with the Debian GNU/Linux or Univention distribution in file
# /usr/share/common-licenses/AGPL-3; if not, see
# <http://www.gnu.org/licenses/>.

from univention.admindiary.backend import Base, engine, get_session, add_event, add_event_message

Base.metadata.create_all(engine)

with get_session() as session:
	for event_name, messages in [
			('USER_CREATED', {'en': 'User {0} created', 'de': 'Benutzer {0} angelegt'}),
			('APP_ACTION_START', {'en': 'App {0}: Start of {1}', 'de': 'App {0}: Start von {1}'}),
			('APP_ACTION_SUCCESS', {'en': 'App {0} ({1}): Success', 'de': 'App {0} ({1}): Erfolg'}),
			('APP_ACTION_FAILURE', {'en': 'App {0} ({1}): Failure. Error {2}', 'de': 'App {0} ({1}): Fehlschlag. Fehler {2}'}),
			('SERVER_PASSWORD_CHANGED', {'en': 'Machine account password changed successfully', 'de': 'Maschinenpasswort erfolgreich geändert'}),
			('SERVER_PASSWORD_CHANGED_FAILED', {'en': 'Machine account password change failed', 'de': 'Änderung des Maschinenpassworts fehlgeschlagen'}),
			]:
		event = add_event(event_name, session)
		for locale, message in messages.iteritems():
			add_event_message(event.id, locale, message, True, session)
