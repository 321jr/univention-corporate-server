#!/usr/bin/python2.7
# -*- coding: utf-8 -*-
#
# Univention Admin Diary
#  CLI Tool adding diary entry into RabbitMQ to be added to the DB - eventually
#
# Copyright 2019 Univention GmbH
#
# http://www.univention.de/
#
# All rights reserved.
#
# The source code of this program is made available
# under the terms of the GNU Affero General Public License version 3
# (GNU AGPL V3) as published by the Free Software Foundation.
#
# Binary versions of this program provided by Univention to you as
# well as other copyrighted, protected or trademarked materials like
# Logos, graphics, fonts, specific documentations and configurations,
# cryptographic keys etc. are subject to a license agreement between
# you and Univention and not subject to the GNU AGPL V3.
#
# In the case you use this program under the terms of the GNU AGPL V3,
# the program is provided in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public
# License with the Debian GNU/Linux or Univention distribution in file
# /usr/share/common-licenses/AGPL-3; if not, see
# <http://www.gnu.org/licenses/>.
#

import sys
from argparse import ArgumentParser, REMAINDER

from univention.admindiary.client import log, log_event
from univention.admindiary.events import Event

def main():
	usage = '%(prog)s [options] <message>'
	description = '%(prog)s is a program to add an entry to the Admin Diary'
	parser = ArgumentParser(usage=usage, description=description)
	parser.add_argument('-u', '--username', help='Username that issues the log entry')
	parser.add_argument('-t', '--tag', action='append', help='Tags added to the log entry')
	parser.add_argument('-a', '--arg', action='append', help='Argument used in message')
	parser.add_argument('--event', choices=Event.names(), help='Choose one from this convenience list instead of giving TAG and <message>')
	parser.add_argument('--log-id', help='May be given to ammend an existing diary entry, effectively grouping those together. The LOG_ID is also returned by this program')
	parser.add_argument('message', nargs=REMAINDER, help='The message')
	args = parser.parse_args()
	if args.event:
		event = Event.get(args.event)
		try:
			print log_event(event, args.arg, args.username, args.log_id)
		except ValueError as exc:
			print exc.message
			sys.exit(1)
	else:
		print log(' '.join(args.message), args.arg, args.username, args.tag, args.log_id)

if __name__ == '__main__':
	main()
