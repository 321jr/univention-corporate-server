#!/bin/bash
#
# postinst script
#
# Copyright 2019 Univention GmbH
#
# http://www.univention.de/
#
# All rights reserved.
#
# The source code of this program is made available
# under the terms of the GNU Affero General Public License version 3
# (GNU AGPL V3) as published by the Free Software Foundation.
#
# Binary versions of this program provided by Univention to you as
# well as other copyrighted, protected or trademarked materials like
# Logos, graphics, fonts, specific documentations and configurations,
# cryptographic keys etc. are subject to a license agreement between
# you and Univention and not subject to the GNU AGPL V3.
#
# In the case you use this program under the terms of the GNU AGPL V3,
# the program is provided in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public
# License with the Debian GNU/Linux or Univention distribution in file
# /usr/share/common-licenses/AGPL-3; if not, see
# <http://www.gnu.org/licenses/>.

#DEBHELPER#

if [ -z "$2" ]; then
	touch /etc/admin-diary.secret
	chmod 0700 /etc/admin-diary.secret
	PASSWORD="$(< /dev/urandom tr -dc _A-Z-a-z-0-9 | head -c20)"
	echo "$PASSWORD" > /etc/admin-diary.secret
	which psql
	if [ "$?" -eq "0" ]; then
		ucr set admin/diary/dbms?postgresql
	else
		ucr set admin/diary/dbms?mysql
	fi
	db_backend="$(ucr get admin/diary/dbms)"
	if [ "$db_backend" = "postgresql" ]; then
		su postgres -c "createuser -DRS --login admindiary"
		su postgres -c "createdb -O admindiary -T template0 -E UTF8 admindiary"
		su postgres -c "psql postgres -c \"ALTER ROLE \\\"admindiary\\\" WITH ENCRYPTED PASSWORD '$PASSWORD'\""
		su postgres -c "psql admindiary -c 'CREATE TABLE log_entries (
			id SERIAL PRIMARY KEY,
			username VARCHAR NOT NULL,
			hostname VARCHAR NOT NULL,
			message TEXT NOT NULL,
			args VARCHAR[],
			issued TIMESTAMPTZ NOT NULL,
			tags VARCHAR[],
			log_id VARCHAR NOT NULL,
			event_name VARCHAR NOT NULL,
			created_at TIMESTAMPTZ NOT NULL DEFAULT NOW()
		);
		ALTER TABLE log_entries OWNER TO admindiary;'"
	elif [ "$db_backend" = "mysql" ]; then
		echo "CREATE DATABASE IF NOT EXISTS admindiary" | mysql -p$(cat /etc/mysql.secret)
		echo "GRANT ALL ON admindiary.* TO 'admindiary'@'localhost' IDENTIFIED BY '$PASSWORD'" | mysql -p$(cat /etc/mysql.secret)
		echo "CREATE TABLE log_entries (
			id INT NOT NULL AUTO_INCREMENT,
			username VARCHAR(512) NOT NULL,
			hostname VARCHAR(512) NOT NULL,
			message TEXT NOT NULL,
			issued TIMESTAMP NOT NULL,
			log_id VARCHAR(512) NOT NULL,
			event_name VARCHAR(512) NOT NULL,
			created_at TIMESTAMP NOT NULL DEFAULT NOW(),
			PRIMARY KEY(id)
			);
			CREATE TABLE arguments (
			log_entry_id INT NOT NULL,
			arg VARCHAR(512) NOT NULL,
			FOREIGN KEY(log_entry_id) REFERENCES log_entries(id) ON DELETE CASCADE
			);
			CREATE TABLE tags (
			log_entry_id INT NOT NULL,
			tag VARCHAR(512) NOT NULL,
			FOREIGN KEY(log_entry_id) REFERENCES log_entries(id) ON DELETE CASCADE
			);
			" | mysql -p$(cat /etc/mysql.secret) admindiary
	fi
fi

univention-config-registry set \
	security/packetfilter/package/univention-admin-diary/tcp/10514/all=ACCEPT \
	security/packetfilter/package/univention-admin-diary/tcp/10514/all/en="rsyslog relp+TLS"
invoke-rc.d univention-firewall restart

invoke-rc.d rsyslog try-restart

exit 0
