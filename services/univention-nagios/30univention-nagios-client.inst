#! /bin/sh -e
#
# Univention Nagios Server
#  join script
#
# Copyright (C) 2007-2009 Univention GmbH
#
# http://www.univention.de/
#
# All rights reserved.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 2 as
# published by the Free Software Foundation.
#
# Binary versions of this file provided by Univention to you as
# well as other copyrighted, protected or trademarked materials like
# Logos, graphics, fonts, specific documentations and configurations,
# cryptographic keys etc. are subject to a license agreement between
# you and Univention.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

VERSION=2

if ! test -e "/usr/share/univention-join/.joined"; then
	echo "The server has not joined yet"
	exit 1
fi

touch /usr/lib/univention-install/.index.txt

test -n "`grep "univention-nagios-client v${VERSION} successful" /usr/lib/univention-install/.index.txt`" && exit 1

eval `univention-baseconfig shell`

# One of the configuration variables, allowed_hosts, uses ldap/master as a default
# Since ldap/master is only set during the join process we force a commit on the nrpe.cfg

univention-config-registry commit /etc/nagios/nrpe.cfg

# only register host to ldap if nagios/client/autoregister is not "no"
if [ ! "$nagios_client_autoregister" = "no" ] ; then

        # Enable Nagios for this host
        # Managed clients are still called "fatclient" in Config Registry
        if [ "$server_role" = "fatclient" ] ; then
           univention-directory-manager computers/managedclient modify $@ --dn ${ldap_hostdn} --append-option="nagios"
        else
           univention-directory-manager computers/${server_role} modify $@ --dn ${ldap_hostdn} --append-option="nagios"
        fi

	# create default services
	univention-directory-manager nagios/service modify $@ --append assignedHosts="${ldap_hostdn}" --dn "cn=UNIVENTION_PING,cn=nagios,$ldap_base"
	univention-directory-manager nagios/service modify $@ --append assignedHosts="${ldap_hostdn}" --dn "cn=UNIVENTION_DISK_ROOT,cn=nagios,$ldap_base"
	univention-directory-manager nagios/service modify $@ --append assignedHosts="${ldap_hostdn}" --dn "cn=UNIVENTION_DNS,cn=nagios,$ldap_base"
	univention-directory-manager nagios/service modify $@ --append assignedHosts="${ldap_hostdn}" --dn "cn=UNIVENTION_NTP,cn=nagios,$ldap_base"
	univention-directory-manager nagios/service modify $@ --append assignedHosts="${ldap_hostdn}" --dn "cn=UNIVENTION_SMTP,cn=nagios,$ldap_base"
	univention-directory-manager nagios/service modify $@ --append assignedHosts="${ldap_hostdn}" --dn "cn=UNIVENTION_REPLICATION,cn=nagios,$ldap_base"
	univention-directory-manager nagios/service modify $@ --append assignedHosts="${ldap_hostdn}" --dn "cn=UNIVENTION_NSCD,cn=nagios,$ldap_base"

	# add ssl check only on role "domaincontroler_master/backup"
	if [ "$server_role" = "domaincontroller_master" -o \
         "$server_role" = "domaincontroller_backup" ] ; then
		univention-directory-manager nagios/service modify $@ --append assignedHosts="${ldap_hostdn}" --dn "cn=UNIVENTION_SSL,cn=nagios,$ldap_base"
		univention-directory-manager nagios/service modify $@ --append assignedHosts="${ldap_hostdn}" --dn "cn=UNIVENTION_KPASSWDD,cn=nagios,$ldap_base"
	fi

	# add ldap check only on role "domaincontroler_*"
	if [ "$server_role" = "domaincontroller_master" -o \
         "$server_role" = "domaincontroller_backup" -o \
         "$server_role" = "domaincontroller_slave" ] ; then
		univention-directory-manager nagios/service modify $@ --append assignedHosts="${ldap_hostdn}" --dn "cn=UNIVENTION_LDAP,cn=nagios,$ldap_base"
	fi
fi

test -n "`grep "univention-nagios-client v${VERSION} successful" /usr/lib/univention-install/.index.txt`" || echo "univention-nagios-client v${VERSION} successful" >>/usr/lib/univention-install/.index.txt


exit 0
