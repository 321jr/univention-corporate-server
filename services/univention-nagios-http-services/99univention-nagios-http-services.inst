#! /bin/sh
#
# Univention nagios http services plugin join script
#  join script
#
# Copyright (C) 2008-2010 Univention GmbH
#
# http://www.univention.de/
#
# All rights reserved.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 2 as
# published by the Free Software Foundation.
#
# Binary versions of this file provided by Univention to you as
# well as other copyrighted, protected or trademarked materials like
# Logos, graphics, fonts, specific documentations and configurations,
# cryptographic keys etc. are subject to a license agreement between
# you and Univention.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

VERSION=1
NAME="univention-nagios-http-services"

if ! test -e "/usr/share/univention-join/.joined"; then
        echo "The server has not joined yet"
        exit 1
fi

touch /usr/lib/univention-install/.index.txt

test -n "`grep "${NAME} v${VERSION} successful" /usr/lib/univention-install/.index.txt`" && exit 1


eval `univention-baseconfig shell`

# create nagios service for https cups
univention-directory-manager nagios/service create $@ --ignore_exists \
	--position "cn=nagios,$ldap_base" \
	--set name="UNIVENTION_HTTPS_CUPS" \
	--set checkCommand="check_http_services" \
	--set normalCheckInterval=10 \
	--set retryCheckInterval=1 \
	--set maxCheckAttempts=5 \
	--set checkPeriod=24x7 \
	--set notificationInterval=180 \
	--set notificationPeriod=24x7 \
	--set notificationOptionRecovered=1 \
	--set notificationOptionWarning=1 \
	--set notificationOptionUnreachable=1 \
	--set checkArgs='cupsd!cups' \
	--set useNRPE=1 \
	--set notificationOptionCritical=1 

# create nagios service for http squid
univention-directory-manager nagios/service create $@ --ignore_exists \
	--position "cn=nagios,$ldap_base" \
	--set name="UNIVENTION_HTTP_SQUID" \
	--set checkCommand="check_http_services" \
	--set normalCheckInterval=10 \
	--set retryCheckInterval=1 \
	--set maxCheckAttempts=5 \
	--set checkPeriod=24x7 \
	--set notificationInterval=180 \
	--set notificationPeriod=24x7 \
	--set notificationOptionRecovered=1 \
	--set notificationOptionWarning=1 \
	--set notificationOptionUnreachable=1 \
	--set checkArgs='squid!squid' \
	--set useNRPE=1 \
	--set notificationOptionCritical=1 

# create nagios service for http opsi
univention-directory-manager nagios/service create $@ --ignore_exists \
	--position "cn=nagios,$ldap_base" \
	--set name="UNIVENTION_HTTPS_OPSI" \
	--set checkCommand="check_http_services" \
	--set normalCheckInterval=10 \
	--set retryCheckInterval=1 \
	--set maxCheckAttempts=5 \
	--set checkPeriod=24x7 \
	--set notificationInterval=180 \
	--set notificationPeriod=24x7 \
	--set notificationOptionRecovered=1 \
	--set notificationOptionWarning=1 \
	--set notificationOptionUnreachable=1 \
	--set checkArgs='opsiconfd,opsiconfd-guard!opsi' \
	--set useNRPE=1 \
	--set notificationOptionCritical=1 

# create nagios service for http dansguardian
univention-directory-manager nagios/service create $@ --ignore_exists \
	--position "cn=nagios,$ldap_base" \
	--set name="UNIVENTION_HTTP_DANSGUARDIAN" \
	--set checkCommand="check_http_services" \
	--set normalCheckInterval=10 \
	--set retryCheckInterval=1 \
	--set maxCheckAttempts=5 \
	--set checkPeriod=24x7 \
	--set notificationInterval=180 \
	--set notificationPeriod=24x7 \
	--set notificationOptionRecovered=1 \
	--set notificationOptionWarning=1 \
	--set notificationOptionUnreachable=1 \
	--set checkArgs='dansguardian!dansguardian' \
	--set useNRPE=1 \
	--set notificationOptionCritical=1 

# add nagios services for this host
if [ ! "$nagios_client_autoregister" = "no" ] ; then

        # test if nagios is enabled for this host
        if [ "$server_role" = "fatclient" ] ; then
                role=managedclient
        else
                role=$server_role
        fi
        if [ "`univention-directory-manager computers/$role list --filter=name=$hostname | grep nagiosContactEmail`" ]; then

                # add squid nagios service to host if squid is installed
		tmp=$(dpkg -l univention-squid 2>&1)
                if [ 0 -eq $? ]; then
                        univention-directory-manager nagios/service modify $@ --append assignedHosts="${ldap_hostdn}" \
				--dn "cn=UNIVENTION_HTTP_SQUID,cn=nagios,$ldap_base"
                fi

                # add dansguardian nagios service to host if dansguardian is installed
		tmp=$(dpkg -l univention-antivir-web 2>&1)
                if [ 0 -eq $? ]; then
                        univention-directory-manager nagios/service modify $@ --append assignedHosts="${ldap_hostdn}" \
				--dn "cn=UNIVENTION_HTTP_DANSGUARDIAN,cn=nagios,$ldap_base"
                fi

                # add cups nagios service to host if cups is installed
		tmp=$(dpkg -l univention-printserver 2>&1)
                if [ 0 -eq $? ]; then
                        univention-directory-manager nagios/service modify $@ --append assignedHosts="${ldap_hostdn}" \
				--dn "cn=UNIVENTION_HTTPS_CUPS,cn=nagios,$ldap_base"
                fi

                # add opsi nagios service to host if opsi is installed
		tmp=$(dpkg -l opsiconfd 2>&1)
                if [ 0 -eq $? ]; then
                        univention-directory-manager nagios/service modify $@ --append assignedHosts="${ldap_hostdn}" \
				--dn "cn=UNIVENTION_HTTPS_OPSI,cn=nagios,$ldap_base"
                fi

        fi
fi



test -n "`grep "${NAME} v${VERSION} successful" /usr/lib/univention-install/.index.txt`" || echo "${NAME} v${VERSION} successful" >>/usr/lib/univention-install/.index.txt

exit 0
