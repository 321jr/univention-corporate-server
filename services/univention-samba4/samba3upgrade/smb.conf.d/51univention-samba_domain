
	; domain
@!@
domain_logons = configRegistry.get('samba/domain/logons', 'auto')
if configRegistry['server/role'] != 'memberserver':
	if configRegistry.has_key( 'samba/role' ) and configRegistry[ 'samba/role' ].lower() == 'bdc':
		print '\tsecurity = user'

		if not domain_logons in [ 'yes', 'no' ]:
			domain_logons = 'yes'
		print '\tdomain logons = %s' % domain_logons

		print '\tdomain master = no'
		if configRegistry.has_key( 'samba/preferred/master' ):
			print '\tpreferred master = %s' % configRegistry[ 'samba/preferred/master' ]
		else:
			print '\tpreferred master = yes'
		if configRegistry.has_key( 'samba/local/master' ):
			print '\tlocal master = %s' % configRegistry[ 'samba/local/master']
		else:
			print '\tlocal master = yes'
	else:
		print '\tsecurity = user'
		if not domain_logons in [ 'yes', 'no' ]:
			domain_logons = 'yes'
		print '\tdomain logons = %s' % domain_logons
		if configRegistry['server/role']=='domaincontroller_master' or (configRegistry.has_key('samba/domainmaster') and configRegistry['samba/domainmaster']=='yes'):
			print '\tdomain master = yes'
		else:
			print '\tdomain master = no'
		if configRegistry.has_key( 'samba/preferred/master' ):
			print '\tpreferred master = %s' % configRegistry[ 'samba/preferred/master' ]
		else:
			print '\tpreferred master = yes'
		if configRegistry.has_key( 'samba/local/master' ):
			print '\tlocal master = %s' % configRegistry[ 'samba/local/master']
		else:
			print '\tlocal master = yes'
else:
	print '\tsecurity = %s' % configRegistry.get('samba/domain/security', 'domain')

	if not domain_logons in [ 'yes', 'no' ]:
		domain_logons = 'no'
	print '\tdomain logons = %s' % domain_logons

	print '\tdomain master = no'
	print '\tpreferred master = no'
	print '\tlocal master = no'

kerberos_realm = configRegistry.get('kerberos/realm')
if kerberos_realm:
	print '\trealm = %s' % kerberos_realm

samba_os_level = configRegistry.get('samba/os/level')
if samba_os_level:
	print '\tos level = %s' % samba_os_level

wins_support = configRegistry.get('windows/wins-support')
if wins_support:
	print '\twins support = %s' % wins_support

wins_server = configRegistry.get('windows/wins-server')
if wins_support != 'yes' and wins_server:
	print '\twins server = %s' % wins_server,
@!@
