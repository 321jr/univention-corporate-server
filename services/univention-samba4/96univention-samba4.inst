#!/bin/sh
#
# Univention Samba4
#  join script
#
# Copyright 2004-2011 Univention GmbH
#
# http://www.univention.de/
#
# All rights reserved.
#
# The source code of this program is made available
# under the terms of the GNU Affero General Public License version 3
# (GNU AGPL V3) as published by the Free Software Foundation.
#
# Binary versions of this program provided by Univention to you as
# well as other copyrighted, protected or trademarked materials like
# Logos, graphics, fonts, specific documentations and configurations,
# cryptographic keys etc. are subject to a license agreement between
# you and Univention and not subject to the GNU AGPL V3.
#
# In the case you use this program under the terms of the GNU AGPL V3,
# the program is provided in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public
# License with the Debian GNU/Linux or Univention distribution in file
# /usr/share/common-licenses/AGPL-3; if not, see
# <http://www.gnu.org/licenses/>.

VERSION=3
. /usr/share/univention-join/joinscripthelper.lib
joinscript_init

. /usr/share/univention-lib/all.sh

LDB_MODULES_PATH=/usr/lib/ldb; export LDB_MODULES_PATH;		## currently necessary for ldbtools

eval "$(univention-config-registry shell)"

NAME="Samba 4"

extract_binddn_and_bindpwd_from_args() {
	## parse binddn and bindpwd from command line arguments into shell variables
	eval $(echo "$@" | sed -n 's/.*--binddn \(.*\) --bindpwd \(.*\).*/binddn="\1"\nbindpwd="\2"/p')
	if [ -n "$binddn" ]; then
		dcaccount="$(ldapsearch -x -ZZ -D "$ldap_hostdn" -y /etc/machine.secret -s base -b "$binddn" -LLL uid | ldapsearch-wrapper | sed -n 's/^uid: \(.*\)$/\1/p')"
	fi
}

set_machine_secret() {
	## 1. replace random machine secret in SAM with /etc/machine.secret
	samba-tool setpassword "${hostname}\$" --newpassword="$(cat /etc/machine.secret)"

	## 2. store password locally in secrets.ldb
	current_kvn=$(ldbsearch -H /var/lib/samba/private/secrets.ldb samAccountName="${hostname}\$" msDS-KeyVersionNumber | sed -n 's/msDS-KeyVersionNumber: \(.*\)/\1/p')
	new_kvno=$(($current_kvn + 1))

	ldbmodify -H /var/lib/samba/private/secrets.ldb <<-%EOF
	dn: flatname=${windows_domain},cn=Primary Domains
	changetype: modify
	replace: secret
	secret:< file:///etc/machine.secret
	-
	replace: msDS-KeyVersionNumber
	msDS-KeyVersionNumber: $new_kvno
	-
	%EOF
}

operatingSystem_attribute() {
	operation="$1"
	## Warning: editing sam.ldb via tdb should only be done when samba4 is not running!
	ldbmodify -H tdb:///var/lib/samba/private/sam.ldb <<-%EOF
	dn: CN=$hostname,OU=Domain Controllers,$samba4_ldap_base
	changetype: modify
	$operation: operatingSystem
	operatingSystem: Univention Corporate Server
	-
	$operation: operatingSystemVersion
	operatingSystemVersion: 3.0
	%EOF
}

let_samba4_manage_etc_krb5_keytab() {
	## Let samba4 manage /etc/krb5.keytab
	if [ -e /etc/krb5.keytab ]; then
		cp /etc/krb5.keytab /etc/krb5.keytab.SAVE
	fi

	ldbmodify -H /var/lib/samba/private/secrets.ldb <<-%EOF
	dn: flatname=$windows_domain,cn=Primary Domains
	changetype: modify
	add: krb5Keytab
	krb5Keytab: /etc/krb5.keytab
	-
	%EOF
}

add_servicePrincipals() {
	{
	cat <<-%EOF
	dn: flatname=$windows_domain,cn=Primary Domains
	changetype: modify
	add: servicePrincipalName
	%EOF

	for spn in "$@"; do
		echo "servicePrincipalName: $spn"
	done
	} | ldbmodify -H /var/lib/samba/private/secrets.ldb
}

remove_port ()
{
	if [ -n "$1" -a -n "$2" ]; then
		echo "$1" | sed -e "s|^${2},||;s|,${2},|,|;s|,${2}$||;s|^${2}$||"
	fi

}

univention-config-registry commit /etc/samba/smb.conf		# 03univention-directory-listener.inst might remove include

univention-config-registry set samba/quota/command='None'	# currently unsupported in samba4

## stop samba3 services and heimdal-kdc if present
if [ -x /etc/init.d/samba ]; then
	/etc/init.d/samba stop
	univention-config-registry set samba/autostart=no
fi
if [ -x /etc/init.d/winbind ]; then
	/etc/init.d/winbind stop
	univention-config-registry set winbind/autostart=no
fi
if [ -x /etc/init.d/heimdal-kdc ]; then
	/etc/init.d/heimdal-kdc stop
	univention-config-registry set kerberos/autostart=no
fi


if [ -z "$samba4_role" ]; then
	case "$server_role" in
		domaincontroller_*)
			domaincontroller=true; break;;
	esac

	if [ "$domaincontroller" = 'true' ]; then
		samba4_role='DC'
	elif [ "$server_role" = "memberserver" ]; then
		samba4_role='MEMBER'
	fi

	univention-config-registry set samba4/role="$samba4_role"
fi


if [ "$samba4_role" = 'DC' ]; then

	## the code in /usr/share/pyshared/samba/provision.py derives the 'domaindn' from the realm, save it for later use
	samba4_ldap_base="DC=$(echo "$kerberos_realm" | sed 's/\./,DC=/g')"
	univention-config-registry set samba4/ldap/base="$samba4_ldap_base"

	## check if we there already is a **domaincontroller** providing the service "Samba 4"
	samba4servicedcs=$(ldapsearch -ZZ -LLL -D "$ldap_hostdn" -y /etc/machine.secret "(&(univentionService=${NAME})(objectClass=univentionDomainController))" cn | sed -n 's/^cn: \(.*\)/\1/p')	## currently there is no u-d-m module computers/dc

	/etc/init.d/samba4 stop

	if [ -z "$samba4servicedcs" ]; then	## we are the first domainctontroller to provide this service

		if [ $JS_LAST_EXECUTED_VERSION -lt 1 ]; then
			## Provision Samba4
			/usr/share/univention-samba4/scripts/setup-s4.sh

		fi

		## Adding DNS records is currently necessary, probably this will can be avoided with dlz-dlopen on samba4
		## see https://wiki.samba.org/index.php/Samba4/HOWTO/Join_a_domain_as_a_DC#A_note_on_DNS_updates
		/usr/share/univention-samba4/scripts/setup-dns-in-ucsldap.sh --dc --gc --pdc "$@"

		operatingSystem_attribute replace

	else	## otherwise we will simply join the new DC

		if [ $JS_LAST_EXECUTED_VERSION -lt 2 ]; then
			## remove slapd from port 389 on upgrade
			if [ -n "$slapd_port" ]; then
				univention-config-registry set slapd/port="$(remove_port "$slapd_port" 389)"
			fi
			if [ -n "$slapd_port_ldaps" ]; then
				univention-config-registry set slapd/port/ldaps="$(remove_port "$slapd_port_ldaps" 636)"
			fi

			/etc/init.d/slapd crestart
			sleep 1
		fi

		extract_binddn_and_bindpwd_from_args "$@"
		samba-tool join "$domainname" "$samba4_role" -U"$dcaccount"%"$bindpwd" --realm="$kerberos_realm"

		## Adding DNS records is currently necessary, probably this will can be avoided with dlz-dlopen on samba4
		## see https://wiki.samba.org/index.php/Samba4/HOWTO/Join_a_domain_as_a_DC#A_note_on_DNS_updates
		# TODO this is non-standard: by definition of FSMO roles, there can only be one PDC emulator in the domain
		/usr/share/univention-samba4/scripts/setup-dns-in-ucsldap.sh --dc --pdc "$@"

		operatingSystem_attribute add

		# set_machine_secret	## currently disabled, seems to break DRS replication

		## determine default sysvol parent for this host from univentionService="S4 Connector"
		if [ -z "$samba4_sysvol_sync_host" ]; then
			s4connectorservicedcs=$(ldapsearch -ZZ -LLL -D "$ldap_hostdn" -y /etc/machine.secret "(&(univentionService=S4 Connector)(objectClass=univentionDomainController))" cn | sed -n 's/^cn: \(.*\)/\1/p')      ## currently there is no u-d-m module computers/dc
			if [ -n "$s4connectorservicedcs" ]; then
				univention-config-registry set samba4/sysvol/sync/host="$s4connectorservicedcs"
			fi
		fi

	fi

	# The windows clients connect to //$domainname/sysvol for GPOs during logon
	# Register the local ips for the forward zone, skip with 'ucr set samba4/dns/domain/register=false'
	is_ucr_true samba4/dns/domain/register
	if [ $? != 1 ]; then
		zone="$(udm dns/forward_zone list "$@" --filter zoneName="$domainname" | sed -ne 's|^DN: ||p')"
		if [ -n "$zone" ]; then
			IPs=$(univention-ldapsearch "(&(relativeDomainname=$hostname)(zoneName=$domainname))" aRecord | sed -ne 's|^aRecord: ||p')
			for ip in $IPs; do
				udm dns/forward_zone modify "$@" --ignore_exists --dn "$zone" --append a="$ip"
			done
		fi
	fi

	## Start samba daemon
	/etc/init.d/samba4 start

	## Kerberos keytab adjustments for Samba 4

	if [ $JS_LAST_EXECUTED_VERSION -lt 1 ]; then
		## Create kerberos service entries for sshd and slapd (ssh and ldapsearch -Y GSSAPI)
		add_servicePrincipals "host/$hostname.$domainname" "ldap/$hostname.$domainname"
	fi

	if [ $JS_LAST_EXECUTED_VERSION -lt 2 ]; then
		let_samba4_manage_etc_krb5_keytab
	fi

elif [ "$samba4_role" = "RODC" ]; then

	## the code in /usr/share/pyshared/samba/provision.py derives the 'domaindn' from the realm, save it for later use
	samba4_ldap_base="DC=$(echo "$kerberos_realm" | sed 's/\./,DC=/g')"
	univention-config-registry set samba4/ldap/base="$samba4_ldap_base"

	/etc/init.d/samba4 stop

	if [ $JS_LAST_EXECUTED_VERSION -lt 1 ]; then
		## remove slapd from port 389 on upgrade
		if [ -n "$slapd_port" ]; then
			univention-config-registry set slapd/port="$(remove_port "$slapd_port" 389)"
		fi
		if [ -n "$slapd_port_ldaps" ]; then
			univention-config-registry set slapd/port/ldaps="$(remove_port "$slapd_port_ldaps" 636)"
		fi

		/etc/init.d/slapd crestart
		sleep 1
	fi

	extract_binddn_and_bindpwd_from_args "$@"
	samba-tool join "$domainname" "$samba4_role" -U"$dcaccount"%"$bindpwd" --realm="$kerberos_realm"

	## Adding DNS records is currently necessary, probably this will can be avoided with dlz-dlopen on samba4
	## see https://wiki.samba.org/index.php/Samba4/HOWTO/Join_a_domain_as_a_DC#A_note_on_DNS_updates
	# TODO this is non-standard: by definition of FSMO roles, there can only be one PDC emulator in the domain
	/usr/share/univention-samba4/scripts/setup-dns-in-ucsldap.sh --dc --pdc "$@"

	operatingSystem_attribute add

	# set_machine_secret	## currently disabled, seems to break DRS replication

	## determine default sysvol parent for this host from univentionService="S4 Connector"
	if [ -z "$samba4_sysvol_sync_host" ]; then
		s4connectorservicedcs=$(ldapsearch -ZZ -LLL -D "$ldap_hostdn" -y /etc/machine.secret "(&(univentionService=S4 Connector)(objectClass=univentionDomainController))" cn | sed -n 's/^cn: \(.*\)/\1/p')      ## currently there is no u-d-m module computers/dc
		if [ -n "$s4connectorservicedcs" ]; then
			univention-config-registry set samba4/sysvol/sync/host="$s4connectorservicedcs"
		fi
	fi

	# The windows clients connect to //$domainname/sysvol for GPOs during logon
	# Register the local ips for the forward zone, skip with 'ucr set samba4/dns/domain/register=false'
	is_ucr_true samba4/dns/domain/register
	if [ $? != 1 ]; then
		zone="$(udm dns/forward_zone list "$@" --filter zoneName="$domainname" | sed -ne 's|^DN: ||p')"
		if [ -n "$zone" ]; then
			IPs=$(univention-ldapsearch "(&(relativeDomainname=$hostname)(zoneName=$domainname))" aRecord | sed -ne 's|^aRecord: ||p')
			for ip in $IPs; do
				udm dns/forward_zone modify "$@" --ignore_exists --dn "$zone" --append a="$ip"
			done
		fi
	fi

	## Start samba daemon
	/etc/init.d/samba4 start

	## Kerberos keytab adjustments for Samba 4

	if [ $JS_LAST_EXECUTED_VERSION -lt 1 ]; then
		## Create kerberos service entries for sshd and slapd (ssh and ldapsearch -Y GSSAPI)
		add_servicePrincipals "host/$hostname.$domainname" "ldap/$hostname.$domainname"
	fi

	if [ $JS_LAST_EXECUTED_VERSION -lt 2 ]; then
		let_samba4_manage_etc_krb5_keytab
	fi

elif [ "$samba4_role" = "MEMBER" ]; then

	extract_binddn_and_bindpwd_from_args "$@"
	samba-tool join "$domainname" "$samba4_role" -U"$dcaccount"%"$bindpwd" --realm="$kerberos_realm"
	univention-config-registry set samba/share/netlogon?no \
									samba/share/sysvol?no

	# set_machine_secret	## currently disabled

fi

/etc/init.d/samba4 restart

if [ $JS_LAST_EXECUTED_VERSION = 0 ]; then
	# Disabled for UCS 3.0 MS2, see https://forge.univention.org/bugzilla/show_bug.cgi?id=23786
	#ucr set dns/backend=samba4
	#if [ -x /etc/init.d/bind9 ]; then
	#	/etc/init.d/bind9 restart
	#fi

	# Wait until the local S4 contains the DNS record
	continue=1
	while [ $continue = "1" ];do
		echo "wait for named ?"
		timeout=`LC_ALL=C host -W 1 $ldap_master 2>&1| grep "has address "`
		if [ -n "$timeout" ]; then
			continue=0
		else
			sleep 1
		fi;
	done
fi


ucs_addServiceToLocalhost "${NAME}" "$@"

joinscript_save_current_version

exit 0

