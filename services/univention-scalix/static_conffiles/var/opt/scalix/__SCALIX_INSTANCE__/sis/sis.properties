# Scalix Search and Index Service properties

# run the index with extended summary data (debug/fun only) (requires index rebuild)
index.index.summary=false

# max size of the index processing queue
index.max.queue.size=200

# max milliseconds to wait before processing
index.max.queue.age=15000

# max numbers of message documents to cache in memory
index.doc.cache.size=500

# number of updates between Lucene index optimizations
index.optimize.frequency=20

# Lucene merge factor - the number of segments on disk to allow before merging
# them into a larger segment.  Larger numbers will result in fewer mergers and
# larger segments which will in turn improve search performance, but this will
# generally be at the cost of increased I/O during indexing (and indexing is
# more common than searching).
# see http://lucene.apache.org/java/docs/api/org/apache/lucene/index/IndexWriter.html#DEFAULT_MERGE_FACTOR
# default 10
index.lucene.mergefactor=10

# Lucene max buffer docs - the number of documents to keep in memory before
# a new segment is created on disk (changing this is not generally useful).
# http://lucene.apache.org/java/docs/api/org/apache/lucene/index/IndexWriter.html#DEFAULT_MAX_BUFFERED_DOCS
# default 10
index.lucene.maxbuffereddocs=10

# content analyzer class (requires index rebuild)
index.content.analyzer.class=com.scalix.index.message.MessageAnalyzer

# MIME message parser class (requires index rebuild)
index.mime.indexer.class=com.scalix.index.message.IndexableMimeMessage

# language to use for indexing, analysis, stemming and searching all messages (requires index rebuild)
# default = English
index.language=German

# lock down requests from given IP addresses only
# default = empty
@!@
import re
interfaceKeyPattern=re.compile('interfaces/[^/]+/address')
interfaceKeys=[ key for key in baseConfig.keys() if interfaceKeyPattern.search(key)]
iplist=[ baseConfig[key] for key in interfaceKeys ]
iplist.append('127.0.0.1')
ipstring=', '.join(iplist)
print 'index.client.whitelist=%s' % ipstring
print '''
# lock down requests from given IP addresses only
# default = empty'''
print 'search.client.whitelist=%s' % ipstring
print '''
# lock down requests to /admin/* from given IP addresses only.
# This includes http://<host>/sis which gets mapped to /sis/admin
# /admin/* is reserved for internal use by SCALIX support staff.
# default: empty'''
print 'indexadmin.client.whitelist=%s' % ipstring
@!@
# default maximum number of results to return; clients generally
# specify the maximum number of search results.
search.max.results=200

# Allow/Restrict search strings to begin with an asterisk (e.g. *ootball)
# which can drive up load if used a lot.
# default: true (restrict with false)
search.client.leading_asterisk_permitted=true

# After a user's search, SIS will cache the Searcher object for a period of
# time. If there has been no more search activity at the end of this period,
# it will release the object and free up open index file descriptors.
# A long duration will improve the performance of subsequent searches, but
# will keep files open longer.
# Default = 600 seconds (10 minutes).
# Set this value in seconds.
search.cache.handle.inactivity_expiry_time=600

platform.url=http://@%@hostname@%@.@%@domainname@%@/api
