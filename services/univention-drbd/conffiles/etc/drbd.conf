# Warning: This file is auto-generated and might be overwritten by
#          univention-config-registry.
#          Please edit the following file instead:
# Warnung: Diese Datei wurde automatisch generiert und kann durch
#          univention-config-registry Ã¼berschrieben werden.
#          Bitte bearbeiten Sie an Stelle dessen die folgende Datei:
#
#         /etc/univention/templates/files/etc/drbd.conf

@!@

# Example:
# drbd/common/syncer/rate: 10M
# drbd/global/usage-count: yes
# drbd/resource/r0/net/cram-hmac-alg: sha1
# drbd/resource/r0/net/shared-secret: FooFunFactory
# drbd/resource/r0/on/thost1/address: 10.1.1.31:7789
# drbd/resource/r0/on/thost1/device: /dev/drbd1
# drbd/resource/r0/on/thost1/disk: /dev/hda7
# drbd/resource/r0/on/thost1/meta_disk: internal
# drbd/resource/r0/on/thost2/device: /dev/drbd1
# drbd/resource/r0/on/thost2/disk: /dev/hda7
# drbd/resource/r0/protocol: C

drbd = {}
drbd['global']={}
drbd['common']={}
drbd['resource'] = {}

for key in baseConfig.keys():

	# Pares the baseConfig values
	if key.startswith('drbd/global/'):
		drbd['global'][key.replace('drbd/global/', '', 1)] = baseConfig[key]

	elif key.startswith('drbd/common/'):
		rkey = key.split('/')[2]
		if rkey in ['handlers', 'startup', 'disk', 'net', 'syncer']:
			if not drbd['common'].has_key(rkey):
				drbd['common'][rkey] = {}
			drbd['common'][rkey][key.replace('drbd/common/%s/' % rkey, '', 1)] = baseConfig[key]
		else:
			drbd['common'][key.replace('drbd/common/', '', 1)] = baseConfig[key]

	elif key.startswith('drbd/resource/'):
		name = key.split('/')[2]
		if not drbd['resource'].has_key(name):
			drbd['resource'][name] = {}

		rkey = key.replace('drbd/resource/%s/' % name, '', 1 )

		if rkey.startswith('on/'):
			if not drbd['resource'][name].has_key('hosts'):
				drbd['resource'][name]['hosts'] = {}
			host = rkey.split('/')[1]
			if not drbd['resource'][name]['hosts'].has_key(host):
				drbd['resource'][name]['hosts'][host]={}

			rrkey = rkey.replace('on/%s/' % host, '', 1)

			drbd['resource'][name]['hosts'][host][rrkey]=baseConfig[key]
		else:
			rrkey = rkey.split('/')[0]
			if rrkey in ['handlers', 'startup', 'disk', 'net', 'syncer']:
				if not drbd['resource'][name].has_key(rrkey):
					drbd['resource'][name][rrkey] = {}
				drbd['resource'][name][rrkey][rkey.replace('%s/' % rrkey, '', 1)] = baseConfig[key]
			else:
				drbd['resource'][name][rrkey] = baseConfig[key]

# write the configuration

if len( drbd['global'] ) > 0:
	print 'global {'
	for key in drbd['global'].keys():
		print '\t%s %s;' % ( key, drbd['global'][key] )
	print '}'

if len( drbd['common'] ) > 0:
	print 'common {'
	for key in drbd['common'].keys():
		if type(drbd['common'][key]) == type({}):
			print '\t%s {' % key
			for kkey in drbd['common'][key].keys():
				print '\t\t%s %s;' % (kkey, drbd['common'][key][kkey])
			print '\t}'
		else:
			print '\t%s %s;' % ( key, drbd['common'][key] )
	print '}'
			
if len( drbd['resource'] ) > 0:
	for r in drbd['resource'].keys():
		print 'resource %s {' % r
		for key in drbd['resource'][r].keys():
			if type(drbd['resource'][r][key]) == type({}):
				if key == 'hosts':
					for host in drbd['resource'][r][key].keys():
						print '\ton %s {' % host
						for khost in drbd['resource'][r][key][host].keys():
							print '\t\t%s %s;' % (khost, drbd['resource'][r][key][host][khost])
						print '\t}'
				else:
					print '\t%s {' % key
					for kkey in drbd['resource'][r][key].keys():
						print '\t\t%s %s;' % (kkey, drbd['resource'][r][key][kkey])
					print '\t}'
			else:
				print '\t%s %s;' % (key, drbd['resource'][r][key])
		print '}'



@!@
