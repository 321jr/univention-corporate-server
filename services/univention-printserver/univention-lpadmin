#!/usr/bin/python2.4
# -*- coding: utf-8 -*-
#
# Univention Print Server
#  wrapper script for lpadmin
#
# Copyright (C) 2004-2010 Univention GmbH
#
# http://www.univention.de/
#
# All rights reserved.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 2 as
# published by the Free Software Foundation.
#
# Binary versions of this file provided by Univention to you as
# well as other copyrighted, protected or trademarked materials like
# Logos, graphics, fonts, specific documentations and configurations,
# cryptographic keys etc. are subject to a license agreement between
# you and Univention.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

import sys, string, re
import pwd, os
from pexpect import *
import univention.baseconfig

args=sys.argv[1:]


baseConfig=univention.baseconfig.baseConfig()
baseConfig.load()

lpadminexec = '/usr/sbin/lpadmin'
for path in [ '/usr/bin/enable', '/usr/sbin/cupsenable' ]:
	if os.path.exists(path):	
		enableexec = path
for path in [ '/usr/sbin/accept', '/usr/sbin/cupsaccept' ]:
	if os.path.exists(path):	
		acceptexec = path

# read machine password
secretFile=open('/etc/machine.secret','r')
pwdLine=secretFile.readline()
machine_password=re.sub('\n','',pwdLine)

machine_uid=pwd.getpwnam('%s$' % (baseConfig['hostname']))[2]
old_uid=os.getuid()
os.setuid(machine_uid)

child = spawn( lpadminexec, args )

i=0
timeout=60
attempt=0
rc = 0

while not i == 3:
	print "expect:"
	i = child.expect(['%s.%s\?' %(baseConfig['hostname'],baseConfig['domainname']), '%s\?' % baseConfig['hostname'], 'localhost\?', EOF], timeout=timeout)
	if i in [0,1,2]:
		child.sendline(machine_password)
		attempt += 1

	if attempt > 3:
		print 'Failed to create the printer with the following command: '
		print '  %s %s' % (lpadminexec, string.join(args, ' '))
		print 'Please check the machine account or the PAM configuration.'
		sys.exit(1)
		
if child.isalive():
	child.close()
if child.exitstatus and child.exitstatus != 0:
	print 'The command "%s %s" returned %d' % (lpadminexec, string.join(args, ' ') , child.exitstatus)
	sys.exit(child.exitstatus)

if '-c' in args:
	groupname = args[args.index('-c')+1]
	#print 'found %s' % groupname
	i = 0
	child = spawn(enableexec, [groupname])
	while not i == 3:
		i = child.expect(['%s.%s\?' %(baseConfig['hostname'],baseConfig['domainname']), '%s\?' % baseConfig['hostname'], 'localhost\?', EOF], timeout=timeout)
		#print "enable %s" % i
		if i in [0,1,2]:
			child.sendline(machine_password)

	if child.isalive():
		child.close()
	if child.exitstatus and child.exitstatus != 0:
		print 'The command "%s %s" returned %d' % (enableexec, groupname, cild.exitstatus)
		sys.exit(child.exitstatus)

	i = 0
	child = spawn(acceptexec, [groupname])
	while not i == 3:
		i = child.expect(['%s.%s\?' %(baseConfig['hostname'],baseConfig['domainname']), '%s\?' % baseConfig['hostname'], 'localhost\?', EOF], timeout=timeout)
		#print "accept %s" % i
		if i in [0,1,2]:
			child.sendline(machine_password)

	if child.isalive():
		child.close()
	if child.exitstatus and child.exitstatus != 0:
		print 'The command "%s %s" returned %d' % (acceptexec, groupname, child.exitstatus)
		sys.exit(child.exitstatus)

sys.exit(0)

