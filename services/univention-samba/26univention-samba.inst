#! /bin/sh
#
# Univention Samba
#  join script
#
# Copyright 2001-2010 Univention GmbH
#
# http://www.univention.de/
#
# All rights reserved.
#
# The source code of this program is made available
# under the terms of the GNU Affero General Public License version 3
# (GNU AGPL V3) as published by the Free Software Foundation.
#
# Binary versions of this program provided by Univention to you as
# well as other copyrighted, protected or trademarked materials like
# Logos, graphics, fonts, specific documentations and configurations,
# cryptographic keys etc. are subject to a license agreement between
# you and Univention and not subject to the GNU AGPL V3.
#
# In the case you use this program under the terms of the GNU AGPL V3,
# the program is provided in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public
# License with the Debian GNU/Linux or Univention distribution in file
# /usr/share/common-licenses/AGPL-3; if not, see
# <http://www.gnu.org/licenses/>.

VERSION=5

. /usr/share/univention-join/joinscripthelper.lib
joinscript_init

rm -f /var/cache/samba/dont_start >/dev/null 2>&1

# during installation samba/autostart was set to no to prevent
# a half configured samba server. Set autostart to yes during first join
if [ "$JS_LAST_EXECUTED_VERSION" = 0 ]; then
	univention-baseconfig set samba/autostart=yes
fi
univention-baseconfig set samba/autostart?yes

# Stop the NFS Kernel Server
nfsd_pid=`pidof nfsd`
if [ -n "$nfsd_pid" ]; then
	test -x /etc/init.d/nfs-kernel-server && /etc/init.d/nfs-kernel-server stop
fi

eval "$(univention-config-registry shell)"

winbind_was_running=0
if [ -x /etc/init.d/winbind ]; then
	if /etc/init.d/winbind status >/dev/null 2>&1; then
		winbind_was_running=1
	fi

	/etc/init.d/winbind stop
fi

if [ "$server_role" = "domaincontroller_slave" -o "$server_role" = "memberserver" ]; then
	univention-baseconfig set samba/user="$ldap_hostdn"
	smbpasswd -w `cat /etc/machine.secret`
	for idmap_ldap_config in alloc ${samba_idmap_domains}; do
		echo "setting idmap secret for ${idmap_ldap_config} from /etc/machine.secret"
		net idmap secret ${idmap_ldap_config} `</etc/machine.secret` 2>/dev/null
	done
else
	univention-baseconfig set samba/user?"cn=admin,$ldap_base"
	/etc/init.d/samba restart >/dev/null 2>&1
	smbpasswd -w `cat /etc/ldap.secret`
	for idmap_ldap_config in alloc ${samba_idmap_domains}; do
		echo "setting idmap secret for ${idmap_ldap_config} from /etc/ldap.secret"
		net idmap secret ${idmap_ldap_config} `</etc/ldap.secret` 2>/dev/null
	done
fi

# The samba server should be up and running for local join
/etc/init.d/samba restart

# parse binddn and bindpwd from command line arguments into shell variables
eval $(echo "$@" | sed -n 's/.*--binddn \(.*\) --bindpwd \(.*\).*/binddn="\1"\nbindpwd="\2"/p')
# map binddn back to uid, returns nothing if no binddn or binddn= cn=admin,..
dcaccount=$(ldapsearch -x -s base -b "$binddn" uid | ldapsearch-wrapper | sed -n 's/^uid: \(.*\)$/\1/p')
if [ -n "$dcaccount" -a -n "$bindpwd" ]; then
	# create samba machine account for this machine
	net rpc join -U${dcaccount}%${bindpwd}
	if [ $? != 0 ]; then
		echo "ERROR: failed to join via net rpc join"
		exit 1
	fi
elif [ -e /etc/backup-join.secret ]; then
	net rpc join -Ujoin-backup%"$(cat /etc/backup-join.secret)"
	if [ $? != 0 ]; then
		echo "ERROR: failed to join via net rpc join"
		exit 1
	fi
fi

# stop samba
restart=0
samba_pid=`pidof smbd`
if [ -n "$samba_pid" ]; then
	/etc/init.d/samba stop >/dev/null 2>&1
	killall smbd nmbd >/dev/null 2>&1
fi

mkdir -p /var/lib/samba/drivers
chgrp -R "Printer-Admins" /var/lib/samba/drivers
chmod g+w /var/lib/samba/drivers
chmod +s /var/lib/samba/drivers

mkdir -p /var/lib/samba/drivers/W32X86
chgrp -R "Printer-Admins" /var/lib/samba/drivers/W32X86
chmod g+w /var/lib/samba/drivers/W32X86
chmod +s /var/lib/samba/drivers/W32X86

# make existing host share container a standard share container
if ldapsearch -x -s base -b "cn=$hostname.$domainname,cn=shares,$ldap_base" > /dev/null; then
	univention-admin container/cn modify $@ --dn "cn=$hostname.$domainname,cn=shares,$ldap_base" --set sharePath=1
fi

if [ -n "$create_home_share" -a "$create_home_share" = "true" ]; then
	univention-admin container/cn create $@ --position "cn=shares,$ldap_base" --ignore_exists --set name=$hostname.$domainname --set sharePath=1
	univention-admin shares/share create $@ --position "cn=$hostname.$domainname,cn=shares,$ldap_base" --ignore_exists --set name=homes --set path=/home --set sambaName=homes --set host=$hostname.$domainname --set writeable=1 --set sambaWriteable=1
	univention-baseconfig unset create/home/share
fi


/etc/init.d/samba restart >/dev/null 2>&1

if [ -n "$nfsd_pid" ]; then
	test -x /etc/init.d/nfs-kernel-server && /etc/init.d/nfs-kernel-server start
fi

if [ $winbind_was_running -eq 1 ]; then
	/etc/init.d/winbind start >/dev/null 2>&1
fi


# sync netlogon share
/usr/share/univention-samba/slave-sync >>/var/log/univention/samba-sync.log

joinscript_save_current_version

exit 0
