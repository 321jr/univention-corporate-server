#! /bin/sh
#
# Univention Samba
#  join script
#
# Copyright (C) 2001-2009 Univention GmbH
#
# http://www.univention.de/
#
# All rights reserved.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 3 as
# published by the Free Software Foundation.
#
# Binary versions of this file provided by Univention to you as
# well as other copyrighted, protected or trademarked materials like
# Logos, graphics, fonts, specific documentations and configurations,
# cryptographic keys etc. are subject to a license agreement between
# you and Univention.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

VERSION=4

if ! test -e "/usr/share/univention-join/.joined"; then
	echo "The server has not joined yet"
	exit 1
fi

touch /usr/lib/univention-install/.index.txt

test -n "`grep "univention-samba v${VERSION} successful" /usr/lib/univention-install/.index.txt`" && exit 1

rm -f /var/cache/samba/dont_start >/dev/null 2>&1

# Stop the NFS Kernel Server
nfsd_pid=`pidof nfsd`
if [ -n "$nfsd_pid" ]; then
	test -x /etc/init.d/nfs-kernel-server && /etc/init.d/nfs-kernel-server stop
fi

eval `univention-baseconfig shell`

winbind_was_running=0
if COLUMNS=200 dpkg -l winbind | grep "^ii  winbind"; then
	if /etc/init.d/winbind status >/dev/null 2>&1; then
		winbind_was_running=1
	fi

	/etc/init.d/winbind stop

	# parse binddn and bindpwd from command line arguments into shell variables
	eval $(echo "$@" | sed -n 's/.*--binddn \(.*\) --bindpwd \(.*\).*/binddn="\1"\nbindpwd="\2"/p')
	# map binddn back to uid, returns nothing if no binddn or binddn= cn=admin,..
	dcaccount=$(ldapsearch -x -s base -b "$binddn" uid | ldapsearch-wrapper | sed -n 's/^uid: \(.*\)$/\1/p')
	if [ -n "$dcaccount" -a -n "$bindpwd" ]; then
		# create samba machine account for this machine
		net rpc join -U${dcaccount}%${bindpwd}
		if [ $? != 0 ]; then
			echo "ERROR: failed to join via net rpc join"
			exit 1
		fi
	fi
fi

# stop samba
restart=0
samba_pid=`pidof smbd`
if [ -n "$samba_pid" ]; then
	/etc/init.d/samba stop >/dev/null 2>&1
	killall smbd nmbd >/dev/null 2>&1
fi

if [ "$server_role" = "domaincontroller_slave" -o "$server_role" = "memberserver" ]; then
	if [ "$server_role" = "memberserver" ]; then
		joinuser="Administrator"
		if [ "$3" == "--bindpwd" ]; then
			passwd=$4
		fi
		if [ "$1" == "--binddn" ]; then
			joinuser=$(ldapsearch -x -LLL -b $2 uid | grep ^uid: | cut -d' ' -f2- | tr -d '\n')
		fi

		if [ -n "$passwd" ]; then
			net join MEMBER -U ${joinuser}%${passwd}
			if [ $? != 0 ]; then
				echo "ERROR: failed to join via net rpc join"
				exit 1
			fi
		fi
	fi

	univention-baseconfig set samba/user="$ldap_hostdn"
	#FIXME
	sleep 2
	smbpasswd -w `cat /etc/machine.secret`
	for idmap_ldap_config in alloc ${samba_idmap_domains}; do
		echo "setting idmap secret for ${idmap_ldap_config} from /etc/machine.secret"
		net idmap secret ${idmap_ldap_config} `</etc/machine.secret` 2>/dev/null
	done
else
	univention-baseconfig set samba/user?"cn=admin,$ldap_base"
	/etc/init.d/samba restart >/dev/null 2>&1
	smbpasswd -w `cat /etc/ldap.secret`
	for idmap_ldap_config in alloc ${samba_idmap_domains}; do
		echo "setting idmap secret for ${idmap_ldap_config} from /etc/ldap.secret"
		net idmap secret ${idmap_ldap_config} `</etc/ldap.secret` 2>/dev/null
	done
fi

mkdir -p /var/lib/samba/drivers
chgrp -R "Printer-Admins" /var/lib/samba/drivers
chmod g+w /var/lib/samba/drivers
chmod +s /var/lib/samba/drivers

mkdir -p /var/lib/samba/drivers/W32X86
chgrp -R "Printer-Admins" /var/lib/samba/drivers/W32X86
chmod g+w /var/lib/samba/drivers/W32X86
chmod +s /var/lib/samba/drivers/W32X86

# make existing host share container a standard share container
if ldapsearch -x -s base -b "cn=$hostname.$domainname,cn=shares,$ldap_base" > /dev/null; then
	univention-admin container/cn modify $@ --dn "cn=$hostname.$domainname,cn=shares,$ldap_base" --set sharePath=1
fi

if [ -n "$create_home_share" -a "$create_home_share" = "true" ]; then
	univention-admin container/cn create $@ --position "cn=shares,$ldap_base" --ignore_exists --set name=$hostname.$domainname --set sharePath=1
	univention-admin shares/share create $@ --position "cn=$hostname.$domainname,cn=shares,$ldap_base" --ignore_exists --set name=homes --set path=/home --set sambaName=homes --set host=$hostname.$domainname --set writeable=1 --set sambaWriteable=1
	univention-baseconfig unset create/home/share
fi

univention-baseconfig set samba/autostart=yes

/etc/init.d/samba restart >/dev/null 2>&1
sleep 2

#FIXME
/etc/init.d/samba stop >/dev/null 2>&1
sleep 2
/etc/init.d/samba start >/dev/null 2>&1

if [ -n "$nfsd_pid" ]; then
	test -x /etc/init.d/nfs-kernel-server && /etc/init.d/nfs-kernel-server start
fi

if [ $winbind_was_running -eq 1 ]; then
	/etc/init.d/winbind start >/dev/null 2>&1
fi

# sync netlogon share
/usr/share/univention-samba/slave-sync >>/var/log/univention/samba-sync.log

test -n "`grep "univention-samba v${VERSION} successful" /usr/lib/univention-install/.index.txt`" || echo "univention-samba v${VERSION} successful" >>/usr/lib/univention-install/.index.txt


exit 0
