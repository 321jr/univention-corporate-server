#!/bin/sh
@%@UCRWARNING=# @%@
### BEGIN INIT INFO
# Provides:          bind9
# Required-Start:    $remote_fs univention-runit
# Required-Stop:     $remote_fs univention-runit
# Should-Start:      $network $syslog slapd samba-ad-dc
# Should-Stop:       $network $syslog slapd samba-ad-dc
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start and stop bind9
# Description:       bind9 is a Domain Name Server (DNS)
#        which translates ip addresses to and from internet names
### END INIT INFO
#
# Copyright 2001-2018 Univention GmbH
#
# http://www.univention.de/
#
# All rights reserved.
#
# The source code of this program is made available
# under the terms of the GNU Affero General Public License version 3
# (GNU AGPL V3) as published by the Free Software Foundation.
#
# Binary versions of this program provided by Univention to you as
# well as other copyrighted, protected or trademarked materials like
# Logos, graphics, fonts, specific documentations and configurations,
# cryptographic keys etc. are subject to a license agreement between
# you and Univention and not subject to the GNU AGPL V3.
#
# In the case you use this program under the terms of the GNU AGPL V3,
# the program is provided in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public
# License with the Debian GNU/Linux or Univention distribution in file
# /usr/share/common-licenses/AGPL-3; if not, see
# <http://www.gnu.org/licenses/>.
#

PATH=/sbin:/bin:/usr/sbin:/usr/bin

# for a chrooted server: "-u bind -t /var/lib/named"
# Don't modify this line, change or create /etc/default/bind9.
OPTIONS=""
RESOLVCONF=no

test -f /etc/default/bind9 && . /etc/default/bind9

test -x /usr/sbin/rndc || exit 0

. /lib/lsb/init-functions
PIDFILE=/run/named/named.pid

check_network() {
    if [ -x /usr/bin/uname ] && [ "X$(/usr/bin/uname -o)" = XSolaris ]; then
	IFCONFIG_OPTS="-au"
    else
	IFCONFIG_OPTS=""
    fi
    if [ -z "$(/sbin/ifconfig $IFCONFIG_OPTS)" ]; then
       #log_action_msg "No networks configured."
       return 1
    fi
    return 0
}

eval "$(univention-config-registry shell dns/backend)"

NAME='bind9'
DESC=$(get_lsb_header_val "$0" Short-Description)

sv_action () { # Silently toggle runit state: $action $service_name
	if [ -e "/etc/runit/univention/$2" ]; then
		 sv -w 30 "$1" "$2" >>/var/log/daemon.log
	fi
}

sv_running () { # Check wanted state: $service name
	local status
	status="$(LC_ALL=C sv status "$1")"
	case "$status" in
	run:*) return 0 ;; # requested running
	down:) return 1 ;; # requested shutdown
	finish:*normally\ down,\ want\ down) return 1 ;; # shutting down
	finish:*normally\ down) return 0 ;; # down due to error
	*) logger -p daemon.notice "Unknown $1 status: $status" ; return 1 ;;
	esac
}

case "$1" in
    start)
	log_daemon_msg "Starting domain name service..." "bind9"

	modprobe capability >/dev/null 2>&1 || true

	# dirs under /run can go away on reboots.
	mkdir -p /run/named
	chmod 775 /run/named
	chown root:bind /run/named >/dev/null 2>&1 || true

	if [ ! -x /usr/sbin/named ]; then
	    log_action_msg "named binary missing - not starting"
	    log_end_msg 1
	fi

	if ! check_network; then
	    log_action_msg "no networks configured"
	    log_end_msg 1
	fi

	rv=0
	case "$dns_backend" in
	samba4)
	    log_progress_msg 'samba4'
	    sv_action start univention-bind-samba4 || rv=$?
	;;
	ldap)
	    log_progress_msg 'ldap'
	    sv_action start univention-bind || rv=$?
	    log_progress_msg 'proxy'
	    sv_action start univention-bind-proxy || rv=$?
	;;
	*)
	    log_progress_msg "Unknown DNS backend $dns_backend"
	    rv=1
	;;
	esac
	log_end_msg $rv
    ;;

    stop)
	log_daemon_msg "Stopping domain name service..." "bind9"
	if ! check_network; then
	    log_action_msg "no networks configured"
	    log_end_msg 1
	fi

	if [ "X$RESOLVCONF" != "Xno" ] && [ -x /sbin/resolvconf ] ; then
	    /sbin/resolvconf -d lo.named
	fi
	rv=0
	log_progress_msg 'proxy'
	sv_action stop univention-bind-proxy || rv=$?
	log_progress_msg 'ldap'
	sv_action stop univention-bind || rv=$?
	log_progress_msg 'samba4'
	sv_action stop univention-bind-samba4 || rv=$?
	log_end_msg $rv
    ;;

    reload|force-reload)
	log_daemon_msg "Reloading domain name service..." "bind9"
	if ! check_network; then
	    log_action_msg "no networks configured"
	    log_end_msg 1
	fi
	rv=0
	case "$dns_backend" in
	samba4)
	    log_action_cont_msg "samba4" && rndc -p 953 reload >/dev/null || rv=$?
	;;
	ldap)
	    log_action_cont_msg "ldap" && rndc -p 55555 reload >/dev/null || rv=$?
	    log_action_cont_msg "proxy" && rndc -p 953 reload >/dev/null || rv=$?
	;;
	*)
	    log_action_cont_msg "Unknown DNS backend $dns_backend"
	    rv=1
	;;
	esac
	log_action_end_msg $rv
    ;;

    restart)
	if ! check_network; then
	    log_action_msg "no networks configured"
	    exit 1
	fi

	log_daemon_msg "Restarting $DESC"
	rv=0
	case "$dns_backend" in
	samba4)
	    log_progress_msg 'ldap'
	    sv_action stop univention-bind || rv=$?
	    log_progress_msg 'proxy'
	    sv_action stop univention-bind-proxy || rv=$?
	    log_progress_msg 'samba4'
	    sv_action restart univention-bind-samba4 || rv=$?
	;;
	ldap)
	    log_progress_msg 'samba4'
	    sv_action stop univention-bind-samba4 || rv=$?
	    log_progress_msg 'ldap'
	    sv_action restart univention-bind || rv=$?
	    log_progress_msg 'proxy'
	    sv_action restart univention-bind-proxy || rv=$?
	;;
	*)
	    log_progress_msg "Unknown DNS backend $dns_backend"
	    rv=1
	;;
	esac
	log_end_msg $rv
    ;;

    crestart)
	case "$dns_backend" in
	samba4)
	    if sv_running univention-bind-samba4
	    then
		"$0" restart
	    fi
	    ;;
	ldap)
	    if sv_running univention-bind || sv_running univention-bind-proxy
	    then
		"$0" restart
	    fi
	    ;;
	*)
	    log_failure_msg "Unknown DNS backend $dns_backend"
	    ;;
	esac
	;;
    
    status)
    	ret=0
	status_of_proc -p ${PIDFILE} /usr/sbin/named bind9 2>/dev/null || ret=$?
	exit $ret
	;;

    *)
	log_action_msg "Usage: $0 {start|stop|reload|restart|crestart|force-reload|status}"
	exit 1
    ;;
esac

exit 0
