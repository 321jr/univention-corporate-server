<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
	"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
	<!ENTITY % extensions SYSTEM "../stylesheets/macros.ent" >
	<!ENTITY % entities SYSTEM "../stylesheets/macros-en.ent" >
	%extensions;
	%entities;
]>
<book lang="en" id='app-provider-4.3'>
<bookinfo>
  <title>Univention App Center for App Provider</title>
</bookinfo>

<chapter id="introduction">
    <title>Introduction</title>

    <para>
        This document is for app providers who want to place their product
        clearly visible for a broad, professional and growing user group. It
        covers the steps on how make the product available as app for
        Univention App Center.
    </para>

    <section id="introduction:start">
	    <title>What is Univention App Center?</title>
        <para>
            Univention App Center is an ecosystem similar to the app stores
            known from mobile platforms like Apple or Google. It provides an
            infrastructure to build, deploy and run enterprise applications on
            Univention Corporate Server (UCS). The App Center uses well-known
            technology like <ulink url="https://www.docker.com/">docker</ulink>.
        </para>
    </section>

    <section id="infrastructure">
        <title>App Center infrastructure</title>

        <para>
            The ecosystem consists of following components:
            <itemizedlist>
                <listitem>
                    <simpara>
                        <emphasis>The App</emphasis> is the software plus the
                        collection of metadata like text description, logo,
                        screenshots and more for the presentation.
                    </simpara>
                </listitem>
                <listitem>
                    <simpara>
                        <emphasis>The App Center Repository</emphasis> is a
                        central server infrastructure managed by Univention
                        that stores the files and data for the app. It is the
                        installation source for the app for UCS.
                    </simpara>
                </listitem>
                <listitem>
                    <simpara>
                        <emphasis>The App Center Module on UCS</emphasis> is
                        part of the web-based management system on UCS. It is the
                        place where administrators install, update and
                        uninstall apps in their UCS environment.
                    </simpara>
                </listitem>
                <listitem>
                    <simpara>
                        <emphasis>The App Catalog</emphasis> is the
                        presentation of the app portfolio on the <ulink
                            url="https://www.univention.com/products/univention-app-center/app-catalog/">
                            Univention website</ulink>.
                    </simpara>
                </listitem>
                <listitem>
                    <simpara>
                        <emphasis>The App Provider Portal</emphasis> is the
                        self-service portal for app providers where they can
                        create and maintain their app.  
                    </simpara>
                </listitem>
                <listitem>
                    <simpara>
                        <emphasis>The Test App Center</emphasis> is the
                        &quot;staging area&quot; for app providers to develop
                        and test their apps.
                    </simpara>
                </listitem>
                <listitem>
                    <simpara>
                        <emphasis>Univention Corporate Server (UCS)</emphasis>
                        is the target platform for the app. UCS is technically
                        a derivative of Debian GNU/Linux.
                    </simpara>
                </listitem>
            </itemizedlist>
        </para>

        <para>
            For building an app the app developer deals with UCS, the app, the
            provider portal and the Test App Center.
        </para>
    </section>
</chapter>

<chapter id="get-started">
    <title>Get Started</title>

    <para>
        This chapter describes the requirements and the steps to create an app
        for Univention App Center. After reading this chapter you can create
        your own app and start with a development and test cycle using the Test
        App Center.
    </para>

    <section id="app-provider-needs">
        <title>What the app provider needs?</title>

        <para>
        </para>

        <section id="app-provider-needs:docker-image">
            <title>Software in a docker image</title>
            <para>
                Your software needs to be provided as <ulink
                    url="https://docs.docker.com/">docker image</ulink>. This
                is the easiest way to deploy software in Univention App Center.
                It is also recommended to publish the docker container to
                <ulink url="https://hub.docker.com/">docker hub</ulink>. This
                makes referencing the image later much easier.  The image must
                have a version tag to distinguish different software versions.
                It later allows updates for the apps.
            </para>
        </section>

        <section id="app-provider-needs:portal-account">
            <title>Account for App Provider Portal</title>

            <para>
                The app provider portal is the app developer's place for self
                service for all the settings around the app.
            </para>

           <orderedlist>
               <listitem>
                   <simpara>
                       To start building your app, you should first get
                       yourself an account for the app provider portal.  Please
                       <ulink
                           url="https://www.univention.com/products/univention-app-center/for-solution-providers/">
                           request your personal account</ulink> on the
                       Univention website and provide some context about the
                       app you have in mind.
                   </simpara>
               </listitem>
               <listitem>
                   <simpara>
                       You will receive an email with your username and
                       instructions on how to set your password.
                   </simpara>
               </listitem>
               <listitem>
                   <simpara>
                       Afterwards you can login to the <ulink
                           url="https://provider-portal.software-univention.de/univention-management-console/">App
                           Provider Portal</ulink>.
                   </simpara>
               </listitem>
           </orderedlist>
        </section>
    </section>

    <section id="create-app-with-docker">
        <title>Create app with a docker image</title>

        <para>
            This section describes the steps how to create the app in the App
            Provider Portal and use a docker image.
        </para>

        <para>
            <figure id="create-app-with-docker:create-app">
                <title>Add a new App</title>
                <graphic scalefit="1" width="275px" fileref="illustrations/app_portal_new_app.png"/>
            </figure>
        </para>

        <orderedlist>
            <listitem>
                <simpara>
                    In the App Provider Portal select the
                    <guimenu>Apps</guimenu> module in the
                    <guimenu>Favorites</guimenu> or <guimenu>Software</guimenu>
                    section.
                </simpara>
            </listitem>
            <listitem>
                <simpara>
                    Click on <guimenu>Add a new App</guimenu> and provide the following settings.
                </simpara>
                    <itemizedlist>
                    <listitem>
                        <simpara>
                            <emphasis>App ID</emphasis> is like a primary key.
                            You should choose it carefully, because it cannot
                            be changed once the app is released to the public.
                            It should only use small capitals, dashes and numbers.
                            Please do not include version strings in here.
                        </simpara>
                    </listitem>
                    <listitem>
                        <simpara>
                            <emphasis>App Name</emphasis> is the name of your
                            app. It is used to display the app on the overview
                            pages. This attribute can be changed any time later.
                        </simpara>
                    </listitem>
                    <listitem>
                        <simpara>
                            <emphasis>App Version</emphasis> is the version of
                            your app. The App Center distinguishes versions and
                            uses them to handle app updates. Once the app is
                            released, this attribut cannot be changed anymore.
                        </simpara>
                    </listitem>
                    <listitem>
                        <simpara>
                            <emphasis>UCS Version</emphasis> is the UCS version
                            your app should start to be available on. Please
                            note: As the App is a container and has little
                            interaction with the host system, it is unnecessary
                            to publish a new version for UCS 4.3, if it has
                            already been published for UCS 4.2. UCS 4.3 systems
                            may very well use the App - if you specify
                            <literal>SupportedUCSVersion=4.2-0, 4.3-0</literal>
                            in your 4.2 App. It does not really matter for
                            which UCS version you publish your App. But if you
                            are publishing it in various UCS versions, you need
                            to also test various UCS versions.
                        </simpara>
                    </listitem>
                    <listitem>
                        <simpara>
                            <emphasis>File under</emphasis> refers to the
                            organization that the app belongs to. Please select
                            your organization here or otherwise the app will not
                            show up in the listing for you.
                        </simpara>
                    </listitem>
                    </itemizedlist>
            </listitem>
        </orderedlist>

        <section id="create-app-with-docker:image">
            <title>Docker image</title>

            <orderedlist>
                <listitem>
                    <simpara>
                        In your app go to the tab <guimenu>Docker</guimenu>.
                    </simpara>
                </listitem>
                <listitem>
                    <simpara>
                        Activate the checkbox <guimenu>Use docker container technology</guimenu>.
                    </simpara>
                </listitem>
                <listitem>
                    <simpara>
                        Enter the name of your image to <guimenu>Docker
                            image</guimenu>. Grab the name of your image from
                        docker hub for example
                        <literal>univention/ucs-master-amd64:4.2-2</literal>.
                    </simpara>
                </listitem>
            </orderedlist>

            <important>
                <para>
                    Please add the version tag explicitly. The App Center
                    distinguishes different app versions and handles updates
                    accordingly.
                </para>
            </important>

            <note>
                <para>
                    The App Center does currently <ulink
                        url="https://forge.univention.org/bugzilla/show_bug.cgi?id=43612">not
                        support multi container setups</ulink>. The container
                    needs to include all services needed for the software,
                    except the database.  The App Center takes care of
                    providing a database management system directly on the
                    docker host that can be used by the docker container.
                    Supported are MySQL and PostgreSQL. See <xref
                        linkend="create-app-with-docker:database" />.
                </para>
            </note>
        </section>

        <section id="create-app-with-docker:description">
            <title>Logo and description</title>
            <para>
                On your app's <guimenu>General</guimenu> tab please provide a
                description in English and logos for your software. Start with
                a short and a long description. It gives an impression on how
                it will look like during later testing.
            </para>
            <para>                
               On the same tab you can upload two logos: A default icon that is
               shown on the the app tile in the overview. For optimal
               presentation it should be more of a square ratio. The second can
               be more detailed and can for example include the software name.
               Please provide the logos in SVG format.
           </para>
           <para>
               Those settings can be changed at any time later. For a more
               detailed description on the app presentation and notes on the
               translation, please have a look at <xref
                   linkend="app-presentation" />.
           </para>
        </section>

        <section id="create-app-with-docker:defaults">
            <title>Change defaults</title>
            <!--
            FIXME: This seems to be fixed in the portal already. There it
            reads: "CMD for the Docker App. If Entrypoint is defined in the
            Docker Image, these are the parameters for it when starting the
            App. If not, this is the complete command that is run when the App
            is started. Leave emtpy for image defaults."

            TODO: If nothing needs to be changed here, remove the section completely.
            -->
            <para>
                Set the docker entry-point in the section <guimenu>Advanced
                    docker settings</guimenu> at <guimenu>Entrypoint for the
                    Docker App</guimenu>.
            </para>
        </section>

        <section id="create-app-with-docker:volumes">
            <title>Persistent data with volumes</title>
            <para>
                By default files created inside a container are stored in it,
                but they don't persist when the container is no longer running,
                removed or is exchanged with a newer version. As solution
                docker offers <ulink
                    url="https://docs.docker.com/storage/volumes/">volumes</ulink>,
                a mechanism for persisting data generated and used by docker
                containers. A volume is a directory on the docker host that is
                mounted inside the docker container.
            </para>
            <para>
                <!--
                FIXME: @Dirk: There are definitions for paths and files. Both
                seems to work. Is this correct?
                -->
                To define volumes for your app, please go to the
                <guimenu>Mounted volumes</guimenu> section on
                <guimenu>Docker</guimenu> tab. Add an entry for each volume
                and define the directory or file path on the host in the
                first field and the destination in the container in the second
                field. Leave the second field empty for the same path.
            </para>
            <para>
                For example:
                <itemizedlist>
                    <listitem>
                        <simpara>
                            <option>Host</option>: <userinput>/var/lib/suitecrm_etc</userinput>
                        </simpara>
                    </listitem>
                    <listitem>
                        <simpara>
                            <option>Docker container</option>: <userinput>/etc/suitecrm</userinput>
                        </simpara>
                    </listitem>
                </itemizedlist>
            </para>
        </section>

        <section id="create-app-with-docker:web-interface">
            <title>Web interface</title>
            <para>
                Many docker apps expose a web interface to the outside world,
                e.g. via the port 8080. The App Center on UCS takes care to map
                this web interface from some relative link to this port and adds a
                reverse proxy configuration to the host's webserver
                configuration.
            </para>
            <para>
                In the <guimenu>Web interface</guimenu> section on the
                <guimenu>General</guimenu> tab in your app, you can enter the
                relative path and which ports should be proxied.  For example,
                to map the containers ports 80 and 443 to
                <userinput>/myapp</userinput>, the following settings have to
                be made:
                <itemizedlist>
                    <listitem>
                        <simpara>
                            <option>Relative URL to web application</option>:
                            <userinput>/myapp</userinput>
                        </simpara>
                    </listitem>
                    <listitem>
                        <simpara>
                            <option>HTTP port of web application</option>:
                            <userinput>80</userinput>
                        </simpara>
                    </listitem>
                    <listitem>
                        <simpara>
                            <option>HTTPS port of web application</option>:
                            <userinput>443</userinput>
                        </simpara>
                    </listitem>
                    <listitem>
                        <simpara>
                            <option>Supported protocols by the container's web
                                interface</option>: On the tab
                            <guimenu>Docker</guimenu> in the section
                            <guimenu>Advanced docker settings</guimenu>, select
                            <userinput>HTTP and HTTPS</userinput>, if both
                            protocol schemes should be covered.
                        </simpara>
                    </listitem>
                </itemizedlist>
            </para>
        </section>

        <section id="create-app-with-docker:ports">
            <title>Ports</title>
            <para>
                If your app needs to occupy ports on the host that need to be
                passed along to the container in order work properly, they can
                be defined in the <guimenu>Port redirection</guimenu> section
                on the <guimenu>Docker</guimenu> tab. Here you can define a
                list of ports that the docker host shall exclusively acquire
                for the docker container. Ports defined here cannot be used by
                other services or other docker containers on the UCS host.
            </para>
            <para>
                For example, the solution exposes API under the dedicated port
                <userinput>5555</userinput>. This port would be predestined to
                be defined here.
            </para>
        </section>

        <section id="create-app-with-docker:database">
            <title>Database</title>
            <para>
                Many applications need a relational database management system
                (<wordasword>RDMS</wordasword>) somewhere in the environment to
                function properly. If the app needs such a database the App
                Center takes care of providing one directly on the docker host.
                In two sections on the <guimenu>Docker</guimenu> tab the
                appropriate settings can
                be made.
            </para>
            <para>
                In the <guimenu>Database settings for docker
                    container</guimenu> section the settings for the database are
                defined. MySQL and PostgreSQL are supported. Database user,
                database name and the path to the password file can be
                specified. Upon installation of the app, the App Center
                installs the defined database on the docker host, creates a
                database with the defined settings and saves the password in a
                file for later use.
            </para>
            <para>
                In the <guimenu>Environment database variables</guimenu> the
                mapping of the database settings to the environment variables
                in the container is defined. For example, if the container
                expects the database hostname in <envar>DATABASE_HOST</envar>,
                it has to be entered in the field <guimenu>Variable containing
                    the server providing the database</guimenu>. There are also
                fields for the database port, user, password, database name and
                the password file.
            </para>
        </section>
    </section>
</chapter>

<!--
TODO: Stefan
-->
<chapter id="connection-idm">
    <title>Connection with Identity Management</title>

    <para>
		One of the UCS key features is the integrated identity management (IDM).
		With this central identity management, users benefit, among other things, from a single login independent of which services or systems they use.
		It is highly recommended to integrate the app into the identity management system.
    </para>

    <para>
		If the app should benefit from the identity management, the flag <emphasis>Add activation checkbox for App in UCS user management</emphasis>
		should be activated in the App Provider Portal.
		This extends the IDM by a checkbox and an administrator can activate or deactivate each user individually for the app.
		It is also possible to make significantly more complex settings. See <xref linkend="user-rights-management" /> for more details.
    </para>

    <section id="provisioning">
        <title>Provisioning</title>

        <para>
			There are different ways in which applications can access provisioning information. The following describes a pull and a push-based procedure.
        </para>

        <section id="provisioning:pull">
            <title>Automatically via LDAP connection (Pull)</title>
            <para>
				UCS stores the user and group information in an OpenLDAP based directory. Thus, the default information can be accessed via the LDAP protocol.
				Objects are identified by an LDAP filter. The following filter can be used to search for users <wordasword>(univentionObjectType=users/user)</wordasword>
				and for groups the filter <wordasword>(univentionObjectType=groups/group)</wordasword> can be used.
            </para>
            <para>
				If the user activation is used (<guimenu>Add activation checkbox for App in UCS user management</guimenu>), the following LDAP filter can be used:
				<wordasword>(&amp;(univentionObjectType=users/user)(myappActivated=TRUE))</wordasword>.
				The string <wordasword>myapp</wordasword> has to be replaced with the <wordasword>appid</wordasword>.
            </para>
            <para>
				The parameters for the LDAP server can be read from the environment variables:
				<itemizedlist>
					<listitem>
						<simpara>
     						<option>LDAP_SERVER_NAME</option>: The fully-qualified host name of the OpenLDAP server the App may connect to.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
    						<option>LDAP_SERVER_PORT</option>: The port of the OpenLDAP server the App may connect to.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
    						<option>LDAP_SERVER_ADDITION</option>: A list of alternative OpenLDAP servers. These values should be used for failover.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
    						<option>LDAP_BASE</option>: The base for the whole LDAP database, e.g., <uri>dc=mydomain,dc=intranet</uri> or <uri>o=mydomain</uri>.
						</simpara>
					</listitem>
				</itemizedlist>
				<important>
					<para>
						As a rule, the LDAP basis should not be further restricted. Many environments store users below <uri>cn=users</uri>, but this is not the case in all environments.
					</para>
				</important>
            </para>

            <para>
				By default, the OpenLDAP server in UCS does not allow anonymous authentications. For every app a user account is created. The account has
				read access to the LDAP directory. The username is passed as the environment variable <option>LDAP_HOSTDN</option>. The password is written in the file <filename>/etc/machine.secret</filename>.
				The credentials are not changed when an app is upgraded. But they change if an App is reinstalled. 
            </para>
        </section>

        <section id="provisioning:push">
            <title>Automatically via IDM notifications (Push)</title>
            <para>
				An app can be notified by the IDM system when users or groups are created, modified or deleted. For each change, a file is created in
				a specific directory. The app can either poll the directory or register a command that is executed when a file is created. The app should
				then delete the files.
            </para>
            <para>
				The configuration for these IDM notifications can be done on the <option>LDAP Listener</option> tab in the App Provider Portal.
				It can be configured which object types are watched. Currently, users and groups are supported.
				In addition, a script is specified which is executed as soon as a change is made. The script is executed in the container.
				If the app container contains such a script, it can be executed by the script which is defined in the App Provider Portal, for example
<programlisting language="sh">
#/bin/sh
/usr/sbin/app-connector
</programlisting>
            </para>
            <para>
				The files are created in the directory <filename>/var/lib/univention-appcenter/apps/$appid/data/listener/</filename>.
            </para>
            <para>
				All files are JSON with one dictionary and the following content:
				<itemizedlist>
					<listitem>
						<simpara>
    						<option>entry_uuid</option>: A unique identifier for the object. It does not change even if the object is moved. The script certainly wants to
							identify objects by this attribute.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
    						<option>dn</option>: The distinguished name of the LDAP object.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
    						<option>type</option>: The type of the object, i.e., "users/user", or "groups/group".
						</simpara>
					</listitem>
					<listitem>
						<simpara>
    						<option>attributes</option>: A dictionary of the attributes of this object. The content is defined by the UDM (Univention Directory Manager)
							representation of the object. If it is null instead, the object has been deleted.
						</simpara>
					</listitem>
				</itemizedlist>
            </para>
        </section>
    </section>

    <section id="authentication">
        <title>Authentication</title>

        <para>
			There are different ways in which applications can authenticate the against the UCS identity management system.
        </para>

        <section id="authentication:ldap">
            <title>LDAP</title>
            <para>
				UCS stores the user and group information in an OpenLDAP based directory. Thus, the default information can be accessed via the LDAP protocol.
				Objects are identified by an LDAP filter. The following filter can be used to search for users <wordasword>(univentionObjectType=users/user)</wordasword>
				and for groups the filter <wordasword>(univentionObjectType=groups/group)</wordasword> can be used.
            </para>
            <para>
				If the user activation is used (<guimenu>Add activation checkbox for App in UCS user management</guimenu>), the following LDAP filter can be used:
				<wordasword>(&amp;(univentionObjectType=users/user)(myappActivated=TRUE))</wordasword>.
				The string <wordasword>myapp</wordasword> has to be replaced with the <wordasword>appid</wordasword>.
            </para>
            <para>
				The parameters for the LDAP server can be read from the environment variables:
				<itemizedlist>
					<listitem>
						<simpara>
     						<option>LDAP_SERVER_NAME</option>: The fully-qualified host name of the OpenLDAP server the App may connect to.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
    						<option>LDAP_SERVER_PORT</option>: The port of the OpenLDAP server the App may connect to.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
    						<option>LDAP_SERVER_ADDITION</option>: A list of alternative OpenLDAP servers. These values should be used for failover.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
    						<option>LDAP_BASE</option>: The base for the whole LDAP database, e.g., <uri>dc=mydomain,dc=intranet</uri> or <uri>o=mydomain</uri>.
						</simpara>
					</listitem>
				</itemizedlist>
				<important>
					<para>
						As a rule, the LDAP basis should not be further restricted. Many environments store users below <uri>cn=users</uri>, but this is not the case in all environments.
					</para>
				</important>
            </para>

            <para>
				By default, the OpenLDAP server in UCS does not allow anonymous authentications. For every app a user account is created. The account has
				read access to the LDAP directory. The username is passed as the environment variable <option>LDAP_HOSTDN</option>. The password is written in the file <filename>/etc/machine.secret</filename>.
				The credentials are not changed when an app is upgraded. But they change if an App is reinstalled. 
            </para>
        </section>
<!--
        <section id="authentication:saml">
            <title>SAML</title>
            <para>
            </para>
        </section>
-->
        <section id="authentication:kerberos">
            <title>Kerberos</title>
            <para>
				UCS integrates a Kerberos server by default. As usual with Kerberos, the data for the Kerberos configuration can be obtained from the DNS. By default, the
				DNS domain name is passed through the <option>DOMAINNAME</option> environment variable. The following settings can then be queried via DNS:
				<itemizedlist>
					<listitem>
						<simpara>
							<emphasis>Kerberos Realm</emphasis>: It an be queried by the TXT record <option>_kerberos.DOMAINNAME</option>
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							<emphasis>Kerberos KDC</emphasis>: It an be queried by the SRV records <option>_kerberos._tcp.DOMAINNAME</option> and  <option>_kerberos._udp.DOMAINNAME</option>.
						</simpara>
					</listitem>
				</itemizedlist>
            </para>
        </section>
<!--
        <section id="authentication:openid-connect">
            <title>OpenID connect</title>
            <para>
            </para>
        </section>
-->
    </section>

    <section id="user-rights-management">
        <title>User rights management</title>
        <para>
        </para>
    </section>

</chapter>

<chapter id="app-lifecycle">
    <title>App life cycle</title>

    <para>
        This chapter is about the life cycle of an app from the development,
        over its life in the public to termination. The life cycle applies to
        the app overall and to every single version, except the termination.
        App versions are not explicitely terminated. They are superseded by the
        next version.
    </para>

    <section id="development">
        <title>Development</title>
        <para>
            Every app starts with the development. It involves the definition
            of the app in the app provider portal, providing the software
            solution as docker container and the integration of the solution
            with UCS, for example in the identity management area. See <xref
                linkend="get-started" />.
        </para>
        <para>
            Typically, the solution is already available as docker image. The
            first step therefore is to have this image up and running as
            container by the App Center. The second step usually handles the
            integration, usually with the identity management in UCS, see <xref
                linkend="connection-idm" />.
        </para>
    </section>

    <section id="testing">
        <title>Testing</title>
        <para>
            Testing the app is the final part of the development. It typically
            involves a combination of manual and automatic tests. In order to
            test your app with UCS, please follow these instructions.
        </para>

        <section id="testing:download">
            <title>Download UCS</title>
            <para>
                Download UCS to get yourself a copy of UCS free of charge from
                the <ulink
                    url="https://www.univention.com/downloads/ucs-download/">Univention
                    website</ulink>. You can choose an ISO image or a
                pre-installed virtual machine image for various virtualization
                hypervisors.
            </para>
        </section>

        <section id="testing:setup">
            <title>Initial UCS setup</title>
            <para>
                Please refer to the <ulink
                    url="https://docs.software-univention.de/quickstart-en.html">UCS
                    Quickstart Guide</ulink> for the first steps about
                installation and initial setup.
            </para>
        </section>

        <section id="testing:test-app-center">
            <title>Test App Center</title>
            <para>
                Switch to the Test App Center and test your app directly on UCS.
<programlisting>
univention-install univention-appcenter-dev
univention-app dev-use-test-appcenter
</programlisting>
            </para>
        </section>

        <section id="testing:install">
            <title>Install the app</title>
            <para>
                Up until here, your app is available in the Test App Center and
                you have a UCS system up and running that is configured against
                the Test App Center. The app can be installed via the &ucsUMC;.
                UMC consists of several modules and one of them is called
                <guimenu>App Center</guimenu>. Open this module and install
                your app from there.
            </para>

            <para>
                The following points are mandatory for the App to be published:
                <itemizedlist>
                    <listitem>
                        <simpara>
                            The App has to install without user interaction.
                        </simpara>
                    </listitem>
                    <listitem>
                        <simpara>
                            The App may not negatively impact UCS' core services.
                        </simpara>
                    </listitem>
                    <listitem>
                        <simpara>
                            The App has to uninstall without leaving any remainders that interfere with UCS' core services.
                        </simpara>
                    </listitem>
                </itemizedlist>
            </para>

            <para>
                When installing the App, also mind README information that you
                may have defined on the <guimenu>README files</guimenu> in your
                app in the App Provider Portal. An Administrator expects an App
                to be fully configured after the installation. If something is
                needed in order to use the App (e.g., activating users for the
                service), it should be described in the appropriate README
                section.
            </para>
        </section>

        <section id="testing:upgrade">
            <title>Upgrade the app</title>
            <para>
                Once you have several version of the app, the upgrade should be
                tested, as well. The App Center UMC module only allows the
                installation of the latest app version. To test an upgrade of
                your app, please go to the console and installed a version
                explicitely:

                <programlisting>
                    univention-app install myapp=1.0
                </programlisting>

                Afterwards, you can go back to the App Center UMC module.
                There, your app should show up with the update symbol
                indicating the availability of an update. Continue and perform
                the app upgrade.
            </para>
        </section>

        <section id="testing:deactive-test-app-center">
            <title>Deactivate the Test App Center</title>
            <para>
                To switch back to the productive App Center, please run:

                <programlisting>
                    univention-app dev-use-test-appcenter --revert
                </programlisting>
            </para>
        </section>

        <section id="testing:automation-for-providers">
            <title>Automated testing for App Providers</title>
            <para>
                Univention always runs automated tests on an app before it
                released. This testing infrastructure can be used by the app
                provider to increase the test coverage for the app. This can
                drastically safe manual testing efforts.
            </para>

        <!-- 
        TODO: Section about how providers can use testing infrastructure for automated tests.
        -->
            <para>
            </para>
        </section>
    </section>

    <section id="approval">
        <title>Two-side approval</title>
        <para>
            Testing the app also involves to give an approval for the release
            of the app. Each app in the App Center requires a two-side approval,
            one from the app provider and one from Univention. The app provider
            starts with the process and performs its tests to give the approval
            for its app.
        </para>
        <para>
            The app provider's approval is given by clicking on
            <guimenu>Publish App</guimenu> in the App Provider portal. The
            Univention App Center team is notified and they will start the
            automated tests. As soon as the automated tests are successful, the
            second approval is available and the app is ready to be released.
        </para>
        <para>
            The automated tests conducted by Univention test for installation,
            deinstallation and re-installation of the app for different UCS
            system roles. They check for proper operation of the UCS services.
            No app functionality will be tested. It is rather ensured that the
            app does not break UCS functionality.
        </para>
    </section>

    <section id="release">
        <title>Release</title>
        <para>
            As soon as the app is ready for release, it is copied to the
            productive App Center by the Univention App Center team. The app
            will be visible in the App Center UMC module immediately for all
            UCS users. The app catalog is updated automatically and shows the
            new app.
        </para>
        <para>
            Besides the technical testing described above, the first release
            also undergoes a review process on the app presentation. The app
            description is checked for plausibility, understandability and for
            the App Center context.
        </para>
    </section>

    <section id="updates">
        <title>Updates</title>
        <para>
            After the release of the first version the app enters the
            maintenance mode and receives updates from the app provider. The
            evolution of an app is represented by its version. In order to
            provide an update for your app, follow these steps:

            <orderedlist>
                <listitem>
                    <simpara>
                        Go to the <guimenu>Apps</guimenu> UMC module in the app
                        provider portal and search your app.
                    </simpara>
                </listitem>
                <listitem>
                    <simpara>
                        Create a new version of the app: Mouse over the app's
                        tile, click the menu in the upper right corner of the
                        tile and select <guimenu>New App Version</guimenu>.
                    </simpara>
                </listitem>
                <listitem>
                    <simpara>
                        Enter the values for source and target version. The
                        provider portal will then copy the source app to the
                        target.
                    </simpara>
                </listitem>
                <listitem>
                    <simpara>
                        Open the new app version and make the appropriate
                        changes, e.g. the version tag for the docker image.
                        Usual places for changes involve the scripts and maybe
                        the integration. Texts and logos should be checked if
                        they are still up to date.
                    </simpara>
                </listitem>
            </orderedlist>
        </para>

        <para>
            <figure id="app-life-cycle:update:new-version">
                <title>Add a new App</title>
                <graphic scalefit="1" width="275px" fileref="illustrations/app_portal_new_version.png"/>
            </figure>
        </para>
    </section>

    <section id="termination">
        <title>Termination (end of life)</title>
        <para>
            If you as app provider decide to discontinue an app and stop the
            maintenance, the app can be terminated by setting it end of life.
            As soon as an app is end of life, users won't be able to install
            it. Users that already have the app install, will see a
            notification in the App Center that informs them about the
            termination and that they should look for alternative solutions.
        </para>
        <para>
            You can terminate the app by going to your app's configuration in
            the app provider portal. Please go to the
            <guimenu>Advanced</guimenu> tab to the section <guimenu>Custom
                entries</guimenu>. Create a new custom entry with the
            <option>Custom key</option> <userinput>EndOfLife</userinput> and
            the <option>Custom value</option> <userinput>True</userinput>.
            Afterwards press <guimenu>Sync to Test App Center</guimenu> and
            <guimenu>Publish App</guimenu>.
        </para>
    </section>

    <section id="certificates">
        <title>Certificates</title>
        <para>
            UCS provides a certificate infrastructure for secure communication
            protocols. See <ulink
                url="http://docs.software-univention.de/manual.html#domain:ssl">SSL
                certificate management</ulink> in the UCS manual.
        </para>
        <para>
            Apps may need access to the UCS certificate infrastructure or need
            to be aware of changes to the certificates. Starting with UCS 4.3-0
            errata91 the Univention App Center provides a simple way to manage
            certificates inside an App.
        </para>
        <para>
            This is simply a new action called
            <guimenu>update-certificates</guimenu> in the App Center which is
            called automatically during the installation and upgrade of Apps
            (but can also be executed manually) and gives Apps a simple way to
            gain access to certificates and to react upon changes to
            certificates.
        </para>
<programlisting>
# update all apps
-> univention-app update-certificates

# update app "my-app"
-> univention-app update-certificates my-app
</programlisting>

        <para>
            What happens update-certificates?
            <itemizedlist>
                <listitem>
                    <simpara>
                        The UCS root CA certificate is copied to <filename>/usr/local/share/ca-certificates/ucs.crt</filename> inside the container.
                    </simpara>
                </listitem>
                <listitem>
                    <simpara>
                        <guimenu>update-ca-certificates</guimenu> is executed inside the container.
                    </simpara>
                </listitem>
                <listitem>
                    <simpara>
                        The UCS root CA certificate is copied to <filename>/etc/univention/ssl/ucsCA/CAcert.pem</filename> inside the container.
                    </simpara>
                </listitem>
                <listitem>
                    <simpara>
                        The docker host UCS certificate is copied to <filename>/etc/univention/ssl/docker-host-certificate/{cert.pem,private.key}</filename> and <filename>/etc/univention/ssl/$FQDN_DOCKER_HOST/{cert.pem,private.key}</filename>.
                    </simpara>
                </listitem>
            </itemizedlist>
        </para>
        <para>
            Every app can define a <guimenu>update_certificates</guimenu>
            script.
        </para>
        <para>
            Example:
<programlisting>
#!/bin/bash
# cat the UCS root CA to the App's root CA chain
cat /etc/univention/ssl/ucsCA/CAcert.pem >> /opt/my-app/ca-bundle.crt
service my-app-daemon restart
</programlisting>
        </para>

    </section>

</chapter>

<!--
TODO: Nico
-->
<chapter id="app-presentation">
    <title>App presentation</title>

    <para>
        This chapter is about how the app is presented to the user with texts,
        logos, screenshots and videos. The contents are part of the app
        configuration. They are shown to the user in the App Center UMC module
        in UCS and on the Univention website in the <ulink
            url="https://www.univention.com/products/univention-app-center/app-catalog/">App
            Catalog</ulink>.
    </para>

    <section id="logos">
        <title>Logos</title>
        <para>
            All logos uploaded to the app provider portal have to be SVG
            format, which is most flexible for the presentation purposes. When
            SVG files are created, please make sure that fonts are converted to
            paths before export. Otherwise it may happen that another font is
            used depending on the user's endpoint where the presentation is
            rendered.
        </para>
        <para>
            The logos can be uploaded on the <guimenu>General</guimenu> tab in
            the <guimenu>Logos</guimenu> section. Two icons are needed: One for
            the app tile on the overview page and a more detailed logo for the
            app page. The tile only has limited space in square format. Please
            make sure, your logo can still be recognized. The detailed logo is
            not limited. Most logos for this slot have a landscape orientation.
            The App Center and the App Catalog take care of the appropriate
            scaling.
        </para>
    </section>

    <section id="screentshots">
        <title>Screenshots and videos</title>
        <para>
            Screenshots and videos are a good way to introduce the solution to
            the user. To add screenshots please go to the <guimenu>Screenshots
                and videos</guimenu> tab. Screenshots can be in PNG or JPG
            format and are uploaded here. Videos have to be published on
            YouTube the complete YouTube link has to provided in the app
            provider portal. You can add as many screenshots and videos you
            like. Please keep in mind that the screenshots and videos in this
            tab must be for an English speaking audience.
        </para>
        <para>
             If you have the same screenshots in German, it is recommended that
             you add them, as well, in the <guimenu>Translations</guimenu> tab
             in the <guimenu>Screenshots and videos</guimenu> section.
        </para>
        <para>
            Please use comprehensive visualizations which make it easier to
            understand the text. Give the image files sensible names including
            the keywords. An example of a bad file name for an image would be
            “app_76bz3.jpg”, whereas “app_name.jpg” would be much better.
        </para>
    </section>

    <section id="description">
        <title>Description</title>
        <para>
            The description is the text that introduces your solution to the
            user and thus is very important to keep their attention.  Here are
            some tips that are intended to help you to present your app in as
            user-friendly, customer-oriented, and search-engine-optimized
            manner as good as possible. At a glance:
            <itemizedlist>
                <listitem>
                    <simpara>
                        Unique content
                    </simpara>
                </listitem>
                <listitem>
                    <simpara>
                        Content: What does the app do? Describe the added value and provide examples.
                    </simpara>
                </listitem>
                <listitem>
                    <simpara>
                        The app is running on UCS. What is the added value that the combination of UCS and the app offers to the customer?
                    </simpara>
                </listitem>
                <listitem>
                    <simpara>
                        At least 300 words.
                    </simpara>
                </listitem>
                <listitem>
                    <simpara>
                        Please structure the text in paragraphs and use subheadings and lists.
                    </simpara>
                </listitem>
                <listitem>
                    <simpara>
                        Emphasize product benefits and list them.
                    </simpara>
                </listitem>
                <listitem>
                    <simpara>
                        Bear search engines in mind and use Keywords.
                    </simpara>
                </listitem>
                <listitem>
                    <simpara>
                        Furnish links with all HTML attributes
                    </simpara>
                </listitem>
                <listitem>
                    <simpara>
                        Include supporting images/screenshots and define them
                        in the app metadata (not within description).
                    </simpara>
                </listitem>
            </itemizedlist>
        </para>

        <para>
            The description is provided in HTML format. The text editor in the
            provider portal provides decent functionality. If you need more
            control on the HTML, you can switch to HTML source mode and edit
            the HTML directly. Please don't use specific styles, because they
            may distract the overall impression.
        </para>
        <para>
            The important aspect here is that the content of your app
            description is unique (keyword: unique content). Please do not
            simply copy the product description from your own page, but instead
            compose a new, original text. This text should be aimed at
            approaching potential customers. Explain what the app can do and
            the added value it offers a user. Examples are also an excellent
            idea. In addition, you should emphasize the advantages offered by
            the app when run under UCS.
        </para>
        <para>
            The length of the description depends on how much you have to say
            and how much explanation your app requires. Ideally the description
            should be at least 300 words long.  Structure the text and use
            paragraphs to make it easier to read. Work with subheadings (html:
            h2, h3) to divide your text into logical sections.  It is very
            helpful for the reader to be able to see the advantages of your app
            and its combination with UCS at a glance. For this reason,
            presentation of the advantages in lists (html: ol, ul, li) is
            particularly practical.
        </para>
        <para>
            Revise your text in order to optimize it for search engines. Have
            you specified all the desired keywords (e.g., app name)? Have you
            integrated relevant keywords in your text? The text can be adapted
            for the search engines / keywords and synonyms, word combinations,
            etc., are an asset – but please try to avoid keyword stuffing. Good
            readability should be your priority.  Important terms in the text
            can be emphasized if they help with the readability (html: strong).
        </para>
        <para>
            If you want to use links in your app description (e.g., to pages on
            your own website), please always use the
            <userinput>target="_blank"</userinput> (open in new tab) and assign
            the link a title attribute. Please keep the use of links to a
            minimum and ideally use the fields provided especially for this
            purpose in the app metadata.
        </para>
    </section>

    <section id="contact">
        <title>Contact</title>
        <para>
            For the users it is important to know who is the producer of the
            app. For this purpose there is the <guimenu>Contact</guimenu> tab
            in the app provider portal. Please provide <option>Gerneal product
                contact information</option> like an email address where the
            users can contact you and a website to your solution. Please also
            link to a website, where your support options and pricing is
            explained to your customers and place the link in the field
            <option>Website with information regarding
                support options</option>.
        </para>
    </section>

    <section id="license">
        <title>License</title>
        <para>
            On the <guimenu>License</guimenu> you can define license
            information that you want to provide to the user. Let's start with
            the <option>license agreement</option>. Here you can save a text
            that the user should read and accept before the app is installed.
            If the user does not accept the text, the installation process is
            aborted and no app is installed. The license agreement is mostly
            used by app providers for legal information that needs confirmation
            by the user. If you don't have a need for such a text, you can
            leave it empty.
        </para>
        <para>
            Users have to register with a valid email address in order to use
            the App Center. If you as app provider configure an email address
            in the field <option>E-mail address for App install
                notifications</option> you receive information on a daily basis
            about which user installed the app. The App Center UMC module
            informs the user that the app provider may contact them. App
            provider are thus free to use the address for lead management.
        </para>
        <para>
            The last setting is intended to provide the users a rough
            imagination about the license type of your software. Please choose
            one option that fits best to your solution. The options are:
            <itemizedlist>
                <listitem>
                    <simpara>
                        <userinput>Empty</userinput>: If no value is given, the
                        App Center UMC module and the App Catalog will show the
                        text "Please contact the App provider for further
                        license details".
                    </simpara>
                </listitem>
                <listitem>
                    <simpara>
                        <userinput>Free commercial use</userinput>
                    </simpara>
                </listitem>
                <listitem>
                    <simpara>
                        <userinput>Free commercial use. Some functions or
                            services are liable to costs.</userinput>
                    </simpara>
                </listitem>
                <listitem>
                    <simpara>
                        <userinput>Liable to Costs with Free Trial</userinput>
                    </simpara>
                </listitem>
                <listitem>
                    <simpara>
                        <userinput>Liable to Costs</userinput>
                    </simpara>
                </listitem>
            </itemizedlist>
        </para>
    </section>

    <section id="readme">
        <title>README for the administrator</title>
        <para>
            In the tab <guimenu>README files</guimenu> additional information
            for an app can be provided that show up at certain states of the
            app. README files are also in HTML like the description and content
            can be provided the same way (see <xref linkend="description" />).
            The app provider portal describes when each README file shows up.
        </para>
        <para>
            It is highly recommended to use the README files to show
            information that does not make sense in the app description, like
            for example configuration details, hints before and after and
            update, etc. Please also keep in mind to provide a proper
            translation.
        </para>
    </section>

    <section id="translation">
        <title>Translations</title>
        <para>
            All texts, screenshots and videos should be entered in English.
            Translations to German should be only made on the
            <guimenu>Translations</guimenu> tab.
        </para>
    </section>

</chapter>

<!--
TODO: Nico
-->
<chapter id="app-appliances">
    <title>App Appliances</title>

    <section id="branding">
        <title>Custom branding</title>
        <para>
        </para>
    </section>

    <section id="procedures">
        <title>Procedures</title>
        <para>
        </para>
    </section>
</chapter>

<!--
TODO: Stefan
-->
<chapter id="app-configurations">
    <title>App configurations</title>

    <section id="installation-scripts">
        <title>Installation scripts</title>
        <para>
        </para>
    </section>

    <section id="app-settings">
        <title>App settings</title>
        <para>
        </para>
    </section>

    <section id="app-attributes">
        <title>App attributes</title>
        <para>
        </para>
    </section>
</chapter>

</book>
