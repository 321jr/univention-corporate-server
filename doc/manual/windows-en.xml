<chapter id="windows:Services_for_Windows">
  <title>Services for Windows</title>
  <section id="windows:general">
	<title>Introduction</title>
	<para>
	  For the purposes of Windows systems, UCS can assume the tasks of Windows server systems:
	</para>

	<itemizedlist>
	  <listitem><simpara>
		Domain controller function / authentication services

	  </simpara></listitem>

	  <listitem><simpara>
		File services
	  </simpara></listitem>

	  <listitem><simpara>
		Print services
	  </simpara></listitem>
	</itemizedlist>
	<para>
	  All these services are provided by Samba in UCS. When acting as a domain controller Samba can
	  provide two types of domain controller functionality:
	</para>

	<itemizedlist>
	  <listitem>
		Samba can also provide an Active Directory-compatible domain
		controller e.g. Samba provides an Active Directory compatible Windows domain. This allows
		the use of tools provided by Microsoft, e.g. for the management of users or for managing
		group policy objects. 
	  </listitem>

	  <listitem>
		Samba can provide a NT-compatible domain controller.
	  </listitem>
	</itemizedlist>

	<para>
	  UCS supports the mostly automatic migration of an existing Active Directory domain to UCS. All
	  users, groups, computer objects and group policies are migrated without the need to rejoin the
	  Windows clients. This is documented in <xref linkend="windows:adtakeover"/>.
	</para>

	<para>
	  The migration from an NT-based Samba domain to an AD-based domain is documented in the
	  Univention Wiki <biblioref linkend="wiki-samba-update"/>.
	</para>

	<para>
	  In addition to Samba, UCS also integrates an additional component
	  for the synchronisation with Active Directory (AD): the Univention Active
	  Directory Connector. The connector synchronises the content of a Microsoft Active Directory
	  domain with a UCS domain. Further information can be found in <xref
	  linkend="ad-connector:general"/>.
	</para>
  </section>

  <section id="windows:addomain">
	<title>Operation of a Samba domain based on Active Directory</title>

	<section id="windows:adsetup">
	  <title>Components of a Samba domain</title>

	  <para>
		An Active Directory domain is composed of at least one domain controller. Windows clients and member
		servers can join the trust context of the Samba domain as domain members. Member servers do
		not provide login services, but may offer file and print services, for example. In addition to
		a member server domain join of Windows Server systems, Samba can also act as a member server.
	  </para>

	  <para>
		Domain joining of Windows clients and Microsoft Windows member servers is described in
		<xref linkend="windows-domaenenbeitritt"/>.
	  </para>

	  <para>
		Microsoft Active Directory domain controllers cannot join the Samba domain. This functionality is
		planned at a later point in time.
	  </para>

	  <para>
		Samba can not join an Active Directory Forest yet at this point. 
	  </para>

	  <para>
		Trust relationships to other domains are currently only possible when using NT-compatible
		domains (see <xref linkend="vertrauensstellungen_generell"/>).
	  </para>

	</section>



	<section id="windows:setup4">
	  <title>Installation</title>

	  <para>
		Samba as an AD domain controller can be installed on all UCS domain controllers from the
		Univention App Center with the application <emphasis>Active Directory-compatible domain
		controller</emphasis>. Alternatively, the software package
		<package>univention-samba4</package> can be installed. On the system roles &ucsMaster; and
		&ucsBackup; the <package>univention-s4-connector</package> package must also be installed
		(<command>univention-run-join-scripts</command> command must be run after
		installation). Additional information can be found in <xref
		linkend="computers::softwaremanagement::installsoftware"/>.
	  </para>

	  <para>
		A Samba member server can be installed on UCS member servers from the Univention App Center
		with the application <emphasis>Windows-compatible Fileserver</emphasis>. Alternatively, the
		software package <package>univention-samba</package> can be
		installed (<command>univention-run-join-scripts</command> command must be run after
		installation). Additional information can be found in <xref
		linkend="computers::softwaremanagement::installsoftware"/>.
	  </para>

	  <para>
		Samba supports the operation as a <emphasis>read-only domain controller</emphasis>. The
		setup is documented in <biblioref linkend="ext-doc-win"/>.
	  </para>
	</section>

	<section id="windows:samba4:services">
	  <title>Services of a Samba domain</title>
	  <section id="windows:samba4:services:auth">
		<title>Authentication services</title>

		<para>
		  User logins can only be performed on Microsoft Windows systems joined in the Samba
		  domain. Domain joins are documented in  <xref linkend="windows-domaenenbeitritt"/>.
		</para>

		<para>
		  Users who log on to a Windows system are supplied with a Kerberos ticket when they log
		  on. The ticket is then used for the further authentication. This ticket allows access to
		  the domain's resources.
		</para>

		<para>
		  Common sources of error in failed logins are:

		  <itemizedlist>
			<listitem><simpara>
			  Synchronisation of the system times between the Windows client and domain controller
			  is essential for functioning Kerberos authentication. In the default setting, the
			  system time is updated via NTP during system startup. This can also be done manually
			  using the command <command>w32tm /resync</command>.
			</simpara></listitem>

			<listitem><simpara>
			  DNS service records need to be resolved during login. For this reason, the Windows
			  client should use the domain controller's IP address as its DNS name server.
			</simpara></listitem>
		  </itemizedlist>
		</para>

	  </section>

	  <section id="windows:samba4:fileservices">
		<title>File services</title>

		<para>
		  A file server provides files over the network and allows concentrating the storage of user data on a
		  central server.
		</para>

		<para>
		  The file services integrated in UCS support the provision of shares using the CIFS
		  protocol (see  <xref linkend="shares::general"/>). Insofar as the underlying file system
		  supports Access Control Lists (ACLs) (can be used with ext3, ext4 and XFS), the ACLs can
		  also be used by Windows clients.
		</para>

		<para>
		  Samba Active Directory domain controllers can also provide file services. As a general
		  rule, it is recommended to separate domain controllers and file/print services in Samba
		  environments - the same as the Microsoft recommendations for Active Directory - that means using
		  domain controllers for logins/authentication and member services for file/print
		  services. This ensures that a high system load on a file server does not result in
		  disruptions to the authentication service. For smaller environments in which it is not
		  possible to run two servers, file and print services can also be run on a domain controller.
		</para>

		<para>
		  Samba supports the CIFS protocol and the successor SMB2 to provide file services. Using a client
		  which supports SMB2 (as of Windows Vista, i.e., Windows 7/8 too) improves the performance
		  and scalability.
		</para>

		<para>
		  The protocol can be configured using the &ucsUCR; variable
		  <envar>samba/max/protocol</envar>. It must be set on all Samba servers and then all Samba
		  server(s) restarted.

		  <itemizedlist>
			<listitem><simpara>
			  <emphasis>NT1</emphasis> configures CIFS (supported by all Windows versions)
			</simpara></listitem>
			
			<listitem><simpara>
			  <emphasis>SMB2</emphasis> configures SMB2 (supported as of Windows Vista/Windows 7)
			</simpara></listitem>
			
			<listitem><simpara>
			  <emphasis>SMB3</emphasis> configures SMB3 (supported as of Windows 8) (currently not covered by Univention support)
			</simpara></listitem>
		  </itemizedlist>
		</para>
	  </section>


	  <section id="windows:samba4:services:print">
		<title>Print services</title>
		<para>
		  Samba offers the possibility of sharing printers set up under Linux as network printers
		  for Windows clients. The management of the printer shares and the provision of the printer
		  drivers is described in <xref linkend="print::general"/>.
		</para>

		<para>
		  Samba AD domain controllers can also provide print services. In this case, the
		  restrictions described in <xref linkend="windows:samba4:fileservices"/> must be taken into
		  consideration.
		</para>
	  </section>


	  <section id="windows:s4connector">
		<title>Univention S4 connector</title>

		<para>
		  When using Samba as an Active Directory domain controller, Samba provides a separate LDAP
		  directory service. The synchronisation between the UCS LDAP and the Samba LDAP occurs via
		  an internal system service, the Univention S4 connector. The connector is enabled on the
		  &ucsMaster; by default and typically requires no further configuration.
		</para>

		<para>
		  Further information on the status of the synchronisation can be found in the log file
		  <filename>/var/log/univention/connector-s4.log</filename>. Additional information on analysing
		  connector replication problems can be found in <xref linkend="sdb-s4trouble"/>.
		</para>

		<para>
		  The <command>univention-s4search</command> command can be used to search in the Samba
		  directory service. If it is run as the <emphasis>root</emphasis> user, the
		  required credentials of the machine account are used automatically:

		  <programlisting>
root@master:~# univention-s4search sAMAccountName=Administrator
# record 1
dn: CN=Administrator,CN=Users,DC=example,DC=com
objectClass: top
objectClass: person
objectClass: organizationalPerson
objectClass: user
cn: Administrator
instanceType: 4
(..)
		  </programlisting>
		</para>
	  </section>


	  <section id="windows:multimaster">
		<title>Replication of directory data</title>

		<para>
		  Samba AD domains use the Directory Replication System (DRS) to replicate the directory
		  data. DRS allows multi-master replication, i.e., the write changes from multiple domain
		  controllers are synchronised at protocol level. Consequently, the use of snapshots in
		  virtualization solutions should be avoided when using Samba 4 and Samba 4 should be
		  operated on a server which is never switched off.
		</para>

		<para>
		  The complexity of the multi-master replication increases with each additional Samba AD
		  domain controller. Consequently, it must be checked whether additional Samba AD domain
		  controllers are necessary or if a member server would not be a better choice for new
		  servers.
		</para>

		<para>
		  Additional information on troubleshooting replication problems can be found in <xref
		  linkend="sdb-s4trouble"/>.
		</para>

		<para>
		  Samba NT domains access the data in the OpenLDAP directory data, which are distributed via
		  listener-notifier replication (see <xref linkend="domain:listenernotifier"/>).
		</para>
	  </section>


	  <section id="windows:sysvolshare">
		<title>Synchronisation of the SYSVOL share</title>
		<para>
		  The SYSVOL share is a share which provides group policies and logon scripts in Active
		  Directory / Samba 4. It is synchronised among all domain controllers and stored in the
		  <filename>/var/lib/samba/sysvol</filename> directory.
		</para>

		<para>
		  In Microsoft Active Directory, the SYSVOL share is synchronised by the File Replication
		  Service (introduced with Windows 2000) or the Distributed File System (as of Windows 2008
		  R2). These replication methods are not yet fully implemented in Samba 4. The
		  synchronisation between the Samba 4 domain controllers is performed in UCS via a Cron job
		  (every five minutes as standard - can be configured using the &ucsUCRV;
		  <envar>samba4/sysvol/sync/cron</envar>).
		</para>
	  </section>
	</section>

	<section id="windows:samba4:desktopmanagement">
	  <title>Configuration and management of Windows desktops</title>

	  <section id="gruppenrichtlinien">
		<title>Group policies</title>

		<figure><title>Group policy editor</title>
		<graphic scalefit="1" width="80%" fileref="illustrations/win_policy_en.png"/>
		</figure>

		<para>
		  Group policies are an Active Directory feature which allows the central configuration of
		  computers and user settings. They are only supported in Samba AD domains.
		</para>

		<para>
		  The setting up of group policies can be performed with the <emphasis>Remote Server
		  Administration Tools (RSAT) for Windows 7</emphasis> <footnote><para><ulink
		  url="http://www.microsoft.com/downloads/details.aspx?FamilyID=7d2f6ad7-656b-4313-a005-4e344e43997d"/></para></footnote>
		  or the <emphasis>Remote Server Administration Tools (RSAT) for Windows 8</emphasis>
		  <footnote><para><ulink
		  url="http://www.microsoft.com/de-de/download/details.aspx?id=28972"/></para></footnote>. After the
		  installation has been completed, the group policy editor must be activated in the Control
		  Panel, by enabling the option <guimenu>Group Policy Management Tools</guimenu> under
		  <guimenu>Programs -> Turn Windows features on or off -> Remote Server Administration Tools ->
		  Feature Administration Tools</guimenu>.
		</para>

		<para>
		  The group policies are saved in the SYSVOL share, see <xref linkend="windows:sysvolshare"/>.
		</para>

		<para>
		  Windows Group Policies are not supported by Mac OS X clients.
		</para>
	  </section>


	  <section id="netlogon-freigabe:samba4">
		<title>Logon scripts / NETLOGON share</title>
		<para>
		  The NETLOGON share serves the purpose of providing logon scripts in Windows domains. The
		  logon scripts are executed following after the user login and allow the adaptation of the
		  user's working environment. Scripts have to be saved in a format which can be executed by
		  Windows, such as <emphasis>bat</emphasis>.
		</para>

		<para>
		  The logon scripts are stored in
		  <filename>/var/lib/samba/sysvol/&lt;Domainname&gt;/scripts/</filename> and provided under
		  the share name <emphasis>NETLOGON</emphasis>.
		</para>

		<para>
		  The NETLOGON share is replicated within the scope of the SYSVOL
		  replication.
		</para>

		<para>
		  The &ucsUCRV; <envar>samba/logonscript</envar> is available for defining a global logon
		  script for all users. If this variable is set on a Samba server, then all users logging
		  into this Samba server have the specified logon script assigned. The logon script can also
		  be assigned user-specifically, see <xref linkend="users::management"/>.
		</para>
	  </section>


	  <section id="windows:serverhome:samba4">
		<title>Configuration of the file server for the home directory</title>

		<para>
		  The home directory can  be defined user-specifically in the &ucsUMC;, see <xref
		  linkend="users::management"/>. This is performed with the setting <guimenu>Windows home
		  path</guimenu>, e.g., <emphasis>\\ucs-file-server\smith</emphasis>.  
		</para>

		<para>
		  The multi edit mode of the &ucsUMC; can be used to assign the home directory to multiple
		  users at one time, see <xref linkend="central:user-interface:edit"/>.
		</para>
	  </section>


	  <section id="windows:roamingprofiles:samba4">
		<title>Roaming profiles</title>
		<para>
		  Samba supports roaming profiles, i.e., user settings are saved on a central server. This
		  directory is also used for storing the files which the user saves in the <emphasis>My
		  Documents</emphasis> folder. Initially, these files are stored locally on the Windows
		  computer and then synchronised onto the Samba server when the user logs off.
		</para>

		<para>
		  If the profile path is changed in the &ucsUMC;, then a new profile directory will be
		  created. The data in the old profile directory will be kept. These data can be manually
		  copied or moved to the new profile directory. Finally, the old profile directory can be
		  deleted.
		</para>

		<para>
		  No roaming profiles are used in the default setting in Samba 4.
		</para>

		<para>
		  Roaming profiles can be configured via a group policy found under <guimenu>Computer
		  configuration &ar; Policies &ar; Administrative templates &ar; System &ar; User profiles
		  &ar; Set roaming profile path for all users logging onto this computer</guimenu>.
		</para>
	
		<note>
		  <para>
			As standard, the Administrator accesses shares with root rights. If as a result the
			profile directory is created with the root user, it should be manually assigned to the
			Administrator with the command <command>chown</command>.
		  </para>
		</note>
	  </section>

	</section>

  </section>


  <section id="windows:ntdomain">
	<title>Operation of a Samba domain based on NT domain services</title>

	<section id="windows:ntsetup">
	  <title>Components of a Samba domain</title>

	  <para>
		NT domains are the predecessor of Active Directory from a technical perspective. This
		chapter is predominantly relevant for existing installations which have yet to perform
		migration to an AD-based domain. Migration from a NT-based Samba domain to a domain with
		Active Directory services is described in the Univention Wiki <biblioref
		linkend="wiki-samba-update"/>. For new installations, we recommend the use of an AD-based
		domain.
	  </para>

	  <para>
		A Samba NT domain is composed of at least one domain controller. Windows clients and member
		servers can join the trust context of the Samba domain as domain members. Member servers do
		not provide login services, but may offer file and print services, for example. In addition to
		a member server domain join of Windows Server systems, Samba can also act as a member server.
	  </para>

	  <para>
		Domain joining of Windows clients and Microsoft Windows member servers is described in
		<xref linkend="windows-domaenenbeitritt"/>.
	  </para>

	  <para>
		Microsoft Windows domain controllers cannot join the Samba domain.
	  </para>
	</section>

	<section id="windows:setup3">
	  <title>Installation</title>

	  <para>
		Samba as a NT domain controller can be installed on all UCS domain controllers from the
		Univention App Center with the application <emphasis>Windows NT-compatible domain
		controller</emphasis>. Alternatively, the software package
		<package>univention-samba</package> can be installed
		(<command>univention-run-join-scripts</command> command must be run after
		installation). Additional information can be found in <xref
		linkend="computers::softwaremanagement::installsoftware"/>.
	  </para>

	  <para>
		A Samba member server can be installed on UCS member servers from the Univention App Center
		with the application <emphasis>Windows-compatible Fileserver</emphasis>. Alternatively, the
		software package <package>univention-samba</package> can be installed
		(<command>univention-run-join-scripts</command> command must be run after
		installation). Additional information can be found in <xref
		linkend="computers::softwaremanagement::installsoftware"/>.
	  </para>
	</section>

	<section id="windows:samba3:services">
	  <title>Services of a Samba domain</title>
	  <section id="windows:samba3:services:auth">
		<title>Authentication services</title>

		<para>
		  User logins can only be performed on Microsoft Windows systems joined in the Samba
		  domain. Domain joins are documented in <xref linkend="windows-domaenenbeitritt"/>.
		</para>

		<para>
		  The user passwords are saved in the UCS LDAP. Users are authenticated against the LDAP
		  directory when logging into the domain with their username and password, and can then
		  access all the shared resources of the domain without having to enter their username and
		  password again. Computers with any kind of Windows operating systems are authenticated in
		  the same way as in Windows NT domains, via the NTLMv2 protocol.
		</para>
	  </section>


	  <section id="windows:samba3:fileservices">
		<title>File services</title>

		<para>
		  A file server provides files over the network and allows concentrating the storage of user data on a
		  central server.
		</para>

		<para>
		  The file services integrated in UCS support the provision of shares using the CIFS
		  protocol (see <xref linkend="shares::general"/>). Insofar as the underlying file system
		  supports Access Control Lists (ACLs) (can be used with ext3, ext4 and XFS), the ACLs can
		  also be used by Windows clients.
		</para>

		<para>
		  Samba supports the CIFS protocol and the successor SMB2 to provide file services. Using a client
		  which supports SMB2 (as of Windows Vista, i.e., Windows 7/8 too) improves the performance
		  and scalability.
		</para>

		<para>
		  The protocol can be configured using the &ucsUCR; variable
		  <envar>samba/max/protocol</envar>. It must be set on all Samba servers and then all Samba
		  server(s) restarted.

		  <itemizedlist>
			<listitem><simpara>
			  <emphasis>NT1</emphasis> configures CIFS (supported by all Windows versions)
			</simpara></listitem>

			<listitem><simpara>
			  <emphasis>SMB2</emphasis> configures SMB2 (supported as of Windows Vista/Windows 7)
			</simpara></listitem>

			<listitem><simpara>
			  <emphasis>SMB3</emphasis> configures SMB3 (supported as of Windows 8) (currently not covered by Univention support)
			</simpara></listitem>
		  </itemizedlist>
		</para>
	  </section>


	  <section id="windows:samba:services:print">
		<title>Print services</title>
		<para>
		  Samba offers the possibility of sharing printers set up under Linux as network printers
		  for Windows clients. The management of the printer shares and the provision of the printer
		  drivers is described in <xref linkend="print::general"/>.
		</para>
	  </section>


	  <section id="windows:netbios">
		<title>NetBIOS name service</title>

		<para>
		  NetBIOS is a network protocol for host names and for network communication of Windows
		  clients. It is primarily used for NT-compatible domains; the name resolution in Active
		  Directory is based on DNS. Samba provides NetBIOS functions with the
		  <emphasis>nmbd</emphasis> system service.
		</para>

		<para>
		  NetBIOS computer names can have a maximum of 13 characters. The NetBIOS name of a UCS
		  system corresponds to the host name by default.
		</para>

		<para>
		  In a native Active Directory environment, there are no NetBIOS services provided as
		  standard. In an AD environment based on Samba, however, it is activated. This can be
		  deactivated with the &ucsUCRV; <envar>samba4/service/nmb</envar>.
		</para>
	  </section>

	  <section id="windows:wins">
		<title>Name resolution using WINS</title>
		<para>
		  Similar to DNS in TCP/IP networks, the <emphasis>Windows Internet Name Service
		  (WINS)</emphasis> is used for resolving NetBIOS names into IP addresses. In addition, WINS
		  provides information on the services of the hosts.
		</para>

		<para>
		  WINS is used in NT-compatible Samba domains; in Samba AD domains, the name resolution
		  generally occurs primarily via DNS (WINS is also available).
		</para>

		<para>
		  WINS support is activated on the &ucsMaster; in the default setting and can also be
		  operated on another server by setting the &ucsUCRV;
		  <envar>windows/wins-support</envar>. WINS can only be operated without adjustments on one
		  Samba server in the domain; distribution across several servers requires the setup of WINS
		  replication. Information on the commissioning of the WINS replication can be found in the
		  Univention Support database at <xref linkend="sdb-winsrepl"/>.
		</para>

		<para>
		  The WINS server can be assigned to Windows clients via a DHCP-NetBIOS policy, see <xref
		  linkend="networks:dhcp:wins"/>.
		</para>
	  </section>
	</section>


	<section id="windows:samba3:desktopmanagement">
	  <title>Configuration and management of Windows desktops</title>

	  <section id="netlogon-freigabe">
		<title>Logon scripts / NETLOGON share</title>
		<para>
		  The NETLOGON share serves the purpose of providing logon scripts in Windows domains. The
		  logon scripts are executed following after the user login and allow the adaptation of the
		  user's working environment. Scripts have to be saved in a format which can be executed by
		  Windows, such as <emphasis>bat</emphasis>.
		</para>

		<para>
		  The directory <filename>/var/lib/samba/netlogon</filename> is set up as the Samba share
		  <emphasis>NETLOGON</emphasis>.
		</para>

		<para>
		  In the default setting, all adjustments are made in the
		  <filename>/var/lib/samba/netlogon</filename> directory on the &ucsMaster; and synchronised
		  hourly on all domain controllers with Samba installed via the <emphasis>rsync</emphasis>
		  tool.
		</para>

		<para>
		  The &ucsUCRV; <envar>samba/logonscript</envar> is available for defining a global logon
		  script for all users. If this variable is set on a Samba server, then all users logging
		  into this Samba server have the specified logon script assigned. The logon script can also
		  be assigned user-specifically, see <xref linkend="users::management"/>.
		</para>
	  </section>


	  <section id="windows:serverhome:samba3">
		<title>Configuration of the file server for the home directory</title>

		<para>
		  As standard, the home directory of each user is shared by Samba and connected with the
		  <emphasis>I:</emphasis> drive after login in Windows.
		</para>

		<para>
		  The &ucsUCRV; <envar>samba/homedirserver</envar> can be used to specify the server on
		  which the home directories should be stored; the &ucsUCRV;
		  <envar>samba/homedirpath</envar> can be used to specify the directory. These values will
		  then be valid for all the users.
		</para>

		<para>
		  It it also possible to make individual assignment in the user settings - see <xref
		  linkend="users::management"/> - with the setting <guimenu>Windows home path</guimenu>,
		  e.g., <emphasis>\\ucs-file-server\smith</emphasis>. 
		</para>

		<para>
		  If instead of the user's UNIX home directory, a different UNIX directory is to be
		  displayed as the home directory on the Windows drive, then this server and the home
		  directory need to be entered in the <guimenu>Windows home path</guimenu> entry field.
		</para>
	  </section>


	  <section id="windows:roamingprofiles">
		<title>Roaming profiles</title>
		<para>
		  Samba supports roaming profiles, i.e., user settings are saved on a central server. This
		  directory is also used for storing the files which the user saves in the <emphasis>My
		  Documents</emphasis> folder. Initially, these files are stored locally on the Windows
		  computer and then synchronised onto the Samba server when the user logs off.
		</para>

		<para>
		  If the profile path is changed in the &ucsUMC;, then a new profile directory will be
		  created. The data in the old profile directory will be kept. These data can be manually
		  copied or moved to the new profile directory. Finally, the old profile directory can be
		  deleted.
		</para>

		<para>
		  The user profiles are saved in the
		  <filename>windows-profiles\&lt;Windows-Version&gt;</filename> subdirectory on the Samba
		  server that the user logged on to.
		</para>

		<para>
		  &ucsUCRV; <envar>samba/profileserver</envar> can be used to specify another server and
		  <envar>samba/profilepath</envar>to specify another directory. These settings must be set
		  on all Samba domain controllers.
		</para>

		<para>
		  In the user management of the &ucsUMC;, the input field <guimenu>Windows profile
		  directory</guimenu> can be set to configure a different path or another server for the
		  profile  directory for the user.
		</para>

		<para>
		  Roaming profiles can be deactivated by configuring the &ucsUCR; variables
		  <envar>samba/profilepath</envar> and <envar>samba/profileserver</envar> to
		  <emphasis>local</emphasis> and restarting the Samba server. The UMC setting from the input
		  field <guimenu>Windows profile directory</guimenu> must also be set empty.
		</para>
	  </section>
	</section>

	<section id="vertrauensstellungen_generell">
	  <title>Trust relationships</title>
	  <para>
		Trust relationships between domains make it possible for users from one domain to log on to
		computers from another domain.
	  </para>

	  <para>
		Trust settings are not supported by in Samba domains based on Active Directory.
	  </para>

	  <para>
		If a Windows domain trusts a Samba domain, there is also the possibility to log on to the
		Samba domain alongside the Windows domain when logging on to computers belonging to the Windows
		domain.
	  </para>

	  <para>
		If a Samba domain trusts a Windows domain, users from the Windows domain enter the user name
		<emphasis>&lt;name-of-windows-domain&gt;+&lt;username&gt;</emphasis> when logging on to a Linux
		computer belonging to the Samba domain.
	  </para>

	  <para>
		When setting up and using the trust relationship the domain controllers of both domains must be
		able to reach each other over the network and identify each other using broadcasts or WINS.
	  </para>



	  <para>
		Two steps generally need to be performed to establish a trust relation:

		<itemizedlist>
		  <listitem><simpara>
			A domain trust account needs to be created in the "trusted" domain.
		  </simpara></listitem>

		  <listitem><simpara>
			The trust relation needs to be established in the "trusting" domain. This is done by
			logging in to the "trusting" domain with administrative  privileges and running the tool
			for domain trust administration provided by the domain controller (Microsoft Windows or
			Samba) to establish an "outgoing" trust (as it is called in the Microsoft terminology).
			The credentials of the trust account for the "trusted" domain need to be entered. This
			trust account is required by the "trusting" domain for name resolution in the "trusted"
			domain.
		  </simpara></listitem>
		</itemizedlist>
	  </para>

	  <para>
		Trust relations can be configured unidirectional or bidirectional. Technically a
		bidirectional trust is simply realised as two unidirectional trusts; one in each direction.
	  </para>

	  <para>
		The terminology of unidirectional trusts depends on the perspective of either the "trusting"
		or the "trusted" domain. From the perspective of the "trusting" domain the trust is called
		"outgoing".  From the perspective of the "trusted" domain the trust is called "incoming".
	  </para>

	  <para>
		Further information on the configuration of trust relationships on Microsoft Windows can be found in
		<xref linkend="windows-trust"/>.
	  </para>

	  <section id="windows:trustdom:windows-trusts-samba">
		<title>Windows domain trusts Samba domain</title>
		<para>
		  A <emphasis>Domain Trust Account</emphasis> with a name reflecting the NetBIOS name of the
		  Windows domain and a password issued for the account must be created in the computer
		  management module of &ucsUMC;  The password quality requirements which may apply to Windows
		  domains must be observed.
		</para>

		<para>
		  Trust settings can only be set up on domain controllers.
		</para>
		
		<para>
		  An outgoing trust relationship must be created on the Windows PDC.
		</para>

		<para>
		  The trust relationship between the Windows domain and the Samba domain can be removed by
		  deleting the trust relationship on the Windows PDC and the domain trust account in the
		  &ucsUMC;.
		</para>
	  </section>
	  
	  <section id="windows:trustdom:samba-trusts-windows">
		<title>Samba domain trusts Windows domain</title>
		<para>
		  The following steps are used to set up the trust setting on a &ucsSlave; as a
		  <emphasis>root</emphasis> user:
		</para>

		<para>
		  The <package>winbind</package> package must be installed. Winbind maps UNIX IDs to Windows
		  users and groups
		</para>

		<para>
		  An incoming trust relationship must be created on the Windows PDC.
		</para>

		<para>
		  If Univention Firewall is used, replies to NetBIOS broadcasts need to be allowed:
		</para>

		<programlisting language="sh">
echo "iptables -I INPUT 1 -p udp --sport 137 -j ACCEPT" \
    &gt;&gt; /etc/security/packetfilter.d/50_local.sh
/etc/init.d/univention-firewall restart
		</programlisting>

		<para>
		  The trust relationship is now initiated and Winbind restarted. This command must be run on all
		  Samba login servers:
		</para>

		<programlisting language="sh">
net rpc trustdom establish &lt;Windows domain&gt;
net setauthuser -UAdministrator (enter the Windows Administrator password)
ucr set samba/winbind/rpc/only=yes
/etc/init.d/winbind restart
ucr set auth/methods="krb5 ldap unix winbind"
/etc/init.d/nscd restart
		</programlisting>

		<para>
		  The following command can be used to check that the trust relationship has been added
		  correctly:
		</para>
		<programlisting language="sh">
net rpc trustdom list
		</programlisting>
	  </section>
	</section>
  </section>


<section id="ad-connector:general">
  <title>UCS Active Directory Connector</title>
  <section id="ad-connector:einfuehrung">
	<title>Introduction</title>
	<para>
	  The UCS Active Directory Connector (AD Connector for short) makes it possible to synchronise
	  directory service objects between a Windows 2003/2008/2012 server under Active Directory (AD)
	  and a &ucsUCS;. The connector can also synchronise several AD domains with one UCS domain;
	  this is documented in <xref linkend="ext-doc-win"/>.
	</para>

	<para>
	  In the default setting, containers, organisational units, users, and groups are
	  synchronised. Users have an exceptional position since the password cannot be queried via the
	  LDAP protocol in Active Directory. A special service is installed on the Windows server for
	  this purpose, which enables password synchronisation (see <xref
	  linkend="ad-connector:password-dienst"/>).
	</para>

	<para>
	  Information on the attributes configured in the basic setting and
	  particularities to take into account can be found in the
	  <xref linkend="ad-connector:details-zur-vorkonfigurierten-synchronisation"/>.
	</para>

	<para>
	  Computer accounts are not synchronised since Windows clients can only
	  be a member in one domain.
	</para>

	<para>
	  Users can make access to services of both environments in a
	  transparent way; this is due to the possibility of having the same
	  user settings in both domains. After logging into a UCS domain, a
	  subsequent connection to a file share or to an Exchange server with
	  Active Directory is possible without a renewed password request. Users
	  and administrators will find users and groups of the same name on the
	  resources of the other domain, and can thus work with their familiar
	  permission structures.
	</para>

	<para>
	  The initialisation is performed after the first start of the
	  connector. All the entries are read out of the UCS, converted in AD
	  objects according to the mapping set and added (or modified if already
	  present) on the UCS side. All objects are then read out of the AD and
	  converted into UCS objects before being added/modified
	  accordingly. The directory service servers are then queried further
	  as long as no changes have been made. The AD connector can also be
	  operated in a unidirectional mode.
	</para>

	<para>
	  Following the initial sync, additional changes are requested at a set interval.
	  This interval is initially set to five seconds and can be adapted via
	  the &ucsUMC; configuration module.
	</para>

	<para>
	  If an object cannot be synchronised, it is "rejected". During
	  start-up of the UCS AD connector, an attempt is made to write
	  this object again. In addition, a further attempt is made to input the
	  object again after several runs. The interval can be configured in the
	  UMC configuration module, see <xref linkend="ad-connector:basicsetup"/>.
	  The presetting specifies ten cycles before the object is resynchronised.
	  A restart of the UCS AD connector also triggers a resynchronisation of
	  all previously rejected changes.
	</para>
</section>

<section id="ad-connector:einrichtung">
  <title>Setup of the UCS AD connector</title>

  <para>
	The connector can be installed from the Univention App Center with the application
	<emphasis>UCS Active Directory Connector</emphasis>. Alternatively, the software package
	<package>univention-ad-connector</package> can be installed. Additional information can be found in
	<xref linkend="computers::softwaremanagement::installsoftware"/>.
  </para>
  
  <para>
	The UCS AD connector can only be installed on a &ucsMaster; or
	&ucsBackup; system.
  </para>

  <para>
	Despite intensive tests it is not possible to rule out that the
	results of the synchronisation may affect the operation of a
	productive domain. The connector should therefore be tested for the
	respective requirements in a separate environment in advance.
  </para>

  <para>
	All Active Directory and UCS servers in a connector environment must
	use the same time zone.
  </para>

<section id="ad-connector:basicsetup">
  <title>Basic configuration of the connector</title>
  <para>
	The connector is configured using the wizard <guimenu>UCS Active Directory Connector</guimenu>
	of the &ucsUMC;.
  </para>

  <para>
	Internet Explorer 6 - which is preinstalled on Windows 2003 systems - is not supported by
	&ucsUMC;. The browser must be updated before continuing.
  </para>

  <para>
	The connector's settings status is displayed under <guimenu>Configuration</guimenu>. The setup
	can be begun by clicking on <guimenu>Configure UCS Active Directory Connector</guimenu>.
  </para>

  <para>
	The fully qualified host name of the Active Directory server must be given in the
	<guimenu>Active Directory Server</guimenu> field. If the hostname of the AD system is not
	resolvable for the UCS system, it is necessary to create a DNS host record for the AD system in
	the DNS management module of the &ucsUMC; (see <xref linkend="networks::dns::hostrecord"/>).
  </para>

  <para>
	Alternatively, a static entry can also be adopted in <filename>/etc/hosts</filename> via
	&ucsUCR;, e.g.

<programlisting language="sh">
ucr set hosts/static/192.168.0.100=w2k8-32.ad.example.com
</programlisting>

  </para>

  <para>
	<figure><title>Configuring the AD connector in UMC</title>
	<graphic scalefit="1" width="80%" fileref="illustrations/adconnector_2-en.png"/>
	</figure>
  </para>

  <para>
	If the <guimenu>Automatic determination of the LDAP configuration</guimenu> option is activated,
	settings such as the base DN of the Active Directory directory or the Kerberos domain of the AD
	system are queried automatically and do not need to be manually configured.
  </para>

  <para>
	The LDAP DN of the user used for access to the Active Directory is configured in the
	<guimenu>LDAP DN of synchronisation user</guimenu> field. (The setting is saved in the &ucsUCRV;
	<envar>connector/ad/ldap/binddn</envar>). When using the function for the automatic transfer of
	the base DN of the Active Directory, the Administrator account is entered by default for the base DN.
	The replication user must be a member of the <emphasis>Domain Admins</emphasis> group in the
	Active Directory. If the connector only synchronises via read access from the Active Directory
	to UCS, a standard user account can also be used.
  </para>

  <para>
	The password used for access is entered in the <guimenu>Password of the synchronisation
	user</guimenu> field and saved in a text file.
  </para>

  <para>
	Now <guimenu>Next</guimenu> needs to be clicked. The presettings in the following dialogue are
	suitable for most environments and do not generally need to be changed.
  </para>

  <para>
	Some group names are saved differently in Active Directory depending on the installation
	language of the server. The localisation used can be selected under <guimenu>System language of
	Active Directory server</guimenu> Further information can be found in <xref
	linkend="ad-connector:gruppen"/>.
  </para>

  <para>
	The AD connector can be operated in different modes, which can be selected in
	<guimenu>Synchronisation mode</guimenu> Alongside bidirectional synchronisation, unidirectional
	replication towards the AD or UCS directory service is also possible.
  </para>

  <para>
	Now <guimenu>Next</guimenu> needs to be clicked.
  </para>

  <para>
	In <guimenu>Poll Interval (seconds)</guimenu> you can specify how long the system should wait
	after a run showing no changes before sending a new request.
  </para>

  <para>
	<guimenu>Retry interval for rejected objects</guimenu> specifies after how many synchronisation
	intervals retained changes are imported subsequently.
  </para>

  <para>
	The <guimenu>Debug level of Active Directory connector</guimenu> configures how much debugging
	information is written to the <filename>/var/log/univention/connector.log</filename>
	file. <guimenu>Add debug output for functions</guimenu> can be used to specify additionally
	whether further debug output is added for function calls.
  </para>

  <para>
	Clicking on <guimenu>Finish</guimenu> adopts the configuration in &ucsUCR;. Changes are only
	adopted following a restart of the UCS AD connector, see <xref linkend="ad-connector:neustart"/>.
  </para>
</section>

<section id="ad-connector:ad-zertifikat">
  <title>Importing the SSL certificate of the Active Directory</title>
  <para>
	An SSL certificate must be created on the Active Directory system and
	the root certificate exported to allow encrypted communication. The
	certificate is created by the Active Directory's certificate service.
	The necessary steps depend on the Windows versions used. Two versions
	are shown below as examples.
  </para>

  <para>
	The encrypted communication between the UCS system and Active Directory
	can also be deactivated by setting the &ucsUCRV; <envar>connector/ad/ldap/ssl</envar>
	to <emphasis>no</emphasis>. This setting does not concern the communication with the
	password service (see <xref linkend="ad-connector:password-dienst"/>);
	this is always encrypted.
  </para>

  <section id="windows:Exporting_the_certificate_on_Windows_2003">
	<title>Exporting the certificate on Windows 2003</title>
	<para>
	  The certificate service can be installed subsequently if
	  necessary: <guimenu>Start &ar; Properties &ar;
	  System settings &ar; Software &ar; Windows components,
	  choose Certificate Services &ar; Next
	  select Enterprise root CA &ar; Next,
	  Enter domain name &ar; Next &ar; Next</guimenu>.
	</para>
	
	<para>
	  The AD server should be rebooted after the installation.
	</para>
	
	<para>
	  This certificate must now be exported and copied onto the UCS system:
	  <guimenu>Root CA &ar; AD domain &ar;
	  Properties &ar; Show certificate &ar; Details &ar; Copy to file
	  &ar; DER binary encoded X.509</guimenu>.
	</para>
  </section>
  
  <section id="windows:Exporting_the_certificate_on_Windows_2008">
	<title>Exporting the certificate on Windows 2008</title>
	<para>
	  If the certificate service is not installed, it must be installed
	  before proceeding.
	</para>

	<para>
	  <figure><title>Exporting the root certificate on Windows 2008</title>
	  <graphic scalefit="1" width="80%" fileref="illustrations/adconnector_23-en.png"/>
	  </figure>
	</para>

	<para>
	  <guimenu>Start &ar; Server Manager &ar; Add or Remove Programs &ar; Add Roles &ar; Next &ar;
	  Active Directory Certificate Services &ar; Next &ar; Next &ar; activate Certification
	  Authority &ar; select Enterprise &ar; select Root CA &ar;
	  Create new private key &ar; Next &ar; Accept the proposed crypto setting &ar; Next &ar;
	  Accept the proposed name for the CA &ar; Select an arbitrary validate date &ar;
	  Next &ar; Accept default path for the certificate database</guimenu>.
	</para>

	<para>
	  The following dialogue contains a warning that the name and domain
	  setting cannot be changed again once the certificate authority is
	  installed. This must be confirmed with <guimenu>Install</guimenu>.
	</para>

	<para>
	  The AD server must then be restarted.
	</para>

	<para>
	  This certificate must now be exported and copied onto the UCS system:
	  <guimenu>Start &ar; Administrative Tools &ar; Certification &ar;
	  Authority</guimenu>. A computer list is shown there and the elements <guimenu>Revoked Certificates</guimenu>,
	  <guimenu>Issued Certificates</guimenu>, <guimenu>Pending Requests</guimenu>,
	  <guimenu>Failed Requests</guimenu> and <guimenu>Certificate Templates</guimenu>
	  displayed under every system. Here, one must right click on the computer name - not on
	  one of the elements - and then select <guimenu>Properties</guimenu>. The root
	  certificate is usually called <emphasis>Certificate Nr. 0</emphasis>. Then select
	  <guimenu>Open &ar; Copy to File &ar; DER encoded binary X.509 (.CER) &ar; Select an arbitrary
	  filename &ar; Finish</guimenu>.
	</para>
  </section>

  <section id="windows:adconn:win2012">
	<title>Exporting the certificate on Windows 2012</title>

	<para>
	  If the certificate service is not installed, it must be installed
	  before proceeding.
	</para>

	<para>
	  The server manager must be opened. There, select the <guimenu>Active Directory Certificate Services</guimenu>
	  role in the <guimenu>Manage &ar; Add Roles and Features</guimenu> menu. When selecting the role services, it is sufficient simply to select
	  <guimenu>Certification Authority</guimenu>. A yellow warning triangle is then shown in the top
	  bar in the server manager. Here, the <guimenu>Configure Active Directory Certificate Services on the server</guimenu>
	  option must be selected. <guimenu>Certification Authority</guimenu> is selected as the role service to be
	  configured. The type of installation is <guimenu>Enterprise CA &ar; Root CA</guimenu>
	  Now, click on <guimenu>Create a new private key</guimenu> and confirm the suggested encryption settings and the suggested name of
	  the certification authority. Any period of validity can be set. The standard paths can be
	  used for the database location.
	</para>

	<para>
	  The AD server must then be restarted.
	</para>

	<para>
	  This certificate must now be exported and copied onto the UCS system: <guimenu>Server Manager  &ar; Active Directory Certificate Services</guimenu>
	  Then right click on the server and select
	  <guimenu>Certification Authority</guimenu>. There, right click on the name of the generated
	  certificate and <guimenu>Open &ar; Copy to File &ar; DER encoded binary X.509 (.CER) &ar;
	  Select an arbitrary filename &ar; Finish</guimenu>.
	</para>

	<para>
	  A computer list is shown there and the elements <guimenu>Revoked Certificates</guimenu>,
	  <guimenu>Issued Certificates</guimenu>, <guimenu>Pending Requests</guimenu>,
	  <guimenu>Failed Requests</guimenu> and <guimenu>Certificate Templates</guimenu>
	  displayed under every system. Here, one must right click on the computer name - not on
	  one of the elements - and then select <guimenu>Properties</guimenu>. The root
	  certificate is usually called <emphasis>Certificate Nr. 0</emphasis>. Then select
	  <guimenu>Open &ar; Copy to File &ar; DER encoded binary X.509 (.CER) &ar; Select an arbitrary
	  filename &ar; Finish</guimenu>.
	</para>

  </section>


<section id="windows:Copying_the_Active_Directory_certificate_to_the_UCS_system"><title>Copying the Active Directory certificate to the UCS system</title>
<para>
The SSL AD certificate should now be imported into the UCS
system using the &ucsUMC; wizard.
</para>
<para>
This is done by clicking on <guimenu>Upload</guimenu> in the sub menu
<guimenu>Active Directory Server configuration</guimenu>.
</para>
<para>
This opens a window in which a file can be selected, which is being
uploaded and integrated into the AD connector.
</para>
</section>
</section>

<section id="ad-connector:password-dienst"><title>Setting up the password service on the AD system</title>
<para>
Active Directory prohibits the request of passwords via the LDAP
protocol, which requires the installation of a package on the
Windows server.
</para>
<para>
The installation packages are also provided via the setup
wizard &ucsUMC;.
</para>
<para>
<figure><title>Packages for the password service</title>
 <graphic scalefit="1" width="80%" fileref="illustrations/adconnector_6-en_de.png"/>
 </figure>
</para>
<itemizedlist>
<listitem><simpara><filename>ucs-ad-connector.msi (for 32bit Windows)</filename></simpara></listitem>
<listitem><simpara><filename>ucs-ad-connector-64bit.msi (for 64bit Windows)</filename></simpara></listitem>
<listitem><simpara><filename>Microsoft Visual C++ 2010 Redistributable Package (x86)</filename></simpara></listitem>
<listitem><simpara><filename>private.key</filename></simpara></listitem>
<listitem><simpara><filename>cert.pem</filename></simpara></listitem>
</itemizedlist>
<para>
On 64-bit Windows versions, the <emphasis>Microsoft Visual C++ 2010
  Redistributable Package (x86)</emphasis> must be installed before the
installation of the AD connector.
</para>
<para>
The MSI files are the installation files for the
password service and can be started by double clicking on it.
</para>
<para>
The package is installed in the <command>C:\Windows\UCS-AD-Connector</command> directory automatically.
Additionally, the
password service is integrated into the Windows environment as a
system service, which means the service can be started automatically
or manually. After the installation the password service is configured
for automatic startup.
</para>
<para>
The <filename>private.key</filename> and <filename>cert.pem</filename> files contain the SSL
certificates created in UCS for secure communication with the password service. They must also
be copied into the installation directory of the password service.
The password service must then be restarted.
</para>
<para>
During a standard installation in Windows 2008 the Windows firewall
blocks the access to the AD connector. This must either be deactivated
in <guimenu>System settings</guimenu> or Port 6670/TCP authorised.
</para>
</section>

<section id="ad-connector:neustart"><title>Starting/Stopping the Active Directory connector</title>
<para>
The connector can be started using <guimenu>Start Active
  Directory connector</guimenu> and stopped using
<guimenu>Stop Active Directory connector</guimenu>. Alternatively, the
starting/stopping can also be performed with the
<filename>/etc/init.d/univention-ad-connector</filename> init script.
</para>
</section>

<section id="windows:Functional_test_of_basic_settings"><title>Functional test of basic settings</title>
<para>
The correct basic configuration of the connector can be checked by
searching in Active Directory from the UCS system. Here one can search e.g.
for the administrator account in Active Directory
with <command>univention-adsearch cn=Administrator</command>.
</para>
<para>
As <command>univention-adsearch</command> accesses the configuration saved
in &ucsUCR;, this allows you to check the reachability/configuration
of the Active Directory access.
</para>
</section>
</section>

<section id="ad-connector:tools"><title>Additional tools / Debugging connector problems</title>
<para>
The AD connector provides the following tools and log files for diagnosis:
</para>

<section id="ad-connector:univention-adsearch"><title>univention-adsearch</title>
<para>
This tool facilitates a simple LDAP search in Active Directory.
Objects deleted in AD are always shown (they are still kept in
an LDAP subtree in AD). As the first parameter the script awaits an LDAP
filter; the second parameter can be a list of LDAP attributes to be
displayed.
</para>
<para>
Example:
</para>
<programlisting language="sh">
univention-adsearch cn=administrator cn givenName
</programlisting>
</section>

<section id="ad-connector:univention-connector-list-rejected"><title>univention-connector-list-rejected</title>
<para>
This tool lists the DNs of non-synchronised objects. In addition, in
so far as temporarily stored, the corresponding DN in the
respective other LDAP directory will be displayed. In conclusion
<emphasis>lastUSN</emphasis> shows the ID of the last change synchronised by AD.
</para>
<para>
This script may display an error message or an incomplete output if
the AD connector is in operation.
</para>
</section>

<section id="windows:Logfiles"><title>Logfiles</title>
<para>
For troubleshooting when experiencing synchronisation problems,
corresponding messages can be found in the following files on the UCS
system:
</para>
<programlisting>
/var/log/univention/connector.log
/var/log/univention/connector-status.log
</programlisting>
<para>
The status notifications of the password service on the AD side are
logged in the <filename>C:\\Windows\\UCS-AD-Connector\\UCS-AD-Connector.log</filename> file.
</para>
</section>
</section>

<section id="ad-connector:details-zur-vorkonfigurierten-synchronisation"><title>Details on preconfigured synchronisation</title>
<para>
All containers which are ignored due to corresponding filters are
exempted from synchronisation as standard. This can be found in the
<filename>/etc/univention/connector/ad/mapping</filename> configuration file
under the <emphasis>global_ignore_subtree</emphasis> setting.
</para>

<section id="ad-connector:container-und-organisationseinheiten"><title>Containers and organisational units</title>
<para>
Containers and organisational units are synchronised together with their
description. In addition, the <emphasis>cn=mail</emphasis> and <emphasis>cn=kerberos</emphasis>
containers are ignored on both sides. Some particularities must be
noted for containers on the AD side. In the <guimenu>User
  manager</guimenu> Active Directory offers no possibility to create
containers, but displays them only in the advanced mode
(<guimenu>View &ar; Advanced settings</guimenu>).
</para>

<section id="windows:ad-connector:Particularities"><title>Particularities</title>
<itemizedlist>
<listitem>
<para>Containers or organisational units deleted in AD are deleted
  recursively in UCS, which means that any non-synchronised subordinate
  objects, which are not visible in AD, are also deleted.</para>
  </listitem>
</itemizedlist>
</section>
</section>

<section id="ad-connector:gruppen"><title>Groups</title>
<para>
Groups are synchronised using the group name, whereby a user's primary
group is taken into account (which is only stored for the user in LDAP
in AD).
</para>
<para>
Group members with no opposite in the other system, e.g., due to
ignore filters, are ignored (thus remain members of the group).
</para>
<para>
The description of the group is also synchronised.
</para>

<section id="windows:groups:Particularities"><title>Particularities</title>
<itemizedlist>
<listitem>
<para>The <emphasis>Pre-Windows 2000 name</emphasis> (LDAP attribute
<emphasis>samAccountName</emphasis>) is used in AD, which means that a group in
Active Directory can appear under a different name from in UCS.
</para>
</listitem>
<listitem>
<para>The connector ignores groups, which have been configured as a
  <emphasis>Well-Known Group</emphasis> under <guimenu>Samba group type</guimenu> in
  &ucsUDM;. There is no synchronisation of the SID or the RID.
</para>
</listitem>
<listitem>
<para>Groups which were configured as <emphasis>Local Group</emphasis> under
  <guimenu>Samba group type</guimenu> in &ucsUDM; are synchronised as a
  <emphasis>global group</emphasis> in the Active Directory by the connector.
</para>
</listitem>
<listitem>
<para>Newly created or moved groups are always saved in the same
  subcontainer on the opposite side. If several groups with the same
  name are present in different containers during initialisation, the
  members are synchronised, but not the position in LDAP. If one of
  these groups is migrated on one side, the target container on the
  other side is identical, so that the DNs of the groups can no longer
  be differentiated from this point onwards.
</para>
</listitem>
<listitem>
<para>Certain group names are converted using a mapping table so that,
  for example in a German language setup, the UCS group <emphasis>Domain
    Users</emphasis> is synchronised with the AD group
  <emphasis>Domänen-Benutzer</emphasis>. When used in anglophone AD domains, this
  mapping can result in germanophone groups' being created and
  should thus be deactivated in this case. This can be done using the
  &ucsUCRV; <envar>connector/ad/mapping/group/language</envar>
</para>
<para>
The complete table is:
</para>
<informaltable>
<?dbhtml table-width="50%" ?>
<?dbfo table-width="50%" ?>
<tgroup cols="2">
<colspec colnum="1" colname="col1" colwidth="1*"/>
<colspec colnum="2" colname="col2" colwidth="1*"/>
<thead>
<row>
<entry><emphasis>UCS group</emphasis></entry>
<entry><emphasis>AD group</emphasis></entry>
</row>
</thead>
<tbody>
<row>
<entry>Domain Users</entry>
<entry>Domänen-Benutzer</entry>
</row>
<row>
<entry>Domain Admins</entry>
<entry>Domänen-Admins</entry>
</row>
<row>
<entry>Windows Hosts</entry>
<entry>Domänencomputer</entry>
</row>
</tbody>
</tgroup>
</informaltable>
</listitem>
<listitem>
<para>Nested groups are represented differently in AD and UCS. In UCS,
  if groups are members of groups, these objects can not always
  be synchronised on the AD side and appear in the list of rejected
  objects. Due to the existing limitations in Active Directory, nested
  groups should only be assigned there.
</para>
</listitem>
<listitem>
<para>If a global group A is accepted as a member of another global
  group B in &ucsUDM;, this membership does not appear in Active
  Directory because of the internal AD limitations in Windows
  2000/2003. If group A's name is then changed, the group membership
  to group B will be lost. Since Windows 2008 this limitation no
  longer exists and thus global groups can also be nested in Active
  Directory.
</para>
</listitem>
</itemizedlist>
</section>
</section>

<section id="ad-connector:benutzer"><title>Users</title>
<para>
Users are synchronised like groups using the user name or using the AD
pre-Windows 2000 name. The <emphasis>First name</emphasis>, <emphasis>Last name</emphasis>,
<emphasis>Primary group</emphasis> (in so far as present on the other side),
<emphasis>Organisation</emphasis>, <emphasis>Description</emphasis>, <emphasis>Street</emphasis>, <emphasis>City</emphasis>,
<emphasis>Postal code</emphasis>, <emphasis>Windows home path</emphasis>, <emphasis>Windows login script</emphasis>,
<emphasis>Disabled</emphasis> and <emphasis>Account expiry date</emphasis> attributes are
transferred. Indirectly <emphasis>Password</emphasis>, <emphasis>Password expiry date</emphasis>
and <emphasis>Change password on next login</emphasis> are also
synchronised. <emphasis>Primary e-mail address</emphasis> and <emphasis>Telephone number</emphasis> are
prepared but commented out due to differing syntax in the mapping
configuration.
</para>
<para>
The <emphasis>root</emphasis> and <emphasis>Administrator</emphasis> users are exempted.
</para>

<section id="windows:user:Particularities"><title>Particularities</title>
<itemizedlist>
<listitem>
<para>Users are also identified using the name, so that for users
  created before the first synchronisation on both sides, the same
  process applies as for groups as regards the position in LDAP.
</para>
</listitem>
<listitem>
<para>The synchronisation of the password expiry date and the
  <emphasis>Change password on next login</emphasis> user option occurs on the
  UCS side on the Samba level alone. If a password change is initiated
  by &ucsUDM;, but the password changed in Active Directory, the
  expiration details for the Kerberos and Posix passwords are not
  changed, so that the user must change his password again if he, for
  example, logs on to a thin client.
</para>
</listitem>
<listitem>
<para>In some cases, a user to be created under AD, for which the
  password has been rejected, is deleted from AD immediately after
  creation. The reasoning behind this is that AD created this
  user firstly and then deletes it immediately once the password is
  rejected. If these operations are transmitted to UCS, they are
  transmitted back to AD. If the user is re-entered on the AD side
  before the operation is transmitted back, it is deleted after the
  transmission. The occurrence of this process is dependent on the
  polling interval set for the connector.
</para>
</listitem>
<listitem>
<para>AD and UCS create new users in a specific primary group (usually
  <emphasis>Domain Users</emphasis> or <emphasis>Domänen-Benutzer</emphasis>) depending on the
  presetting. During the first synchronisation from UCS to AD the
  users are therefore always a member in this group.
  </para>
</listitem>
</itemizedlist>
</section>
</section>
</section>
</section>


<section id="windows:adtakeover">
  <title>Migrating an Active Directory domain to UCS using Univention AD Takeover</title>

  <section id="windows:adtakeover:intro">
	<title>Introduction</title>
	<para>
	  UCS supports the takeover of user, group and computer objects as well as Group Policy Objects
	  (GPOs) from a Microsoft Active Directory (AD) domain. The takeover is an interactive process
	  consisting of three distinct phases:

	  <itemizedlist>
		<listitem><simpara>
		  Joining the UCS domain controller into the Active Directory domain
		</simpara></listitem>

		<listitem><simpara>
		  Copying of the group policy files from the AD server to UCS
		</simpara></listitem>

		<listitem><simpara>
		  Deactivation of the AD server und assignment of all FSMO roles to the UCS DC 
		</simpara></listitem>
	  </itemizedlist>
	</para>

	<para>
	  The following requirements must be met for the takeover:

	  <itemizedlist>
		<listitem><simpara>
		  The UCS domain controller (&ucsMaster;, &ucsBackup; or &ucsSlave;) needs to be installed
		  with a unique hostname, not used in the AD domain.
		</simpara></listitem>

		<listitem><simpara>
		  The UCS domain controller needs to be installed with the same DNS domain name, NetBIOS
		  (pre-Windows 2000) domain name and Kerberos realm as the AD domain. It is also recommended
		  to configure the same LDAP base DN.
		</simpara></listitem>

		<listitem><simpara>
		  The UCS domain controller needs to be installed with a unique IPv4 address in the same IP
		  subnet as the Active Directory domain controller that is used for the takeover.
		</simpara></listitem>
	  </itemizedlist>
	</para>

	<para>
	  The <command>univention-ad-takeover</command> script is installed as a part of the package
	  <package>univention-s4-connector</package> and needs to be run as the
	  <emphasis>root</emphasis> user on the domain controller that runs the Univention S4 Connector
	  (usually the master domain controller). 
	</para>
  </section>

  <section id="windows:adtakeover:preparations">
	<title>Preparation</title>
	<para>
	  The following steps are strongly recommended before attempting the takeover:

	  <itemizedlist>
		<listitem><simpara>
		  A backup of the AD server(s) should be performed. If the AD server is running on a
		  virtualization solution, a snapshot should be made. 
		</simpara></listitem>

		<listitem><simpara>
		  If user logins to the AD server are possible  (e.g. through domain logins or terminal
		  server sessions) it is recommended to deactivate them and to stop any services in the AD
		  domain, which deliver data, e.g. mail servers. This ensures that no data is lost in case
		  of a rollback to the original snapshot/backup. 
		</simpara></listitem>

		<listitem><simpara>
		  It is recommended to set the same password for the <emphasis>Administrator</emphasis>
		  account on the AD server as the corresponding account in the UCS domain. In case different
		  passwords are used, the password that was set last, will be the one that is finally valid
		  after the takeover process (timestamps are compared for this).
		</simpara></listitem>

		<listitem><simpara>
		  In a default installation the <emphasis>Administrator</emphasis> account of the AD server
		  is deactivated. It should be activated in the local user management module. 
		</simpara></listitem>

	  </itemizedlist>
	</para>

	<para>
	  The activation of the <emphasis>Administrator</emphasis> account on the AD server is
	  recommended because this account has all the required privileges to copy the GPO sysvol
	  files. The activation can be achieved by means of the <guimenu>Active Directory Users and
	  Computers</guimenu> module or by running the following two commands:

	  <programlisting language="sh">
net user administrator /active:yes
net user administrator PASSWORD
	  </programlisting>
	</para>

  </section>

  <section id="windows:adtakeover:phase1">
	<title>Takeover phase 1</title>
	<para>
	  The takeover must be initiated on the UCS domain controller that runs the Univention S4 Connector
	  (by default the &ucsMaster;). During the takeover process Samba must only run on this UCS
	  system. If other Samba domain controllers have been added to the UCS domain, they need to be
	  stopped! This is important to avoid data corruption by mixing directory data taken over from
	  Active Directory with Samba 4 directory data replicated from other UCS domain controllers.
	</para>

	<para>
	  Other Samba systems can be stopped by logging into each of the other UCS domain controllers as
	  root user and running

	  <programlisting language="sh">
/etc/init.d/samba4 stop
	  </programlisting>
	</para>

	<para>
	  After ensuring that only the Univention S4 Connector host runs Samba 4, the takeover process
	  can be started. If the UCS domain was installed initially with a UCS version before UCS 3.2,
	  the following &ucsUCRV; needs to be set first:

	  <programlisting language="sh">
ucr set connector/s4/mapping/group/grouptype=false
	  </programlisting>
	</para>

	<para>
	  The takeover process can be started from the command line by running the following command as the root user:

	  <programlisting language="sh">
univention-ad-takeover IP-of-the-AD-server
	  </programlisting>
	</para>

	<para>
	  The script will try to access the LDAP directory of the specified Active Directory server and asks for the password of the <emphasis>Administrator</emphasis>
	  account on the AD server. By adding the <emphasis>-U</emphasis> option a different member account of the Active
	  Directory group <emphasis>Domain Admins</emphasis> can be used.
	</para>

	<para>
	  The script performs the following steps:

	  <itemizedlist>
		<listitem><simpara>
		  Check that the AD domain controller can be accessed
		</simpara></listitem>

		<listitem><simpara>
		  Adjust the system time of the UCS system to the system time of the Active Directory domain
		  controller in case the UCS time is behind by more than three minutes.
		</simpara></listitem>

		<listitem><simpara>
		  Join the UCS domain controller into the Active Directory domain
		</simpara></listitem>

		<listitem><simpara>
		  Start Samba and the Univention S4 connector to replicate the Active Directory objects into
		  the UCS OpenLDAP directory
		</simpara></listitem>
	  </itemizedlist>
	</para>
	
	<para>
	  The script output is shown on the terminal. Additional information is logged to
	  <filename>/var/log/univention/ad-takeover.log</filename>.
	</para>
  </section>

  <section id="windows:adtakeover:phase2">
	<title>Takeover phase 2</title>
	<para>
	  With the completion of phase I the UCS domain controller now contains all users, groups and
	  computers of the Active Directory domain. This is required for the correct takeover of
	  permissions of the files and directories that will be copied in phase II.
	</para>

	<para>
	  This phase requires to log onto the Active Directory domain controller as the
	  <emphasis>Administrator</emphasis>. There a command needs to be started to copy the group
	  policy files from the Active Directory SYSVOL share to the UCS SYSVOL share. Further
	  information on the SYSVOL share can be found at <xref linkend="windows:sysvolshare"/>.
	</para>

	<para>
	  For convenience the <command>univention-ad-takeover</command> script prints this command line
	  to the screen at the end of phase I:

	  <programlisting language="sh">
robocopy /mir /sec /z \\ADDCName\sysvol \\UCSDCName\sysvol
	  </programlisting>

	  It may be necessary to install the required robocopy tool, which is part of the Windows Server
	  2003 Resource Kit Tools. Starting with Windows 2008 the tool is already installed.
	</para>

	<para>
	  Note: The <emphasis>/mir</emphasis> option of robocopy mirrors the specified source
	  directory to the destination directory. Please be aware that if you delete data in the
	  source directory and execute this command a second time, this data will also be deleted in
	  the destination directory.
	</para>

	<para>
	  After successful completion of this step, it is now necessary to shutdown all domain
	  controllers of the Active Directory domain. 
	</para>
  </section>

  <section id="windows:adtakeover:phase3">
	<title>Takeover phase 3</title>
	<para>
	  The takeover process proceeds on the command line of the UCS domain controller, where the
	  <command>univention-ad-takeover</command> commands keeps waiting to continue with phase III.
	</para>

	<para>
	  The script performs the following steps:

	  <itemizedlist>
		<listitem><simpara>
		  Ensure that the AD server is no longer accessible. This is important, because the script
		  will claim all FSMO roles for the UCS domain controller to finalise the AD takeover
		  process.
		</simpara></listitem>

		<listitem><simpara>
		  Register the name of the Active Directory domain controller as a DNS alias (see <xref
		  linkend="ip-config:CNAME-Record_Alias-Records"/>) for the UCS DNS server.
		</simpara></listitem>

		<listitem><simpara>
		  Configure the IP address of the Active Directory domain controller as a virtual ethernet
		  interface
		</simpara></listitem>

		<listitem><simpara>
		  Perform some cleanup, e.g. removal of the AD domain controller account and related objects in
		  the Samba SAM account database.
		</simpara></listitem>

		<listitem><simpara>
		  Finally restart Samba and the DNS server 
		</simpara></listitem>
	  </itemizedlist>
	</para>
  </section>

  <section id="windows:adtakeover:finalsteps">
	<title>Final steps of the takeover</title>
	<para>
	  After completion of the AD Takeover script the following steps are required:

	  <itemizedlist>
		<listitem><simpara>
		  The domain function level of the migrated Active Directory domain needs to be checked by
		  running the following command:

		  <programlisting language="sh">
samba-tool domain level show
		  </programlisting>

		  In case this command returns the message <guimenu>ATTENTION: You run SAMBA 4 on a forest
		  function level lower than Windows 2000 (Native).</guimenu> the following commands should
		  be run to fix this:

		  <programlisting language="sh">
samba-tool domain level raise --forest-level=2003 --domain-level=2003
samba-tool dbcheck --fix --yes
		  </programlisting>
		</simpara></listitem>

		<listitem><simpara>
		  In case there has been more than one Active Directory domain controller in the original
		  Active Directory domain, all the host accounts of the other domain controllers must be
		  removed in the computers management module of the Univention Management Console.
		  In addition their accounts must be removed from the Samba SAM database. This may be done
		  by logging on to a migrated Windows client as member of the group
		  <emphasis>Domain Admins</emphasis> and running the tool
		  <guimenu>Active Directory Users and Computers</guimenu>.
		</simpara></listitem>

		<listitem><simpara>
		  If more than one UCS domain controller with Samba domain controller has been installed,
		  these servers need to be re-joined.
		</simpara></listitem>

		<listitem><simpara>
		  All Windows clients need to be rebooted.
		</simpara></listitem>
	  </itemizedlist>
	</para>
  </section>

  <section id="windows:adtakeover:tests">
	<title>Tests</title>
	<para>
	  It is recommended to perform thorough tests with Windows client systems, e.g.

	  <itemizedlist>
		<listitem><simpara>
		  Login to a migrated client as a migrated user
		</simpara></listitem>

		<listitem><simpara>
		  Login to a migrated client as the Administrator
		</simpara></listitem>

		<listitem><simpara>
		  Testing group policies
		</simpara></listitem>

		<listitem><simpara>
		  Join of a new Windows client
		</simpara></listitem>

		<listitem><simpara>
		  Creation of a new UCS user and login to a Windows client 
		</simpara></listitem>
	  </itemizedlist>
	</para>
  </section>

</section>



</chapter>
