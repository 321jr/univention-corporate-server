<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
          "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [

  <!ENTITY % entities SYSTEM "../stylesheets/macros-en.ent" >

  %entities;
]>
<book lang="en" id="uvmm-4.0">
	<bookinfo>
		<title>Univention Corporate Server</title>
		<subtitle>Extended virtualization documentation</subtitle>

		<revhistory>
			<revision>
				<revnumber>4.0-0</revnumber>
				<date>16 Oct 2014</date>
			</revision>
		</revhistory>
	</bookinfo>

	<chapter id="uvmmext:iscsi">
		<title>Operating storage pools using iSCSI</title>
		<para>
			iSCSI is a standard for connecting SCSI storage devices via a TCP-based network
			connection. iSCSI makes it possible to use a wide range of professional storage solutions
			for the storage of virtual machines. This documentation describes the connection of an iSCSI
			storage device (also known as a <emphasis>target</emphasis>) as a storage pool for the
			&ucsUVMM;.
		</para>

		<section id="uvmmext:iscsi:precon">
			<title>Requirements</title>
			<para>
				<itemizedlist>
					<listitem><simpara>
							The <emphasis>open-iscsi</emphasis> package must be installed on the virtualization
							servers. 
					</simpara></listitem>

					<listitem><simpara>
							The iSCSI storage device must be configured in such a way that the virtualization
							servers can access it: The servers use the name stored in the
							<filename>/etc/iscsi/initiatorname.iscsi</filename> file as the initiator name. The
							name may still need to be generated automatically, which can be done by running
							<command>/etc/init.d/open-iscsi restart</command> once.
					</simpara></listitem>

					<listitem><simpara>
							The libvirt interface used by UVMM does not currently support any authentication. If
							CHAP is used, the <filename>/etc/iscsi/iscsid.conf</filename> file must be
							adjusted by hand. 
					</simpara></listitem>
				</itemizedlist>
			</para>
		</section>

		<section id="uvmmext:iscsi:integration">
			<title>Integration of iSCSI storage pools</title>
			<para>
				UVMM does not yet support the creation of storage pools via the UMC. The creation of
				storage pools is described below.
			</para>

			<para>
				To make an additional storage pool available on a virtualization server, it is necessary
				to create an XML file with a description. The creation of storage pools is documented in
				the virtualization chapter of the UCS manual. Below, a storage pool is defined which
				accesses an iSCSI storage device.
			</para>

			<para>
				<itemizedlist>
					<listitem><simpara>
							The <emphasis>type</emphasis> attribute must be set to the <emphasis>iscsi</emphasis>
							value in the <emphasis>pool</emphasis> element.
					</simpara></listitem>

					<listitem><simpara>
							A <emphasis>source</emphasis> element is used to specify the source servers (iSCSI
							target).
					</simpara></listitem>

					<listitem><simpara>
							The <emphasis>target</emphasis> element is used to define the path to the device
							files. The <filename>/dev/disk/by-path</filename> should be used there for stable
							names. 
					</simpara></listitem>
				</itemizedlist>
			</para>

			<para>
				In the following example, a storage pool is defined, which mounts the
				<emphasis>iqn.2010-08.local.ucs:sdb</emphasis> iSCSI target from the
				<emphasis>xen6.ucs.local</emphasis> server: 

				<programlisting language="sh">
					&lt;pool type='iscsi'&gt;
					&lt;name&gt;iscsi&lt;/name&gt;
					&lt;source&gt;
					&lt;host name='xen6.ucs.local' port='3260'/&gt;
					&lt;device path='iqn.2010-08.local.ucs:sdb'/&gt;
					&lt;/source&gt;
					&lt;target&gt;
					&lt;path&gt;/dev/disk/by-path&lt;/path&gt;
					&lt;/target&gt;
					&lt;/pool&gt;
				</programlisting>
			</para>

			<para>
				This description must firstly be saved in a file (for example, in the
				<filename>iscsi-pool.xml</filename> file). For it to be possible to use this storage pool,
				the following commands must be run:

				<programlisting language="sh">
					virsh pool-define iscsi-pool.xml
					virsh pool-start iscsi
					virsh pool-autostart iscsi
				</programlisting>

				The UVMM service will detect the new storage pool automatically after a certain period of
				time. Alternatively, the service can also be restarted once so that this new storage pool
				information is detected immediately:

				<programlisting language="sh">
					/etc/init.d/univention-virtual-machine-manager-daemon restart
				</programlisting>
			</para>
		</section>

		<section id="uvmmext:iscsi:use">
			<title>Use of iSCSI storage pools</title>
			<para>
				Hard disks in UVMM can then be used from the storage pool. When doing so, ensure that no
				new images are saved in an iSCSI storage pool and only existing ones are selected. The
				individual LUNs are offered as possible images.
			</para>

			<para>
				If new iSCSI LUNs are set up, the iSCSI storage pool must still be reimported manually at
				present. This can be done using the following command:

				<programlisting language="sh">
					virsh pool-refresh "$pool_name"
				</programlisting>

				For the example above:

				<programlisting language="sh">
					virsh pool-refresh iscsi
				</programlisting>
			</para>
		</section>
	</chapter>

	<chapter id="uvmmext:xen">
		<title>Xen deprecated in UCS-4</title>
		<para>
			For UCS-4.0 Univention decided to drop support for the <application>Xen</application> hypervisor in favour of <application>QEMU/KVM</application>.
			UCS-4 no longer contains the package <package>xen-4.1</package> customized by Univention, but only the package <package>xen</package> as maintained by Debian.
			Customers using <application>Xen</application> updating from UCS-3 must decide to either switch to that version or to migrate to a different hypervisor like <application>QEMU/KVM</application>.
		</para>

		<section id="uvmmext:xen:debian">
			<title>Switch to Debian-Xen</title>
			<para>
				The major differences between the UCS version and Debian version are:
			</para>
			<variablelist>
				<varlistentry>
					<term>Different Xen patch set</term>
					<listitem>
						<simpara>
							The UCS version contained several patches on top of the Debian version, which fixed several issues (<ulink url="&ucsbug;18357">Bug 18357</ulink>, <ulink url="&ucsbug;23394">Bug 23394</ulink>, <ulink url="&ucsbug;23812">Bug 23812</ulink>, <ulink url="&ucsbug;36098">Bug 36098</ulink>).
							They might not be fixed or fixed differently in the Debian version.
						</simpara>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>Different libvirt patch set</term>
					<listitem>
						<simpara>
							The UCS version of <package>libvirt</package> contained several patches specifically for <application>Xen</application>, which are no longer applied (<ulink url="&ucsbug;20024">Bug 20024</ulink>, <ulink url="&ucsbug;29532">Bug 29532</ulink>).
						</simpara>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>No blktap Linux kernel module</term>
					<listitem>
						<simpara>
							The UCS Linux kernel contained the module <package>blktap</package>, which was used to provide block devices for virtual machines.
							This module is no longer included in the default kernel, but can be self-compiled using <application>DKMS</application> and the package <package>blktap-dkms</package>.
						</simpara>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>Different package layout</term>
					<listitem>
						<simpara>
							UCS-3 had its own source code package for <application>Xen</application>, which was used to build several binary packages.
							This might break an automatic update, as files might be moved between packages.
							The package manager <application>dpkg</application> will then refuse to install the Debian packages.
							As such it is advisable to remove the old UCS packages before installing the new Debian based packages.
						</simpara>
						<programlisting language="sh">
# Remove xen-4.1 before update
apt-get remove xen-4.1 libxenstore3.0 libxen4.1 libxen-dev xen-4.1-dbg
# Upgrade to UCS-4
univention-upgrade
# Re-install xen
ucr set repository/online/unmaintained=yes
univention-install xen
						</programlisting>
					</listitem>
				</varlistentry>
			</variablelist>
		</section>

		<section id="uvmmext:xen:qemu">
			<title>Switch to QEMU/KVM</title>
			<para>
				The switch from <application>Xen</application> to <application>KVM</application> is easier for UCS (or other Linux) based virtual machines, as they contain drivers for both hypervisors.
			</para>
			<para>
				Inside the virtual machine perform the following actions:
			</para>
			<itemizedlist>
				<listitem>
					<para>
						Convert any reference to <application>Xen</application> specific block devices like <filename>/dev/xvd<replaceable>a1</replaceable></filename> in <filename>/etc/fstab</filename> into either a device name independent format using <filename>LABEL=</filename> or <filename>UUID=</filename>, or to <filename>/dev/vd<replaceable>a1</replaceable></filename>.
					</para>
				</listitem>
				<listitem>
					<para>
						Do the same for the <application>GRUB</application> boot loader.
						Check that no <application>Xen</application> specific block device is mentioned in <filename>/boot/grub/grub.cfg</filename>.
					</para>
				</listitem>
				<listitem>
					<para>
						Make sure <application>GRUB</application> is installed in directory <filename class="directory">/boot/</filename> and the master boot record (<abbrev>MBR</abbrev>) of the first hard disk.
						Use the commands <command>fdisk</command>, <command>gdisk</command>, <command>grub-install</command> and <command>update-grub</command> as needed.
					</para>
				</listitem>
				<listitem>
					<para>
						Check the file <filename>/etc/inittab</filename> for any <application>getty</application> running on <filename class="devicefile">hvc0</filename> or any other <application>Xen</application> specific console.
						Either remove those lines or convert them to a traditional serial console <filename class="devicefile">ttyS0</filename>, which is supported by <application>QEMU</application>.
					</para>
				</listitem>
				<listitem>
					<para>
						Check all &ucsUCRV;s still referencing <application>Xen</application> specific devices and convert them to the appropriate equivalent:
					</para>
						<programlisting language="sh">
ucr search --value '^(/dev/)?xvd[a-z]+[0-9]*$'
						</programlisting>
				</listitem>
				<listitem>
					<para>
						Check the &ucsUCRV; <envar>kernel/modules</envar> for any <application>Xen</application> specific modules and remove them.
						The variable is a list of semicolon separated values.
					</para>
				</listitem>
				<listitem>
					<para>
						On Windows the <emphasis>GPLPV drivers for Xen</emphasis> must be replaced by the <emphasis>VirtIO drivers for QEMU/KVM</emphasis>.
						They are provided by the package <package>univention-kvm-virtio</package> and are available as an ISO image in <filename>/var/lib/livirt/images/</filename>.
						The exact procedure differs between Windows versions and is beyond the scope of this documentation.
					</para>
				</listitem>
				<listitem>
					<para>
						Shut down the virtual machine cleanly.
						Suspending the machine is not enough!
					</para>
				</listitem>
			</itemizedlist>
			<para>
				If you have multiple servers it is best to just define a new virtual machine using <application>QEMU/KVM</application> on a new server reusing the existing image files.
				This is easy if a shared storage is used.
				Otherwise the image must be copied over to the new server.
				The exact file path can be queries from &ucsUVMM; or by running the command <command>virsh domblklist "$VM"</command>, where <envar>$VM</envar> is the name or UUID of one virtual machine.
			</para>
			<para>
				Alternatively the configuration files for the virtual machines can be re-used to re-define the virtual machine on a different server or on the same server after it is updated to run <application>QEMU</application>.
				The command <command>virsh dumpxml "$VM"</command> can be used to generate an XML file describing a single virtual machine.
				This file must be updated, as there are several differences between <application>Xen</application> and <application>QEMU/KVM</application>:
			</para>
			<itemizedlist>
				<listitem>
					<para>
						The attribute <literal>/domain/@type</literal> must be changed from <literal>xen</literal> to <literal>kvm</literal>.
					</para>
				</listitem>
				<listitem>
					<para>
						<application>QEMU/KVM</application> only supports full-virtualization (<abbrev>HVM</abbrev>).
						The element <literal>/domain/os/type</literal> must be set to <literal>hvm</literal>.
						The elements  <literal>/domain/bootloader</literal> and <literal>/domain/bootloader_args</literal> must be removed.
					</para>
				</listitem>
				<listitem>
					<para>
						Remove the element <literal>/domain/os/loader</literal> for HVM domains.
					</para>
				</listitem>
				<listitem>
					<para>
						The element <literal>/domain/devices/emulator</literal> should point to <filename>/usr/bin/kvm</filename>.
					</para>
				</listitem>
				<listitem>
					<para>
						For each block device <literal>/domain/devices/disk</literal> change <literal>driver/@type='tap2'</literal> to <literal>qemu</literal> and <literal>driver/@name='aio'</literal> to <literal>raw</literal>.
						In the element <literal>target</literal> replace any <literal>@bus='xen'</literal> with <literal>virtio</literal> and convert the attribute <literal>@dev</literal> from <literal>xvd<replaceable>X</replaceable></literal> to <literal>vd<replaceable>X</replaceable></literal>.
						You can also use <literal>@bus='ide'</literal> and <literal>@dev='hd<replaceable>X</replaceable>'</literal> if an emulated <abbrev>IDE</abbrev> device is preferred to the more efficient <abbrev>VirtIO</abbrev>.
					</para>
				</listitem>
				<listitem>
					<para>
						For each network interface <literal>/domain/devices/interfaces</literal> change <literal>model/@type</literal> to <literal>virtio</literal> or any other type supported by <application>QEMU/KVM</application> like <literal>e1000</literal> or <literal>rtl8139</literal>.
						Remove any element <literal>/domain/devices/interfaces/script</literal>.
						Check that the attribute <literal>source/@bridge</literal> references a valid bridge interface on the target host system.
					</para>
				</listitem>
				<listitem>
					<para>
						In any element <literal>/domain/devices/console/target</literal> the attribute <literal>@type='xen'</literal> should be changed to <literal>@type='serial'</literal>.
					</para>
				</listitem>
				<listitem>
					<para>
						In any element <literal>/domain/devices/input</literal> the attribute <literal>@bus='xen'</literal> should be changed to <literal>@bus='usb'</literal>.
					</para>
				</listitem>
			</itemizedlist>
			<para>
				The following <abbrev>XSLT</abbrev> style sheet can be used to transform a <application>Xen</application> domain definition into a <application>QEMU/KVM</application> definition as a first step using a command like <command>xsltproc</command>:
			</para>
			<programlisting language="xml"><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="uvmm-4.0-xen2qemu.xsl" parse="text"/></programlisting>
			<para>
				The XML file should then be copied to the <application>QEMU/KVM</application> server.
				It uses the <command>xsltproc</command> <abbrev>XSLT</abbrev> command line processor, which is provided by the package <package>xsltproc</package>.
				The virtual machine can be re-defined using the command <command>virsh define "$FILENAME"</command>.
			</para>
		</section>

	</chapter>

	<chapter id="uvmmext:kvm">
		<title>Network setup for virtual machines</title>
		<para>
			With UCS-3 a script renamed the physical interface <filename class="devicefile">eth<replaceable>X</replaceable></filename> into <filename class="devicefile">peth<replaceable>X</replaceable></filename> and created a bridge interface with the old name as a replacement.
			This is no longer recommended as this script only supports a very basic setup and is confusing to most users.
			As such UCS was changed to support bridging, bonding and VLANs, which is described fully in the UCS manual.
		</para>
		<para>
			Unfortunately this leads to a user visible change of the network interface, as <filename class="devicefile">eth<replaceable>X</replaceable></filename> now no longer is the name of the bridge interface but of the physical interface again.
			As this interface name is referenced in the domain configurations of all existing virtual machines, they will no longer start.
			This is further complicated by the fact, that each snapshot and saved virtual machine also contains the old information, which should be updated.
		</para>
		<procedure>
			<title>Convert virtual machines to new network bridge setup</title>
			<step>
				<para>
					Repeat the following steps on each host and for each virtual machine to be updated.
					Use the command <command>virsh list --all</command> to get a list of all defined domains.
				</para>
			</step>
			<step>
				<para>
					For each virtual machine named <replaceable>$vm</replaceable> update the persistent domain configuration using the following steps:
				</para>
				<substeps>
					<step>
						<para>
							Run the command <command>virsh edit "$vm"</command> to get the configuration opened in an editor.
						</para>
					</step>
					<step>
						<para>
							In the XML file lookup all network interfaces below <literal>/domain/devices/interfaces/source</literal> and change the attribute <literal>bridge</literal> from <literal>eth0</literal> to <literal>br0</literal> (or whatever).
						</para>
					</step>
					<step>
						<para>
							Quit the editor to save the file.
						</para>
					</step>
				</substeps>
			</step>
			<step performance="optional">
				<para>
					If the virtual machine has snapshots, they need to be updated as well.
					Use the command <command>virsh snapshot-list "$vm"</command> to get a list of all snapshots.
				</para>
				<para>
					For each snapshot named <replaceable>$snap</replaceable> update the domain configuration of that snapshot using the following steps:
				</para>
				<substeps>
					<step>
						<para>
							Run the command <command>virsh snapshot-edit "$vm" "$snap"</command> to get the configuration opened in an editor.
						</para>
					</step>
					<step>
						<para>
							In the XML file lookup all network interfaces below <literal>/domainsnapshot/domain/devices/interfaces/source</literal> and change the attribute <literal>bridge</literal> from <literal>eth0</literal> to <literal>br0</literal> (or whatever).
						</para>
					</step>
					<step>
						<para>
							Quit the editor to save the file.
						</para>
					</step>
				</substeps>
			</step>
			<step performance="optional">
				<para>
					If the domain is suspend to disk, the suspend image also contains a copy of the domain configuration.
					Use the command <command>virsh dominfo "$vm"</command> to check <literal>Managed save</literal>.
					If it is <literal>yes</literal>, the image must be either updates or discarded.
				</para>
				<stepalternatives>
					<step>
						<para>
							Run the command <command>virsh managedsave-remove "$vm"</command> to discard the saved data.
							This will remove the runtime state of the virtual machine, but the persistent date stored in the image files is not discarded.
							Normally the operating system will then perform a file system check as it looks like the virtual machine has crashed 
						</para>
					</step>
					<step>
						<para>
							To update the image, run the following sequence of commands
							command <command>virsh save-image-edit "/var/lib/libvirt/qemu/save/$vm.save"</command>.
						</para>
					</step>
				</stepalternatives>
			</step>
		</procedure>

		<section id="uvmmext:kvm:migrate">
			<title>Migrating virtual machines between hosts</title>
			<para>
				(Live-)migration also transfers the domain configuration.
				This breaks when the network interface names differ between the source and destination host.
				Because of that it is strongly advised to shut down any virtual machine cleanly and to transfer them as described above.
			</para>
			<para>
				There is a second option available which allows updating virtual machines while they are migrated from a UCS-3 to a UCS-4 host.
				<application>libvirt</application> provides a hook mechanism, which can be used to rewrite the virtual machine configuration on-the-fly for incoming migrations.
				This is fully described in the <ulink url="http://libvirt.org/hooks.html">libvirt hook documentation</ulink>.
			</para>
			<para>
				The following example can be used to convert the network interface name <filename class="devicefile">eth0</filename> to <filename class="devicefile">br0</filename>.
				The following script must be copied to <filename>/etc/libvirt/hooks/qemu</filename> and be marked as executable using <command>chmod +x</command>:
			</para>
			<programlisting language="sh"><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="uvmm-4.0-qemu_hook.sh" parse="text"/></programlisting>
			<para>
				The script uses the <command>xsltproc</command> <abbrev>XSLT</abbrev> command line processor, which is provided by the package <package>xsltproc</package>.
				The corresponding style sheet file must be copies to <filename>/etc/libvirt/hooks/qemu.xsl</filename>, which looks like this:
			</para>
			<programlisting language="xml"><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="uvmm-4.0-qemu_hook.xsl" parse="text"/></programlisting>
			<warning>
				<para>
					Migration can only be done in the direction UCS-3 to UCS-4, not the reverse.
					As UCS-4 is using a newer version of <application>libvirt</application>, additional settings are added to the virtual machine configuration, which older versions can't process.
					Make sure to backup the pre-migration configuration using <command>virsh dumpxml "$vm"</command>.
				</para>
			</warning>
		</section>

		<section id="uvmmext:kvm:profile">
			<title>UVMM profiles</title>
			<para>
				In addition to that the UVMM profiles should be updated as well, as they name the network interface which is used to connect newly created virtual machines.
				This is described in the main UCS manual in <emphasis>UVMM chapter</emphasis> in the section <emphasis>Changing default network</emphasis>.
			</para>
		</section>

	</chapter>

	<?dbhtml-include href="../stylesheets/piwik.html"?>
</book>
<!-- vim:set ts=2 sw=2 noet: -->
