<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
          "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [

  <!ENTITY % entities SYSTEM "../stylesheets/macros-en.ent" >
  <!ENTITY bibliography SYSTEM "../stylesheets/bibliography-en.xml">

  %entities;
]>
<book lang="en" id="networks-3.1">
    <bookinfo>
      <title>Univention Corporate Server</title>
      <subtitle>Extended domain services documentation</subtitle>

        <revhistory>
            <revision>
                <revnumber>3.1-1</revnumber>
                <date>27 May 2013</date>
            </revision>
        </revhistory>
    </bookinfo>

    <chapter>
        <title>Integration of Ubuntu clients into a UCS domain</title>
        <para>
		  Univention Corporate Server allows the integration of Ubuntu clients. Initially a
		  standard Ubuntu installation needs to be performed. The following section describe the
		  configuration changes, which need to be made to integrate the Ubuntu client into the UCS
		  domain. After successful integration users can authenticate on the Ubuntu clients with
		  their standard UCS domain password and user name.
		</para>

        <para>
		  This configuration has been tested with Ubuntu 12.04 LTS and 12.10 as well as Kubuntu
		  12.04 LTS and 12.10.
		</para>

        <section>
            <title>Integration into the LDAP directory and the SSL certificate authority</title>
            <para>
			  After Ubuntu has been installed, some of it's configuration files need to be
			  modified. To simplify the setup, the default configuration of the UCS master domain
			  controller should be copied to the Ubuntu system, for example:
			</para>
			<programlisting language="sh">
# Become root
sudo bash

# Set the IP address of the UCS DC Master, 192.168.0.3 in this example
export MASTER_IP=192.168.0.3

mkdir /etc/univention
ssh root@${MASTER_IP} ucr shell |
    grep -v ^hostname= >/etc/univention/ucr_master
echo "master_ip=${MASTER_IP}" >>/etc/univention/ucr_master
. /etc/univention/ucr_master

echo "${MASTER_IP} ${ldap_master}" >>/etc/hosts

# Exit sudo bash
exit
</programlisting>

            <para>
			  In the default configuration of UCS only authenticated users can search in the LDAP
			  directory. As such, the Ubuntu client needs an account in the UCS domain
			  to gain read access to the LDAP directory:
			</para>
            <programlisting language="sh"><![CDATA[
# Become root
sudo bash

# Set some environment variables
. /etc/univention/ucr_master

# Download the SSL certificate
mkdir -p /etc/univention/ssl/ucsCA/
wget -O /etc/univention/ssl/ucsCA/CAcert.pem \
    http://${ldap_master}/ucs-root-ca.crt

# Create an account and save the password
password="$(tr -dc A-Za-z0-9_ </dev/urandom | head -c8)"
if [ "$version_version" = 3.0 ] && [ "$version_patchlevel" -lt 2 ]
then
    ssh root@${ldap_master} udm computers/managedclient create \
        --position "cn=computers,${ldap_base}" \
        --set name=$(hostname) --set password="${password}"
else
    ssh root@${ldap_master} udm computers/ubuntu create \
        --position "cn=computers,${ldap_base}" \
        --set name=$(hostname) --set password="${password}" \
        --set operatingSystem="$(lsb_release -is)" \
        --set operatingSystemVersion="$(lsb_release -rs)"
fi
echo "${password}" > /etc/ldap.secret

# Create ldap.conf
cat >/etc/ldap/ldap.conf <<__EOF__
TLS_CACERT /etc/univention/ssl/ucsCA/CAcert.pem
URI ldap://$ldap_master:7389
BASE $ldap_base
__EOF__

# Exit sudo bash
exit
]]></programlisting>
		</section>

        <section>
            <title>Configuration of the System Security Services Daemon (SSSD)</title>
            <para>
			  SSSD provides a set of daemons to manage access to remote directories and
			  authentication mechanisms.
            </para>
            <programlisting language="sh"><![CDATA[
# Become root
sudo bash

# Set some environment variables
. /etc/univention/ucr_master

# Install SSSD based configuration
DEBIAN_FRONTEND=noninteractive apt-get -y install sssd

# Create sssd.conf
cat >/etc/sssd/sssd.conf <<__EOF__
[sssd]
config_file_version = 2
reconnection_retries = 3
sbus_timeout = 30
services = nss, pam, sudo
domains = $kerberos_realm

[nss]
reconnection_retries = 3

[pam]
reconnection_retries = 3

[domain/$kerberos_realm]
auth_provider = krb5
krb5_kdcip = ${master_ip}
krb5_realm = ${kerberos_realm}
krb5_server = ${ldap_master}
krb5_kpasswd = ${ldap_master}
id_provider = ldap
ldap_uri = ldap://${ldap_master}:7389
ldap_search_base = ${ldap_base}
ldap_tls_reqcert = never
ldap_tls_cacert = /etc/univention/ssl/ucsCA/CAcert.pem
cache_credentials = true
enumerate = true
ldap_default_bind_dn = cn=$(hostname),cn=computers,${ldap_base}
ldap_default_authtok_type = password
ldap_default_authtok = $(cat /etc/ldap.secret)
__EOF__
chmod 600 /etc/sssd/sssd.conf

# Install auth-client-config
DEBIAN_FRONTEND=noninteractive apt-get -y install auth-client-config

# Create an auth config profile for sssd
cat >/etc/auth-client-config/profile.d/sss <<__EOF__
[sss]
nss_passwd=   passwd:   compat sss
nss_group=    group:    compat sss
nss_shadow=   shadow:   compat
nss_netgroup= netgroup: nis

pam_auth=
	auth [success=3 default=ignore] pam_unix.so nullok_secure \
		try_first_pass
	auth requisite pam_succeed_if.so uid >= 500 quiet
	auth [success=1 default=ignore] pam_sss.so use_first_pass
	auth requisite pam_deny.so
	auth required pam_permit.so

pam_account=
	account required pam_unix.so
	account sufficient pam_localuser.so
	account sufficient pam_succeed_if.so uid < 500 quiet
	account [default=bad success=ok user_unknown=ignore] pam_sss.so
	account required pam_permit.so

pam_password=
	password sufficient pam_unix.so obscure sha512
	password sufficient pam_sss.so use_authtok
	password required pam_deny.so

pam_session=
	session required pam_mkhomedir.so skel=/etc/skel/ umask=0077
	session optional pam_keyinit.so revoke
	session required pam_limits.so
	session [success=1 default=ignore] pam_sss.so
	session required pam_unix.so
__EOF__
auth-client-config -n -a -p sss

# Start sssd
service sssd start

# Exit sudo bash
exit
]]></programlisting>

			<para>
			  The commands <command>getent passwd</command> and <command>getent group</command>
			  should now also display all users and groups of the UCS domain.
			</para>
		</section>

        <section>
            <title>Configuring user logins</title>
            <para>
			  The home directory of a user should be created automatically during login:
            </para>
            <programlisting language="sh"><![CDATA[
# Become root
sudo bash

cat >/usr/share/pam-configs/ucs_mkhomedir <<__EOF__
Name: activate mkhomedir
Default: yes
Priority: 900
Session-Type: Additional
Session:
    required    pam_mkhomedir.so umask=0022 skel=/etc/skel
__EOF__

DEBIAN_FRONTEND=noninteractive pam-auth-update

exit
]]></programlisting>

            <para>
			  During login users should also be added to some system groups:
            </para>
            <programlisting language="sh"><![CDATA[
# Become root
sudo bash

echo '*;*;*;Al0000-2400;audio,cdrom,dialout,floppy,plugdev,adm' \
   >>/etc/security/group.conf

cat >>/usr/share/pam-configs/local_groups <<__EOF__
Name: activate /etc/security/group.conf
Default: yes
Priority: 900
Auth-Type: Primary
Auth:
    required    pam_group.so use_first_pass
__EOF__

DEBIAN_FRONTEND=noninteractive pam-auth-update

exit
]]></programlisting>

            <para>
			  By default the Ubuntu login manager only displays a list of local users during
			  login. After adding the following lines an arbitrary user name can be used:
            </para>
            <programlisting language="sh"><![CDATA[
# Become root
sudo bash

# Add a field for a user name
echo "greeter-show-manual-login=true" >>/etc/lightdm/lightdm.conf

# Optional: Disable the user selection at the login screen
echo "greeter-hide-users=true" >>/etc/lightdm/lightdm.conf

exit
]]></programlisting>

            <para>
			  Kubuntu 12.10 uses AccountService, a D-Bus interface for use account management, which
			  ignores the <filename>/etc/lightdm.conf</filename> file.  Since there is no config
			  file for AccountService the login theme needs to be changed to
			  <emphasis>classic</emphasis> under <guimenu>System Settings -> Login Screen (LightDM)</guimenu>.
			</para>

            <para>
			  With these settings the login for domain members should be possible after a restart of
			  LightDM or a reboot.
			</para>
		</section>

        <section>
            <title>Kerberos integration</title>
            <para>
			  Every UCS domain provides a Kerberos domain. Since Kerberos relies on DNS, the
			  Ubuntu client should use a UCS domain controller as its DNS server. The following
			  steps provide an example configuration for Kerberos:
            </para>
            <programlisting language="sh"><![CDATA[
# Become root
sudo bash

# Set some environment variables
. /etc/univention/ucr_master

# Install required packages
DEBIAN_FRONTEND=noninteractive apt-get install -y heimdal-clients

# Default krb5.conf
cat >/etc/krb5.conf <<__EOF__
[libdefaults]
    default_realm = $kerberos_realm
    kdc_timesync = 1
    ccache_type = 4
    forwardable = true
    proxiable = true

[realms]
$kerberos_realm = {
   kdc = $master_ip $ldap_master
   admin_server = $master_ip $ldap_master
}
__EOF__

# Stop and disable the avahi daemon
service avahi-daemon stop
sed -i 's|start on (|start on (never and |' /etc/init/avahi-daemon.conf

# Synchronize the time with the UCS system
ntpdate $ldap_master

# Test Kerberos
kinit Administrator

# Requires domain password
krsh Administrator@$ldap_master ls /etc/univention

# Destroy the kerberos ticket
kdestroy

exit
]]></programlisting>
		</section>

        <section>
            <title>Limitations of the Ubuntu domain integration</title>
            <para>
			  It is currently not possible to change the user password at the LightDM login
			  manager. Instead, the password can be changed via the <command>kpasswd</command>
			  command after login or via the UMC module <guimenu>Change password</guimenu>.
			</para>
		</section>

        <section>
            <title>Additional references</title>
			  <itemizedlist>
				<listitem><para><ulink url="https://help.ubuntu.com/community/LDAPClientAuthentication"/></para></listitem>
				<listitem><para><ulink url="https://help.ubuntu.com/community/SingleSignOn"/></para></listitem>
				<listitem><para><ulink url="https://help.ubuntu.com/community/PamCcredsHowto"/></para></listitem>
				<listitem><para><ulink url="http://www.opinsys.fi/en/user-management-with-sssd-on-shared-laptops"/></para></listitem>
			  </itemizedlist>
		</section>
	</chapter>

    <chapter>
        <title>Managing additional certificates with univention-certificate</title>
        <para>
		  Jede UCS-Domäne verfügt über eine eigene SSL Certificate Authority. Für alle UCS-Systeme
		  werden die SSL-Zertifikate automatisch bei der Installation (&ucsMaster;) oder während des
		  Domänenbeitritts (alle anderen Systemrollen) erstellt.
		</para>

        <para>
		  Mit dem Befehl <command>univention-certificate</command> können diese Zertifikate
		  verwaltet werden, z.B. wenn für die Integration eines externen Systems ein Zertifikat
		  erzeugt werden soll.
		</para>

        <section>
            <title>Speicherung der Zertifikate</title>
			<para>
			  Die Zertifikate werden auf dem &ucsMaster; im Verzeichnis
			  <filename>/etc/univention/ssl</filename> gespeichert und auf alle &ucsBackup;-Systeme
			  synchronisiert. Für jedes Zertifikat wird im Verzeichnis
			  <filename>/etc/univention/ssl/</filename> ein Unterverzeichnis mit dem Namen des
			  Zertifikats angelegt, das folgende Dateien enthält:
			  <itemizedlist>
				<listitem><para>Die Datei <filename>cert.pem</filename> stellt das eigentliche
				Zertifikat dar. </para></listitem>
				<listitem><para>In <filename>openssl.cnf</filename> ist die OpenSSL-Konfiguration
				zum Zeitpunkt der Zertifikat-Erstellung festgehalten. </para></listitem>
				<listitem><para>Die Datei <filename>private.key</filename> enthält den privaten
				Schlüssel zu dem Zertifikat. </para></listitem>
				<listitem><para>In <filename>req.pem</filename>ist der ursprüngliche Client-Request,
				mit dem das Zertifikat erstellt wurde, dokumentiert.</para></listitem>
			  </itemizedlist>
			</para>
		</section>

        <section>
            <title>Anzeigen der Zertifikate</title>
			<para>
			  Mit dem folgenden Befehl wird eine Liste aller vorhandenen, gültigen Zertifikate
			  ausgegeben:

<programlisting language="sh"><![CDATA[
univention-certificate list
]]></programlisting>
			</para>

			<para>
			  Ein einzelnes SSL-Zertifikat kann mit dem folgenden Befehl angezeigt werden:

<programlisting language="sh"><![CDATA[
univention-certificate dump -name fullyqualifiedhostname 
]]></programlisting>
			</para>
		</section>

        <section>
            <title>Prüfen der Gültigkeit eines Zertifikats</title>
			<para>
			  Dieser Befehl prüft, ob ein Zertifikat gültig oder ungültig ist:

<programlisting language="sh"><![CDATA[
univention-certificate check -name fullyqualifiedhostname
]]></programlisting>
			</para>

			<para>
			  Ein Zertifikat kann ungültig sein, weil es entweder zurückgezogen wurde oder
			  abgelaufen ist.
			</para>
		</section>

        <section>
            <title>Rückzug eines Zertifikats</title>
			<para>
			  Mit dem Befehl
<programlisting language="sh"><![CDATA[
univention-certificate new -name fullyqualifiedhostname
]]></programlisting>
			  kann ein neues Zertifikat erzeugt werden. Als Name sollte der fully qualified domain
			  name des Rechners angegeben werden. In der Grundeinstellung ist das Zertifikate fünf
			  Jahre gültig. Der Standardwert kann durch Setzen der &ucsUCRV;
			  <envar>ssl/default/days</envar> geändert werden.
			</para>
		</section>

	</chapter>


    <?dbhtml-include href="../stylesheets/piwiki.html"?>
</book>
