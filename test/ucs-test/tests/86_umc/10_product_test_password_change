#!/usr/share/ucs-test/runner python
# desc: UMC login test
# roles-not: [basesystem]
# exposure: dangerous

from lib.umc_tester import BaseUMCTester
from selenium import webdriver
from selenium.webdriver.support import expected_conditions
from univention.admin import localization
import logging
import random
import univention.testing.udm as udm_test
import univention.testing.umc_selenium as umc_selenium_test

translator = localization.translation('univention-ucs-test_umc-tests')
_ = translator.translate


class User(object):
	def __init__(self, username, password='univention'):
		self.username = username
		self.password = password


class UMCTester(BaseUMCTester):
	def __init__(self, translator=None):
		self.args = self.parse_args()
		if translator is not None:
			translator.set_language(self.args.language)

		logging.basicConfig(level=logging.INFO)

		self.udm = udm_test.UCSTestUDM()
		self.selenium = umc_selenium_test.UMCSeleniumTest(login=False, language=self.args.language)

	def test_umc(self):
		self.test_password_change(self.admin, random_password())
		self.test_password_change(self.regular_user, random_password())
		#self.test_usability_of_a_module_after_password_change()
		#self.check_for_short_password_error()
		#self.check_for_password_reuse_error()
		# TODO: Add "change on login" test.

	def test_password_change(self, user, new_password):
		self.login_as_user(user.username, user.password)
		old_password = user.password
		user.password = new_password
		self.change_own_password(old_password, user.password)
		self.selenium.wait_for_text(_('password has been changed'))
		self.selenium.end_umc_session()
		self.login_as_user(user.username, user.password)
		self.selenium.end_umc_session()

	#def check_for_short_password_error(self):
	#	self.login_as_user(self.regular_user, self.regular_user_password)
	#	self.regular_user_password = "1"
	#	# TODO: Check for error in next step.
	#	self.change_own_password(self.regular_user_password)
	#	self.end_umc_session()

	#def check_for_password_reuse_error(self):
	#	pass

	def login_as_user(self, username, password):
		self.selenium.driver.get(
			self.selenium.base_url + 'univention/login/?lang=%s'
			% (self.selenium.language,)
		)
		self.selenium.wait_until(
			expected_conditions.presence_of_element_located(
				(webdriver.common.by.By.ID, "umcLoginUsername")
			)
		)
		self.selenium.enter_input('username', username)
		self.selenium.enter_input('password', password)
		self.selenium.submit_input('password')
		self.selenium.wait_for_any_text_in_list([
			_('Favorites'),
			_('no module available')
		])
		try:
			self.selenium.wait_for_text(_('no module available'), timeout=1)
			self.selenium.click_button(_('Ok'))
			self.selenium.wait_until_all_dialogues_closed()
		except:
			pass

	def change_own_password(self, old_password, new_password):
		self.selenium.click_element('//*[@class="umcMobileMenuToggleButton"]')
		self.selenium.click_text(_('User settings'))
		self.selenium.click_text(_('Change password'))
		self.selenium.wait_for_text(_("Change the password of"))
		self.selenium.enter_input('password', old_password)
		self.selenium.enter_input('new_password_1', new_password)
		self.selenium.enter_input('new_password_2', new_password)
		self.selenium.click_button(_('Change password'))


def random_password(length=20):
	return ''.join(random.choice(['a', 'b', 'B', '1', '2']) for _ in range(length))


if __name__ == '__main__':
	with UMCTester(translator) as umc_tester:
		umc_tester.admin = User('test-admin')
		umc_tester.regular_user = User('anna')

		umc_tester.udm.create_user(
			username=umc_tester.regular_user.username,
			password=umc_tester.regular_user.password
		)
		umc_tester.udm.create_user(
			username=umc_tester.admin.username,
			password=umc_tester.admin.password,
			primaryGroup='cn=Domain Admins,cn=groups,%s' % (umc_tester.udm.LDAP_BASE,)
		)

		umc_tester.test_umc()
