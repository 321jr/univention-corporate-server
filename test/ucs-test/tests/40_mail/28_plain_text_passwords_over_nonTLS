#!/usr/share/ucs-test/runner python
## desc: UCR configuration to disallow plain text passwords over non-TLS connections
## tags: apptest
## exposure: dangerous
## packages: [univention-mail-server]

from essential.mailclient import MailClient
from univention.config_registry import handler_set
from univention.testing.network import NetworkRedirector
import subprocess
import univention.testing.strings as uts
import univention.testing.ucr as ucr_test
import univention.testing.udm as udm_test
import univention.testing.utils as utils


def main():
	with udm_test.UCSTestUDM() as udm:
		with ucr_test.UCSTestConfigRegistry() as ucr:
			with NetworkRedirector() as nethelper:
				dovecot = ucr.is_true('mail/dovecot')
				domain = ucr.get('domainname')
				handler_set(['mail/dovecot/mailbox/delete=yes'])
				handler_set(['mail/cyrus/mailbox/delete=yes'])
				host = '%s.%s' % (ucr.get('hostname'), domain)
				password = 'univention'
				nethelper.add_loop('1.2.3.4', '4.3.2.1')

				print 'allowplaintext = no'
				handler_set(['mail/cyrus/auth/allowplaintext=no',
					'mail/dovecot/auth/allowplaintext=no'])

				name = uts.random_name()
				usermail = '%s@%s' % (name, domain)
				userdn, username = udm.create_user(
					username=name,
					set={
						'password'           : password,
						'mailHomeServer'     : host,
						'mailPrimaryAddress' : usermail
					}
				)

				imap = MailClient('1.2.3.4')
				try:
					print imap.login_plain(usermail, password)
					imap.logout()
				except Exception as ex:
					if not dovecot and 'encryption needed to use mechanism' not in str(ex):
						utils.fail('Imap login with Plaintext authentication passed while expected to fail')
					elif dovecot and 'Plaintext authentication disabled' not in str(ex):
						utils.fail('Imap login with Plaintext authentication passed while expected to fail')
					else:
						print 'Exception caught: %s' % str(ex)

				print 'allowplaintext = yes'
				handler_set(['mail/cyrus/auth/allowplaintext=yes',
					'mail/dovecot/auth/allowplaintext=yes'])

				# restart imap server
				if dovecot:
					subprocess.call(['/etc/init.d/dovecot', 'restart'], stderr=open('/dev/zero', 'w'))
				else:
					subprocess.call(['/etc/init.d/cyrus-imapd', 'restart'], stderr=open('/dev/zero', 'w'))

				name = uts.random_name()
				usermail = '%s@%s' % (name, domain)
				userdn, username = udm.create_user(
					username=name,
					set={
						'password'           : password,
						'mailHomeServer'     : host,
						'mailPrimaryAddress' : usermail
					}
				)

				imap = MailClient('1.2.3.4')
				try:
					print imap.login_plain(usermail, password)
					imap.logout()
				except Exception as ex:
					if not dovecot and 'encryption needed to use mechanism' in str(ex):
						utils.fail('Imap login with Plaintext authentication failed while expected to pass')
					elif dovecot and 'Plaintext authentication disabled' in str(ex):
						utils.fail('Imap login with Plaintext authentication failed while expected to pass')
					else:
						raise ex
	# restart imap server
	if dovecot:
		subprocess.call(['/etc/init.d/dovecot', 'restart'], stderr=open('/dev/zero', 'w'))
	else:
		subprocess.call(['/etc/init.d/cyrus-imapd', 'restart'], stderr=open('/dev/zero', 'w'))

if __name__ == '__main__':
	main()

# vim: set ft=python ts=4 sw=4 noet :
