#!/usr/share/ucs-test/runner python
## desc: DHCP pool, test to add and remove DHCP ranges
## tags: [udm-dhcp]
## roles: [domaincontroller_master]
## exposure: careful
## packages:
##   - univention-config
##   - univention-directory-manager-tools



import sys
import univention.testing.udm as udm_test
import univention.testing.strings as uts
import univention.uldap as uldap


if __name__ == '__main__':
	with udm_test.UCSTestUDM() as udm:
		dhcpService = udm.create_object('dhcp/service', service = uts.random_name())
		dhcpHostName = uts.random_name()
		dhcpHostFixedaddress = '10.20.30.40'
		moreDhcpHostFixedaddresses = ['10.20.30.41', '10.20.30.42', '10.20.30.43', '10.20.30.44']
		dhcpHost = udm.create_object('dhcp/host', host = dhcpHostName, hwaddress = 'ethernet af:e2:39:14:cb:15', fixedaddress = dhcpHostFixedaddress, superordinate = dhcpService)

		udm.modify_object('dhcp/host', dn = dhcpHost, append = {'fixedaddress': moreDhcpHostFixedaddresses}, superordinate = dhcpService)

		ldap = uldap.getAdminConnection()
		ldapFilter = '(&(cn=%s)(objectClass=univentionDhcpHost))' % dhcpHostName
		result = ldap.search(base = dhcpService, filter = ldapFilter, attr = ['univentionDhcpFixedAddress'])[0][1]['univentionDhcpFixedAddress']
		for fixedAddress in [dhcpHostFixedaddress] + moreDhcpHostFixedaddresses:
			if not fixedAddress in result:
				print 'Test FAILED. Expected "univentionDhcpFixedAddress" attribute of created DHCP host to contain "%s" after appending it, but could not find the value in there: %r.' % (fixedAddress, result)
				sys.exit(1)

		udm.modify_object('dhcp/host', dn = dhcpHost, remove = {'fixedaddress': moreDhcpHostFixedaddresses[2:]}, superordinate = dhcpService)
		result = ldap.search(base = dhcpService, filter = ldapFilter, attr = ['univentionDhcpFixedAddress'])[0][1]['univentionDhcpFixedAddress']
		for fixedAddres in moreDhcpHostFixedaddresses[2:]:
			if fixedAddress in result:
				print 'Test FAILED. "univentionDhcpFixedAddress" attribute of created DHCP pool still contained value "%s" after removing it: %r' % (fixedAddress, result)
				sys.exit(1)
