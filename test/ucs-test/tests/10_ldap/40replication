#!/usr/share/ucs-test/runner bash
## desc: LDAP-replication to backup and slave
## tags: [basic]
## roles:
##  - domaincontroller_backup
##  - domaincontroller_slave
## packages:
##  - univention-config
##  - univention-directory-manager-tools
##  - ldap-utils
## exposure: dangerous

#################
#  Information  #
#################
# This script only applies to domaincontroller_backup and domaincontroller_slave.
# It creates and modifies a container per UDM on the domaincontroller_master using ssh and the machine account.
# Modification of the container is acieved by removing and creating it, because domaincontroller_slave does not have the rights to modify.
# Modification is done 8 times in rapid succession, then 4 times in 4 seconds, then rapidly 8 times again.
# Finally this script waits for the container to appear in the local directory and checks that the latest modification was replicated.
#################
# Configuration #
#################
MAX_WAIT=100 # wait this many seconds for the container to appear in local directory
#################
# Program  code #
#################

. "$TESTLIBPATH/random.sh" || exit 1

exit_code=140 #Script-internal error

eval "$(ucr shell)"

#if [ "$server_role" != "domaincontroller_backup" -a "$server_role" != "domaincontroller_slave" ]
#then
#        echo 'This script only applies to "domaincontroller_backup" or "domaincontroller_slave"!'
#        exit 134 #This test is not necessary for this system role
#fi

trap "exit \$exit_code" EXIT

set -o errexit
set -o pipefail
set -o nounset

get_random_name() {
        set +o pipefail
        cat "/dev/urandom" | tr -dc 'A-Za-z0-9' | head -c "$1"
        set -o pipefail
}

container_name="$(get_random_name 20)"
echo "$container_name"
echo "Creating and modifiying object:"
echo "<univention-ssh>"
# Warning: univention-ssh requires another level of quoting
univention-ssh -timeout 100 "/etc/machine.secret" "$hostname\$@$ldap_master" \
"\" /usr/sbin/univention-directory-manager container/cn create --binddn cn=$hostname,cn=dc,cn=computers,$ldap_base --bindpw $(cat /etc/machine.secret) \
        --set description=original --set name=$container_name --position cn=computers,$ldap_base
for i in \$(seq 1 8)
do
    /usr/sbin/univention-directory-manager container/cn remove --binddn cn=$hostname,cn=dc,cn=computers,$ldap_base --bindpw $(cat /etc/machine.secret) \
        --dn cn=$container_name,cn=computers,$ldap_base
    /usr/sbin/univention-directory-manager container/cn create --binddn cn=$hostname,cn=dc,cn=computers,$ldap_base --bindpw $(cat /etc/machine.secret) \
        --set description=other\$i --set name=$container_name --position cn=computers,$ldap_base
done

for i in \$(seq 9 12)
do
    /usr/sbin/univention-directory-manager container/cn remove --binddn cn=$hostname,cn=dc,cn=computers,$ldap_base --bindpw $(cat /etc/machine.secret) \
        --dn cn=$container_name,cn=computers,$ldap_base
    /usr/sbin/univention-directory-manager container/cn create --binddn cn=$hostname,cn=dc,cn=computers,$ldap_base --bindpw $(cat /etc/machine.secret) \
        --set description=other\$i --set name=$container_name --position cn=computers,$ldap_base
    sleep 1s
done

for i in \$(seq 13 20)
do
    /usr/sbin/univention-directory-manager container/cn remove --binddn cn=$hostname,cn=dc,cn=computers,$ldap_base --bindpw $(cat /etc/machine.secret) \
        --dn cn=$container_name,cn=computers,$ldap_base
    /usr/sbin/univention-directory-manager container/cn create --binddn cn=$hostname,cn=dc,cn=computers,$ldap_base --bindpw $(cat /etc/machine.secret) \
        --set description=other\$i --set name=$container_name --position cn=computers,$ldap_base
done\""
echo "</univention-ssh>"
echo
echo -n "Waiting for replication of object"
for i in $(seq 0 $MAX_WAIT)
do
        if ldapsearch -LLL -x -b "cn=$container_name,cn=computers,$ldap_base" &> "/dev/zero"
        then
                break
        fi
        echo -n "."
        sleep 1s
done
echo
echo "Waited $i seconds."
echo
if ! ldapsearch -LLL -x -b "cn=$container_name,cn=computers,$ldap_base"
then
        echo 'ERROR: container not found!'
        exit_code=110 #Test failed
else
        echo 'OK: contain