#!/usr/share/ucs-test/runner bash
## desc: Checking function of ldap group to file
## tags:
##  - basic
##  - apptest
## roles-not: [basesystem]
## packages:
##  - univention-ldap-server
## exposure: dangerous

. "$TESTLIBPATH/base.sh" || exit 137
. "$TESTLIBPATH/user.sh" || exit 137
. "$TESTLIBPATH/group.sh" || exit 137
. "$TESTLIBPATH/maildomain.sh" || exit 137

#Backup
OLD_NSS_GROUP_CACHEFILE="$(ucr get nss/group/cachefile)"

DOMAIN="$(ucr get domainname)"
LDAPBASE="$(ucr get ldap/base)"
TIME_TO_WAIT=600 # time to waitf for NSS update script

ucr set nss/group/cachefile="yes"

/etc/init.d/univention-directory-listener restart

cleanup () {

	#backup mail/domain
    if [ "$rc" = "0" ]; then
        delete_mail_domain "$DOMAIN" || fail_test 1
    fi

	#backup nss/group/cachefile
	if [ -n "$OLD_NSS_GROUP_CACHEFILE" ] ; then
		ucr set nss/group/cachefile="$OLD_NSS_GROUP_CACHEFILE"
	fi

	/etc/init.d/univention-directory-listener restart

}

# create domain part in configured mail domains list
create_mail_domain "$DOMAIN"
rc=$?

trap cleanup EXIT

USERNAME=$(user_randomname)
user_create "$USERNAME" || fail_test 1

if [ "$USERNAME" == "Administrator" ]; then
	echo "Can not be an Administrator as user."
	fail_test 1
	exit "$RETVAL"
fi

GROUPNAME="$(group_randomnameme)"
group_create "$GROUPNAME" || fail_test 1

group_adduser "$USERNAME" "$GROUPNAME" || fail_test 1

wait_for_replication_and_postrun

#group_removeuser $USERNAME $GROUPNAME || fail_test 1

echo "Waiting for NSS update script"
i=0
while sleep 1s;
do
	if [ $i -lt "$TIME_TO_WAIT" ]; then
		if getent group "$GROUPNAME" | grep -q "$USERNAME"; then
			echo "NSS update script seems to work"
			break
		fi
	else
		echo "NSS update script doesn't seem to work. Waited longer than $TIME_TO_WAIT seconds."
		fail_test 1
		break
	fi
	i=`expr $i + 1`
done

group_removeuser $USERNAME $GROUPNAME || fail_test 1

wait_for_replication_and_postrun

echo "Waiting for NSS update script..."
i=0
while sleep 1s;
do
	if [ $i -lt "$TIME_TO_WAIT" ]; then
		if ! getent group "$GROUPNAME" | grep -q "$USERNAME"; then
			echo "NSS update script seems to work"
			break
		fi
	else
		echo "NSS update script doesn't seem to work. Waited longer than $TIME_TO_WAIT seconds."
		fail_test 1
		break
	fi
	i=`expr $i + 1`
done

user_remove $USERNAME || fail_test 1

group_remove $GROUPNAME || fail_test 1

wait_for_replication_and_postrun

exit "$RETVAL"
