#!/usr/share/ucs-test/runner bash
## desc: univention-admingrp-user-passwordreset (ldapdiff)
## roles:
##  - domaincontroller_master
##  - domaincontroller_backup
## packages:
##  - univention-admingrp-user-passwordreset
## exposure: dangerous


. "$TESTLIBPATH/base.sh" || exit 137
. "$TESTLIBPATH/user.sh" || exit 137
. "$TESTLIBPATH/group.sh" || exit 137
. "$TESTLIBPATH/maildomain.sh" || exit 137

create_mail_domain "$domainname"
rc=$?

cleanup_mail_domain () {
    if [ "$rc" = "0" ]; then
        delete_mail_domain "$domainname" || fail_test 1
    fi
}

trap cleanup_mail_domain EXIT

# create helpdesk group
G_HELPDESK=$(group_randomnameme)
if ! group_create $G_HELPDESK ; then
    echo "cannot create G_HELPDESK group $G_HELPDESK"
	fail_test 140
    exit "$RETVAL"
fi
# create new user
U_HELPDESK=$(user_randomname)
if ! user_create $U_HELPDESK ; then
    echo "cannot create U_HELPDESK user $U_HELPDESK"
    fail_test 140
    exit "$RETVAL"
fi

# add user to corresponding group
udm groups/group modify --dn "$(group_dn $G_HELPDESK)" --append users="$(user_dn $U_HELPDESK)"

# create new protected test user
U_PROT=$(user_randomname)
if ! user_create $U_PROT ; then
    echo "cannot create U_PROT user $U_PROT"
	fail_test 140
    exit "$RETVAL"
fi

# do some cleanup when exiting
cleanup() {
	echo "==> performing cleanup"
	ucr set ldap/acl/user/passwordreset/protected/uid="$old_ldap_acl_user_passwordreset_protected_uid" \
			ldap/acl/user/passwordreset/attributes="$old_ldap_acl_user_passwordreset_attributes"
	if [ -n "$old_ldap_acl_user_passwordreset_accesslist_groups_dn" ] ; then
		ucr set ldap/acl/user/passwordreset/accesslist/groups/dn="$old_ldap_acl_user_passwordreset_accesslist_groups_dn"
	fi
	/etc/init.d/slapd crestart

	for user in $U_HELPDESK $U_PROT ; do
		user_remove $user
	done
	for grp in $G_HELPDESK ; do
		group_remove $grp
	done

	cleanup_mail_domain

	exit "$RETVAL"
}

LDIF_ANON_A="$(mktemp /tmp/tmp.ldif_anon_a.XXXXXXX)"
LDIF_ANON_B="$(mktemp /tmp/tmp.ldif_anon_b.XXXXXXX)"
LDIF_ADMIN_A="$(mktemp /tmp/tmp.ldif_admin_a.XXXXXXX)"
LDIF_ADMIN_B="$(mktemp /tmp/tmp.ldif_admin_b.XXXXXXX)"

# backup
old_ldap_acl_user_passwordreset_accesslist_groups_dn="$ldap_acl_user_passwordreset_accesslist_groups_dn"
old_ldap_acl_user_passwordreset_protected_uid="$ldap_acl_user_passwordreset_protected_uid"
old_ldap_acl_user_passwordreset_attributes="$ldap_acl_user_passwordreset_attributes"

trap cleanup EXIT

# deactivate LDAP ACL
if [ -n "$(ucr dump | grep ^ldap/acl/user/passwordreset/accesslist/groups | cut -d: -f1)" ] ; then
	ucr unset $(ucr dump | grep ^ldap/acl/user/passwordreset/accesslist/groups | cut -d: -f1)
fi
/etc/init.d/slapd restart

# dump ldapq
echo "==> Dumping LDAP without active ACL"
ldapsearch -x > "$LDIF_ANON_A"
ldapsearch -x -D "cn=admin,$ldap_base" -y /etc/ldap.secret > "$LDIF_ADMIN_A"

# activate LDAP ACL
ucr set ldap/acl/user/passwordreset/accesslist/groups/dn="$(group_dn $G_HELPDESK)" \
	ldap/acl/user/passwordreset/protected/uid="Administrator,$U_PROT"

/etc/init.d/slapd restart

# dump ldap
echo "==> Dumping LDAP with active ACL"
ldapsearch -x > "$LDIF_ANON_B"
ldapsearch -x -D "cn=admin,$ldap_base" -y /etc/ldap.secret > "$LDIF_ADMIN_B"

echo "==> Comparing output"
if ! diff -q "$LDIF_ANON_A" "$LDIF_ANON_B" ; then
	echo "==> ERROR: anonymous LDAP dump differs"
	fail_test 1
	exit "$RETVAL"
fi

if ! diff -q "$LDIF_ADMIN_A" "$LDIF_ADMIN_B" ; then
	echo "==> ERROR: admin LDAP dump differs"
	fail_test 1
	exit "$RETVAL"
fi

# 1 beause $RETVAL was changed only to 1 as value
if [ ! "$RETVAL" = "1" ] ; then
	echo "==> Everything is fine"
	rm -f "$LDIF_ANON_A" "$LDIF_ANON_B" "$LDIF_ADMIN_A" "$LDIF_ADMIN_B"
fi

exit "$RETVAL"
