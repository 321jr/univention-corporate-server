#!/usr/share/ucs-test/runner bash
## desc: Checking for getent group crash (Bug #10558)
## bugs: [10558]
## tags: [BASIC]
## roles:
##  - domaincontroller_master
##  - domaincontroller_backup
## packages:
##  - univention-config
##  - univention-directory-manager-tools
##  - ldap-utils
## exposure: dangerous

. "$TESTLIBPATH/base.sh" || exit 1

eval "$(ucr shell)"

section "Preparing"
sleep 3s

# create domain part in configured mail domains list
setdomain=1
if ! udm mail/domain create --set name=domain.de ; then
	echo "Mail/domain object already exists or could not be created. Continue testing..."
	setdomain=0
fi

udm groups/group remove --dn "cn=subgroup,cn=groups,$ldap_base"
udm groups/group remove --dn "cn=subgroup2,cn=groups,$ldap_base"
udm groups/group remove --dn "cn=supergroup,cn=groups,$ldap_base"

for i in $(seq 1 200) ; do
  udm users/user create --ignore_exists --position "cn=users,$ldap_base" --set username=nsstest$i --set lastname=nsstest$i --set password=univention --set firstname=nsstest$i --set mailPrimaryAddress=nsstest$i@domain.de
done

_cleanup(){
  for i in $(seq 1 200) ; do
    udm users/user remove --dn "uid=nsstest$i,cn=users,$ldap_base" >/dev/null
  done
  if [[ "$setdomain" -ne 0 ]]; then
	  if ! udm mail/domain remove --dn "cn=domain.de,$ldap_base" ; then
		  echo "Could not remove main/domain cn=$domainname,$ldap_base. Continue testing..."
	  fi
  fi
}

trap _cleanup EXIT

SUBGRP=""
for i in $(seq 140 200); do
        SUBGRP="$SUBGRP --append users=uid=nsstest$i,cn=users,$ldap_base"
done

udm groups/group create --position "cn=groups,$ldap_base" --set name=subgroup$SUBGRP

section "Testing groups in groups"
sleep 3s

for i in $(seq 2 140); do
        udm groups/group remove --dn "cn=supergroup,cn=groups,$ldap_base"
        echo "---"
        echo "Testing i=$i"
        GRP="uniqueMember: uid=nsstest1,cn=users,$ldap_base
uniqueMember: cn=subgroup,cn=groups,$ldap_base"
        for t in $(seq 2 $i); do
                GRP="$GRP
uniqueMember: uid=nsstest$t,cn=users,$ldap_base"
        done
        udm groups/group create --position "cn=groups,$ldap_base" --set name=supergroup

        ldapmodify -x -h $ldap_master -p $ldap_master_port -D "cn=admin,$ldap_base" -w $(cat /etc/ldap.secret) <<EOF
dn: cn=supergroup,cn=groups,$ldap_base
changetype: modify
replace: uniqueMember
$GRP
EOF
        getent group 2>&1 > /dev/null
        if [ "$?" = "134" ] ; then
                echo "ERROR OCCURRED WITH i=$i"
		fail_test 1
        exit "$RETVAL"
    fi
done

section "Testing groups in groups in groups"
sleep 3s

udm groups/group remove --dn "cn=subgroup2,cn=groups,$ldap_base"
udm groups/group remove --dn "cn=supergroup,cn=groups,$ldap_base"
udm groups/group create --position "cn=groups,$ldap_base" --set name=subgroup2 $SUBGRP --set "nestedGroup=cn=subgroup,cn=groups,$ldap_base"

for i in $(seq 2 140); do
        udm groups/group remove --dn "cn=supergroup,cn=groups,$ldap_base"
        echo "---"
        echo "Testing i=$i"
        GRP="uniqueMember: uid=nsstest1,cn=users,$ldap_base
uniqueMember: cn=subgroup2,cn=groups,$ldap_base"
        for t in $(seq 2 $i); do
                GRP="$GRP
uniqueMember: uid=nsstest$t,cn=users,$ldap_base"
        done
        udm groups/group create --position "cn=groups,$ldap_base" --set name=supergroup

        ldapmodify -x -h $ldap_master -p $ldap_master_port -D "cn=admin,$ldap_base" -w $(cat /etc/ldap.secret) <<EOF
dn: cn=supergroup,cn=groups,$ldap_base
changetype: modify
replace: uniqueMember
$GRP
EOF

        getent group 2>&1 > /dev/null
        if [ "$?" = "134" ] ; then
                echo "ERROR OCCURRED WITH i=$i"
                echo "The testscript, testing for the crash, doing a \"getent group\" failed due to Bug: #10558"
        fail_test 111
    fi
done
echo "The testscript, testing for the crash, doing a \"getent group\" went like it should, everything is fine."

exit "$RETVAL"
