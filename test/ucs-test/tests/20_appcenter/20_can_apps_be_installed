#!/usr/share/ucs-test/runner python
## desc: Checks if apps are installable (except for apps/packages conflicting with installed apps)
## tags: [SKIP-UCSSCHOOL,basic, apptest]
## roles-not: [basesystem]
## exposure: safe
## packages:
##   - univention-management-console-module-appcenter

import sys
import subprocess

from univention.testing.ucr import UCSTestConfigRegistry

from appcentertest import get_requested_apps

from univention.appcenter.app import AppManager
from univention.appcenter.ucr import ucr_get, ucr_save
from univention.appcenter.actions import get_action
from univention.appcenter.log import log_to_stream

requested_apps = get_requested_apps()
if requested_apps and all(app.docker for app in requested_apps):
	# test runs for an hour or so...
	print 'Only testing Docker Apps. No need to check other Apps'
	sys.exit(0)

with UCSTestConfigRegistry():

	log_to_stream()

	update = get_action('update')
	update.call()
	register = get_action('register')

	def _packages_to_install(app):
		return app.get_packages()

	def _apt_get_simulate(app):
		register.call(apps=[app], register_task=['component'], do_it=True)
		subprocess.call(['/usr/bin/apt-get', 'update'], stdout=subprocess.PIPE, stderr=subprocess.PIPE)
		packages = _packages_to_install(app)
		cmd = ['/usr/bin/apt-get', 'install', '-s'] + packages
		print 'Executing the command: %s' % cmd
		retcode = subprocess.call(cmd, stderr=subprocess.STDOUT)
		register.call(apps=[app], register_task=['component'])
		return retcode == 0

	print 'Installed apps: %s' % [app for app in AppManager.get_all_locally_installed_apps()]

	failed = []
	for app in AppManager.get_all_apps():
		if app.docker:
			print 'Ignoring app %r: Docker App' % app
			continue
		forbidden, warning = app.check('install')
		if forbidden:
			print 'Ignoring app %r: requirements not met -> %r' % (app, forbidden)
			continue

		print 'Checking app: %r' % app
		if not _apt_get_simulate(app):
			failed.append(app)

	if failed:
		print '\nTEST FAILED: the following apps cannot be installed due to broken packages...'
		for app in failed:
			print '\n[ APP: %s ]' % app.id
		sys.exit(1)

sys.exit(0)
