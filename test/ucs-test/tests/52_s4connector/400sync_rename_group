#!/usr/share/ucs-test/runner python
## desc: Create groups/group
## tags: [udm,apptest]
## roles: [domaincontroller_master]
## exposure: safe
## packages:
##   - univention-config
##   - univention-directory-manager-tools
##   - univention-samba4
#
#  Bug #31324

import univention.testing.utils as utils
import univention.testing.udm as udm_test
import univention.testing.strings as uts
import subprocess
import re
import univention.config_registry
ucr = univention.config_registry.ConfigRegistry()
ucr.load()
from time import sleep


debug = True


def check_group(groupname):
	samba_tool_subprocess = subprocess.Popen(["samba-tool", 'group', 'list'],shell=False, stdout=subprocess.PIPE).communicate()
	subprocess_output = samba_tool_subprocess[0].splitlines()
	re_groupname = re.compile(r"%s"%groupname)
	group_found = False
	for line in subprocess_output:
		if re.match(re_groupname,line):
			group_found = True
	if group_found:
		print "Group synced to Samba"
	else:
		raise Exception("Groupname not found")


def modify_groupname(group_dn,groupname2,debug=False):

	udm.modify_object('groups/group', dn = group_dn, name = groupname2)

def correct_cleanup(group_dn):
	tmp = group_dn.split(',')
	modified_group_dn = 'cn={0},{1},{2},{3}'.format(groupname2,tmp[1],tmp[2],tmp[3])
	udm._cleanup['groups/group'].append(modified_group_dn)
	return modified_group_dn


def wait_for_sync(multiplier=1):
	synctime = int(ucr.get("connector/s4/poll/sleep",7))
	synctime = (synctime +3)*multiplier
	print ("Waiting {0} seconds for sync...".format(synctime))
	sleep (synctime)


if __name__ == '__main__':
	with udm_test.UCSTestUDM() as udm:

			groupname2 = uts.random_name()

			group_dn, groupname1 = udm.create_group()

			if debug:
				print ("Group DN : %s"%group_dn)
				print ("Groupname : %s"%groupname1)

			utils.verify_ldap_object(group_dn)

			wait_for_sync(3)

			check_group(groupname1)

			modify_groupname(group_dn, groupname2, debug)

			modified_group_dn = correct_cleanup(group_dn)

			wait_for_sync(3)

			check_group(groupname2)

			utils.verify_ldap_object(modified_group_dn)
