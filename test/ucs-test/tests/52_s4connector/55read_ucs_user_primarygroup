#!/bin/bash

source "$TESTLIBPATH/base.lib"
source "$TESTLIBPATH/udm.lib"
source "$TESTLIBPATH/s4connector.lib"

if [ -z "$connector_s4_ldap_host" ]; then
	warning "connector/s4/ldap/host is empty."
	warning "Assuming that the Ad-Connector isn't configured."
	warning "Skipping test."
	exit 137
fi

TEST_BASIC=false
INFO_LINE="Verify user primarygroup synchronisation after changes from ucs-side in read mode"
TEST_SERVER_ROLE="domaincontroller_master domaincontroller_backup"
TEST_PACKAGES="univention-config univention-s4-connector"

UDM_users_user_username="$(randomchars)"
UDM_users_user_lastname="$(randomchars)"
# If the password doesn't adhere the configured Windows-Password-Guidelines
# weird things might happen when the user is synced to AD.
UDM_users_user_password="U$(randomchars)123"
AD_USER_DN="CN=$UDM_users_user_username,CN=Users,$(ad_get_base)"

SYNCMODE="$(ad_get_sync_mode)"

ad_set_sync_mode "read"

section "Create a user and two groups"

GROUP1="$(randomchars)"
GROUP2="$(randomchars)"

UDM_groups_group_name="$GROUP1"
udm_create "groups/group" || fail_test 110
UDM_groups_group_name="$GROUP2"
udm_create "groups/group" || fail_test 110

udm_create "users/user" || fail_test 110

section "Add user to both groups"

udm_modify "users/user" "" "" "" "" \
	--append groups="cn=$GROUP1,cn=groups,$ldap_base" \
	--append groups="cn=$GROUP2,cn=groups,$ldap_base" || fail_test 110
ad_wait_for_synchronization; check_bool 0 110

section "Check whether groups and users exist on ucs and ad-side"

ad_exists "CN=$GROUP1,CN=groups,$(ad_get_base)"; check_bool 1 110
ad_exists "CN=$GROUP2,CN=groups,$(ad_get_base)"; check_bool 1 110
UDM_groups_group_name="$GROUP1"
udm_exists "groups/group"; check_bool 0 110
UDM_groups_group_name="$GROUP2"
udm_exists "groups/group"; check_bool 0 110

ad_exists "$AD_USER_DN"; check_bool 1 110
udm_exists "users/user"; check_bool 0 110

section "Check attributes of user and group to verify membership on ucs and ad-side"

UDM_groups_group_name="$GROUP1"
udm_verify_multi_value_udm_attribute_contains "users" \
	"uid=$UDM_users_user_username,cn=users,$ldap_base" "groups/group"; check_bool 0 110
udm_verify_multi_value_udm_attribute_contains "groups" \
	"cn=$UDM_groups_group_name,cn=groups,$ldap_base" "users/user"; check_bool 0 110
UDM_groups_group_name="$GROUP2"
udm_verify_multi_value_udm_attribute_contains "users" \
	"uid=$UDM_users_user_username,cn=users,$ldap_base" "groups/group"; check_bool 0 110
udm_verify_multi_value_udm_attribute_contains "groups" \
	"cn=$UDM_groups_group_name,cn=groups,$ldap_base" "users/user"; check_bool 0 110

section "Set primary group of user to GROUP1"

udm_modify "users/user" "" "" "" "" \
	--set primaryGroup="cn=$GROUP1,cn=groups,$ldap_base" || fail_test 110
ad_wait_for_synchronization; check_bool 0 110

ad_exists "CN=$GROUP1,CN=groups,$(ad_get_base)"; check_bool 1 110
ad_exists "CN=$GROUP2,CN=groups,$(ad_get_base)"; check_bool 1 110
ad_exists "$AD_USER_DN"; check_bool 1 110

UDM_groups_group_name="$GROUP1"
udm_verify_udm_attribute "primaryGroup" "cn=$UDM_groups_group_name,cn=groups,$ldap_base" "users/user"; check_bool 0 110
udm_verify_multi_value_udm_attribute_contains "users" \
	"uid=$UDM_users_user_username,cn=users,$ldap_base" "groups/group"; check_bool 0 110
udm_verify_multi_value_udm_attribute_contains "groups" \
	"cn=$UDM_groups_group_name,cn=groups,$ldap_base" "users/user"; check_bool 0 110
UDM_groups_group_name="$GROUP2"
udm_verify_multi_value_udm_attribute_contains "users" \
	"uid=$UDM_users_user_username,cn=users,$ldap_base" "groups/group"; check_bool 0 110
udm_verify_multi_value_udm_attribute_contains "groups" \
	"cn=$UDM_groups_group_name,cn=groups,$ldap_base" "users/user"; check_bool 0 110

section "Set primary group of user to GROUP2"

udm_modify "users/user" "" "" "" "" \
	--set primaryGroup="cn=$GROUP2,cn=groups,$ldap_base" || fail_test 110
ad_wait_for_synchronization; check_bool 0 110

ad_exists "CN=$GROUP1,CN=groups,$(ad_get_base)"; check_bool 1 110
ad_exists "CN=$GROUP2,CN=groups,$(ad_get_base)"; check_bool 1 110
ad_exists "$AD_USER_DN"; check_bool 1 110

UDM_groups_group_name="$GROUP1"
udm_verify_multi_value_udm_attribute_contains "users" \
	"uid=$UDM_users_user_username,cn=users,$ldap_base" "groups/group"; check_bool 0 110
udm_verify_multi_value_udm_attribute_contains "groups" \
	"cn=$UDM_groups_group_name,cn=groups,$ldap_base" "users/user"; check_bool 0 110
UDM_groups_group_name="$GROUP2"
udm_verify_udm_attribute "primaryGroup" "cn=$UDM_groups_group_name,cn=groups,$ldap_base" "users/user"; check_bool 0 110
udm_verify_multi_value_udm_attribute_contains "users" \
	"uid=$UDM_users_user_username,cn=users,$ldap_base" "groups/group"; check_bool 0 110
udm_verify_multi_value_udm_attribute_contains "groups" \
	"cn=$UDM_groups_group_name,cn=groups,$ldap_base" "users/user"; check_bool 0 110

section "Clean up"

udm_remove "users/user" || fail_test 110
UDM_groups_group_name="$GROUP1"
udm_remove "groups/group" || fail_test 110
UDM_groups_group_name="$GROUP2"
udm_remove "groups/group" || fail_test 110
ad_wait_for_synchronization; check_bool 0 110

ad_exists "$AD_USER_DN"; check_bool 1 110
udm_exists "users/user"; check_bool 1 110

ad_exists "CN=$GROUP1,CN=groups,$(ad_get_base)"; check_bool 1 110
ad_exists "CN=$GROUP2,CN=groups,$(ad_get_base)"; check_bool 1 110
UDM_groups_group_name="$GROUP1"
udm_exists "groups/group"; check_bool 1 110
UDM_groups_group_name="$GROUP2"
udm_exists "groups/group"; check_bool 1 110

ad_set_sync_mode "$SYNCMODE"

exit "$RETVAL"
