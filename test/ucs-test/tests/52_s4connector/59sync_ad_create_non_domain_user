#!/bin/bash

source "$TESTLIBPATH/base.lib"
source "$TESTLIBPATH/udm.lib"
source "$TESTLIBPATH/s4connector.lib"

if [ -z "$connector_s4_ldap_host" ]; then
	warning "connector/s4/ldap/host is empty."
	warning "Assuming that the Ad-Connector isn't configured."
	warning "Skipping test."
	exit 137
fi

TEST_BASIC=false
INFO_LINE="Synchronize ad-user that has another group than Domain Users as primary group in sync mode"
TEST_SERVER_ROLE="domaincontroller_master domaincontroller_backup"
TEST_PACKAGES="univention-config univention-s4-connector"

UDM_groups_group_name="$(randomchars)"
UDM_users_user_username="$(randomchars)"
AD_GROUP_DN="CN=$UDM_groups_group_name,CN=groups,$(ad_get_base)"
UDM_GROUP_DN="cn=$UDM_groups_group_name,cn=groups,$ldap_base"
AD_USER_DN="CN=$UDM_users_user_username,CN=Users,$(ad_get_base)"

SYNCMODE="$(ad_get_sync_mode)"

section "Disable connector"

ad_set_sync_mode "none"

section "Create user and group"

ad_createuser "$UDM_users_user_username" || fail_test 110
ad_creategroup "$UDM_groups_group_name" || fail_test 110

section "Set group as primary group of user"

ad_append_to_attribute "$AD_GROUP_DN" "member" "$AD_USER_DN" || fail_test 110
ad_set_primary_group "$AD_USER_DN" "$AD_GROUP_DN" || fail_test 110

section "Reenable connector"

ad_set_sync_mode "sync"
ad_wait_for_synchronization; check_bool 0 110

ad_exists "$AD_GROUP_DN"; check_bool 0 110
udm_exists "groups/group"; check_bool 0 110
ad_exists "$AD_USER_DN"; check_bool 0 110
udm_exists "users/user"; check_bool 0 110

udm_verify_multi_value_udm_attribute_contains "users" \
	"uid=$UDM_users_user_username,cn=users,$ldap_base" "groups/group"; check_bool 0 110
udm_verify_multi_value_udm_attribute_contains "groups" \
	"cn=$UDM_groups_group_name,cn=groups,$ldap_base" "users/user"; check_bool 0 110
udm_verify_udm_attribute "primaryGroup" \
	"cn=$UDM_groups_group_name,cn=groups,$ldap_base" "users/user"; check_bool 0 110
ad_verify_user_primary_group_attribute "$AD_GROUP_DN" "$AD_USER_DN"; check_bool 0 110

section "Clean up"

ad_delete "$AD_USER_DN" || fail_test 110
ad_delete "$AD_GROUP_DN" || fail_test 110
ad_wait_for_synchronization; check_bool 0 110

ad_exists "$AD_USER_DN"; check_bool 1 110
udm_exists "users/user"; check_bool 1 110
ad_exists "$AD_GROUP_DN"; check_bool 1 110
udm_exists "groups/group"; check_bool 1 110

ad_set_sync_mode "$SYNCMODE"

exit "$RETVAL"
