#!/bin/bash

source "$TESTLIBPATH/base.lib"
source "$TESTLIBPATH/udm.lib"
source "$TESTLIBPATH/s4connector.lib"

if [ -z "$connector_s4_ldap_host" ]; then
	warning "connector/s4/ldap/host is empty."
	warning "Assuming that the Ad-Connector isn't configured."
	warning "Skipping test."
	exit 137
fi

TEST_BASIC=false
INFO_LINE="Check whether ou can be recursively moved on ucs-side in write-mode"
TEST_SERVER_ROLE="domaincontroller_master domaincontroller_backup"
TEST_PACKAGES="univention-config univention-s4-connector"

#          Ou3
#         /
#      Ou1--User
#     /
# Base
#     \
#      Ou2

# shall become

# Base--Ou2--Ou1--User
#               \
#                Ou3

OU1="$(randomchars)1"
AD_OU1_DN="OU=$OU1,$(ad_get_base)"
OU2="$(randomchars)2"
AD_OU2_DN="OU=$OU2,$(ad_get_base)"
OU3="$(randomchars)3"
AD_OU3_DN="OU=$OU3,OU=$OU1,$(ad_get_base)"
USER="$(randomchars)"
AD_USER_DN="CN=$USER,OU=$OU1,$(ad_get_base)"
UDM_users_user_username="$USER"
UDM_users_user_lastname="$(randomchars)"
# If the password doesn't adhere the configured Windows-Password-Guidelines
# weird things might happen when the user is synced to AD.
UDM_users_user_password="U$(randomchars)123"

SYNCMODE="$(ad_get_sync_mode)"
ad_set_sync_mode "write"

section "Create initial Tree structure"

UDM_container_ou_name="$OU1"
udm_create "container/ou" || fail_test 110
UDM_container_ou_name="$OU2"
udm_create "container/ou" || fail_test 110
UDM_container_ou_name="$OU3"
udm_create "container/ou" "" "" "ou=$OU1,$ldap_base" || fail_test 110
UDM_users_user_username="$USER"
udm_create "users/user" "" "" "ou=$OU1,$ldap_base" || fail_test 110

ad_wait_for_synchronization; check_bool 0 110

UDM_container_ou_name="$OU1"
udm_exists "container/ou"; check_bool 0 110
ad_exists "$AD_OU1_DN"; check_bool 0 110
UDM_container_ou_name="$OU2"
udm_exists "container/ou"; check_bool 0 110
ad_exists "$AD_OU2_DN"; check_bool 0 110
UDM_container_ou_name="$OU3"
udm_exists "container/ou" "" "" "ou=$OU1,$ldap_base"; check_bool 0 110
ad_exists "$AD_OU3_DN"; check_bool 0 110
udm_exists "users/user" "" "" "ou=$OU1,$ldap_base"; check_bool 0 110

section "Move $OU1 into $OU2"

udm container/ou move --dn "ou=$OU1,$ldap_base" \
	--position "ou=$OU2,$ldap_base" || fail_test 110

ad_wait_for_synchronization; check_bool 0 110

UDM_container_ou_name="$OU1"
udm_exists "container/ou"; check_bool 1 110
ad_exists "$AD_OU1_DN"; check_bool 1 110
UDM_container_ou_name="$OU3"
udm_exists "container/ou" "" "" "ou=$OU1,$ldap_base"; check_bool 1 110
ad_exists "$AD_OU3_DN"; check_bool 1 110
udm_exists "users/user" "" "" "ou=$OU1,$ldap_base"; check_bool 1 110

UDM_container_ou_name="$OU2"
udm_exists "container/ou"; check_bool 0 110
ad_exists "$AD_OU2_DN"; check_bool 0 110
UDM_container_ou_name="$OU1"
AD_OU1_DN="OU=$OU1,OU=$OU2,$(ad_get_base)"
udm_exists "container/ou" "" "" "ou=$OU2,$ldap_base"; check_bool 0 110
ad_exists "$AD_OU1_DN"; check_bool 0 110
AD_OU3_DN="OU=$OU3,OU=$OU1,OU=$OU2,$(ad_get_base)"
UDM_container_ou_name="$OU3"
udm_exists "container/ou" "" "" "ou=$OU1,ou=$OU2,$ldap_base"; check_bool 0 110
ad_exists "$AD_OU3_DN"; check_bool 0 110
AD_USER_DN="CN=$USER,OU=$OU1,OU=$OU2,$(ad_get_base)"
udm_exists "users/user" "" "" "ou=$OU1,ou=$OU2,$ldap_base"; check_bool 0 110
ad_exists "$AD_USER_DN"; check_bool 0 110

section "Clean up"

udm_remove "users/user" "" "" "ou=$OU1,ou=$OU2,$ldap_base" || fail_test 110
UDM_container_ou_name="$OU3"
udm_remove "container/ou" "" "" "ou=$OU1,ou=$OU2,$ldap_base" || fail_test 110
UDM_container_ou_name="$OU1"
udm_remove "container/ou" "" "" "ou=$OU2,$ldap_base" || fail_test 110
UDM_container_ou_name="$OU2"
udm_remove "container/ou" || fail_test 110

ad_wait_for_synchronization; check_bool 0 110

UDM_container_ou_name="$OU2"
udm_exists "container/ou"; check_bool 1 110
ad_exists "$AD_OU2_DN"; check_bool 1 110
UDM_container_ou_name="$OU1"
udm_exists "container/ou" "" "" "ou=$OU2,$ldap_base"; check_bool 1 110
ad_exists "$AD_OU1_DN"; check_bool 1 110
UDM_container_ou_name="$OU3"
udm_exists "container/ou" "" "" "ou=$OU1,ou=$OU2,$ldap_base"; check_bool 1 110
ad_exists "$AD_OU3_DN"; check_bool 1 110
udm_exists "users/user" "" "" "ou=$OU1,ou=$OU2,$ldap_base"; check_bool 1 110
ad_exists "$AD_USER_DN"; check_bool 1 110

ad_set_sync_mode "$SYNCMODE"

exit "$RETVAL"
