#!/usr/share/ucs-test/runner python
## desc: Create groups/group
## tags: [basic,apptest]
## roles: [domaincontroller_master]
## exposure: safe
## packages:
##   - univention-config
##   - univention-directory-manager-tools
##   - univention-samba4
#
#  Bug #31324

import univention.testing.utils as utils
import univention.testing.udm as udm_test
import univention.testing.strings as uts
import subprocess
import re
import univention.config_registry
ucr = univention.config_registry.ConfigRegistry()
ucr.load()
from time import sleep


debug = False


def check_group(groupname):
	samba_tool_subprocess = subprocess.Popen(["samba-tool", 'group', 'list'],shell=False, stdout=subprocess.PIPE).communicate()
	subprocess_output = samba_tool_subprocess[0].splitlines()
	re_groupname = re.compile(r"%s"%groupname)
	group_found = False
	for line in subprocess_output:
		if re.match(re_groupname,line):
			group_found = True
	if group_found:
		print "Group synced to Samba"
	else:
		raise Exception("Groupname not found")



def modify_username(users,users2,debug=False):
	modified_users = []
	for i in range(len(users)) :
		newdn = 'uid=%s,%s' % (users2[i-1], users[i-1][0].split(",", 1)[1])
		modified_users.append((newdn,users2[i-1]))
		udm._cleanup['users/user'].append(newdn)
		udm.modify_object('users/user', dn = users[i-1][0], username = users2[i-1])
	return modified_users


def verify_users(group_dn,users):
	print (" Checking Ldap Objects")
	utils.verify_ldap_object(group_dn, {
	'uniqueMember': [user[0] for user in users],
	'memberUid': [user[1] for user in users]
	})



def wait_for_sync(multiplier=1):
	synctime = int(ucr.get("connector/s4/poll/sleep",7))
	synctime = (synctime +3)*multiplier
	print ("Waiting {0} seconds for sync...".format(synctime))
	sleep (synctime)


if __name__ == '__main__':
	with udm_test.UCSTestUDM() as udm:

			users2 = [uts.random_name(),uts.random_name()]

			group_dn, groupname1 = udm.create_group()

			users = [udm.create_user(), udm.create_user()]

			udm.modify_object('groups/group', dn = group_dn, append = {'users': [user[0] for user in users]})

			if debug:
				print ("Group DN : %s"%group_dn)
				print ("Groupname : %s"%groupname1)

			wait_for_sync(3)

			verify_users(group_dn,users)

			check_group(groupname1)

			modified_users=modify_username(users,users2,debug)

			wait_for_sync(3)

			check_group(groupname1)

			verify_users(group_dn,modified_users)
