#!/usr/share/ucs-test/runner python
## desc: "Rename users wich are in a group and test sync"
## roles: [domaincontroller_master]
## exposure: dangerous
## packages:
##   - univention-config
##   - univention-directory-manager-tools
##   - univention-samba4
#
#  Bug #31324

import univention.testing.utils as utils
import univention.testing.udm as udm_test
import univention.testing.strings as uts
import subprocess
import re
import univention.config_registry
ucr = univention.config_registry.ConfigRegistry()
ucr.load()
from time import sleep
import dnstests



def modify_username(users, users2):
	modified_users = []
	for i in range(len(users)) :
		newdn = 'uid=%s,%s' % (users2[i-1], users[i-1][0].split(",", 1)[1])
		modified_users.append((newdn,users2[i-1]))
		udm._cleanup['users/user'].append(newdn)
		udm.modify_object('users/user', dn = users[i-1][0], username = users2[i-1])
	return modified_users


def verify_users(group_dn,users):
	print (" Checking Ldap Objects")
	utils.verify_ldap_object(group_dn, {
	'uniqueMember': [user[0] for user in users],
	'memberUid': [user[1] for user in users]
	})


if __name__ == '__main__':
	with udm_test.UCSTestUDM() as udm:

			users2 = [uts.random_name(),uts.random_name()]

			group_dn, groupname1 = udm.create_group()

			users = [udm.create_user(), udm.create_user()]

			udm.modify_object('groups/group', dn = group_dn, append = {'users': [user[0] for user in users]})

			dnstests.wait_for_sync(3)

			verify_users(group_dn,users)

			dnstests.check_group(groupname1)

			modified_users=modify_username(users,users2)

			dnstests.wait_for_sync(3)

			dnstests.check_group(groupname1)

			verify_users(group_dn,modified_users)
