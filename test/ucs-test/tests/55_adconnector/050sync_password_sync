#!/usr/share/ucs-test/runner bash 
## desc: "Test password synchronisation"
## exposure: dangerous
## packages:
## - univention-ad-connector
## tags:
##  - skip_admember

. "$TESTLIBPATH/base.sh" || exit 137
. "$TESTLIBPATH/udm.sh" || exit 137
. "$TESTLIBPATH/random.sh" || exit 137

. "adconnector.sh" || exit 137
test -n "$connector_ad_ldap_host" || exit 137

. /usr/share/univention-lib/ucr.sh

if is_ucr_true 'connector/ad/mapping/user/password/disabled'; then
	echo "Password sync is disabled, skipping password sync check"
	exit 131
fi

SYNCMODE="$(ad_get_sync_mode)"
ad_set_sync_mode "sync"
invoke-rc.d univention-ad-connector restart

username="$(random_chars)"
lastname="$(random_chars)"
password1="U$(random_chars)123"
password2="V$(random_chars)234"
password3="W$(random_chars)987"
password4="X$(random_chars)345"
password5="Y$(random_chars)347"
password6="Z$(random_chars)555"

echo "## "
echo "## Create user with password $password1"
echo "## "
udm-test users/user create --position cn=users,$ldap_base --set username="$username" --set lastname="$lastname" --set password="$password1" || fail_test 110
ad_wait_for_synchronization; fail_bool 0 110


test_auth_ucs ()
{
	local u="$1"
	local p="$2"
	echo "## "
	echo "## Test UCS auth with password $p"
	echo "## "
	univention-ldapsearch -x -D "uid=$u,cn=users,$ldap_base" -w "$p" -LLL -s base dn
}

test_auth_ad ()
{
	local u="$1"
	local p="$2"
	echo "## "
	echo "## Test AD auth with password $p"
	echo "## "
	smbclient -U "$u%$p" //$(ucr get connector/ad/ldap/host)/sysvol -c ls
}

change_password_in_ucs ()
{
	local u="$1"
	local p="$2"
	echo "## "
	echo "## Change password via UDM to $p"
	echo "## "
	udm-test users/user modify --dn "uid=$u,cn=users,$ldap_base" --set password="$p"
	ad_wait_for_synchronization; fail_bool 0 110
}

reset_password_in_ad ()
{
	local u="$1"
	local p="$2"
	echo "## "
	echo "## Change password in Active Directory to $p"
	echo "## "
	ad_reset_password "cn=$username,cn=users,$connector_ad_ldap_base"  "$p"
	ad_wait_for_synchronization; fail_bool 0 110
}


test_auth_ucs "$username" "$password1" || fail_test 110
test_auth_ucs "$username" "$password2" && fail_test 110
test_auth_ucs "$username" "$password3" && fail_test 110

test_auth_ad "$username" "$password1" || fail_test 110
test_auth_ad "$username" "$password2" && fail_test 110
test_auth_ad "$username" "$password3" && fail_test 110

change_password_in_ucs "$username" "$password2"

test_auth_ucs "$username" "$password1" && fail_test 110
test_auth_ucs "$username" "$password2" || fail_test 110
test_auth_ucs "$username" "$password3" && fail_test 110

test_auth_ad "$username" "$password1" || fail_test 110
# in AD the old password also works
test_auth_ad "$username" "$password2" || fail_test 110
test_auth_ad "$username" "$password3" && fail_test 110

change_password_in_ucs "$username" "$password3"

test_auth_ucs "$username" "$password1" && fail_test 110
test_auth_ucs "$username" "$password2" && fail_test 110
test_auth_ucs "$username" "$password3" || fail_test 110

test_auth_ad "$username" "$password1" && fail_test 110
test_auth_ad "$username" "$password2" || fail_test 110
test_auth_ad "$username" "$password3" || fail_test 110

reset_password_in_ad "$username" "$password4"

test_auth_ad "$username" "$password2" && fail_test 110
# It doesn't seem to be deterministic if the OLD password is valid or not. We are using
# a password reset, so the password should be valid. But sometimes it is.
#test_auth_ad "$username" "$password3" && fail_test 110
test_auth_ad "$username" "$password4" || fail_test 110

test_auth_ucs "$username" "$password2" && fail_test 110
test_auth_ucs "$username" "$password3" && fail_test 110
test_auth_ucs "$username" "$password4" || fail_test 110

reset_password_in_ad "$username" "$password5"

test_auth_ucs "$username" "$password3" && fail_test 110
test_auth_ucs "$username" "$password4" && fail_test 110
test_auth_ucs "$username" "$password5" || fail_test 110

test_auth_ad "$username" "$password3" && fail_test 110
# It doesn't seem to be deterministic if the OLD password is valid or not. We are using
# a password reset, so the password should be valid. But sometimes it is.
#test_auth_ad "$username" "$password4" && fail_test 110
test_auth_ad "$username" "$password5" || fail_test 110

change_password_in_ucs "$username" "$password6"

test_auth_ucs "$username" "$password4" && fail_test 110
test_auth_ucs "$username" "$password5" && fail_test 110
test_auth_ucs "$username" "$password6" || fail_test 110

test_auth_ad "$username" "$password4" && fail_test 110
test_auth_ad "$username" "$password5" || fail_test 110
test_auth_ad "$username" "$password6" || fail_test 110

udm-test users/user remove --dn "uid=$username,cn=users,$ldap_base" || fail_test 110
ad_wait_for_synchronization; fail_bool 0 110

ad_set_sync_mode "$SYNCMODE"

exit "$RETVAL"

