#!/usr/share/ucs-test/runner bash
## desc: "Test whether file access permissions set in samba are working"
## exposure: safe
## packages:
## - univention-samba4
## roles:
## - domaincontroller_master
## - domaincontroller_backup
## - domaincontroller_slave

. "$TESTLIBPATH/user.sh" || exit 137
. "$TESTLIBPATH/shares.sh" || exit 137
. "$TESTLIBPATH/random.sh" || exit 137

#----create User
SAMBA="true"
MAIL="false"
KERBEROS="true"
PERSON="false"
POSIX="true"

username="$(user_randomname)"
first_password=univention
second_password="$(random_chars 8 ${_upperletters}${_lowerletters}${_ciphers}äöü)1AÄÖÜ"
third_password="$(random_chars 8 ${_upperletters}${_lowerletters}${_ciphers}äöü)1AÄÖÜ"
sharename=$(random_share)

trap 'user_remove "$username";share_remove $sharename' INT TERM EXIT
user_create "$username" || fail_test 1 "Could not create user $username."

#----create Share

share_create "$sharename" /"$sharename"  || fail_test 1 "Could not create share $sharename."

SHARE_DN=$(univention-directory-manager shares/share list --filter sambaName="$sharename" | sed -ne 's/^DN: //p')
udm shares/share modify --dn="$SHARE_DN" --set sambaPublic=1  || fail_test 1 "Could not modify share $sharename."

ADMINISTRATOR_DN="$(univention-directory-manager users/user list --filter uid="$ADMINISTRATOR_USER" | sed -ne 's/^DN: //p')"
USER_DN="$(univention-directory-manager users/user list --filter uid="$username" | sed -ne 's/^DN: //p')"
sleep 30

#--Tests
#----Testing general connection
smbclient -U "$username%$first_password" "//$hostname.$domainname/$sharename" -c "exit"  || fail_test 1 "Could not connect to the share."

#----making a folder without permission
return_val="$(smbclient -U "$username%$first_password" "//$hostname.$domainname/$sharename" -c "mkdir folder")"
echo $return_val | grep "NT_STATUS_ACCESS_DENIED" || fail_test 1 "Expected return value NT_STATUS_ACCESS_DENIED, but received: $return_val"

#----changing the folder's directorymode 
univention-directory-manager shares/share modify --binddn "$ADMINISTRATOR_DN" --bindpwd "$ADMINISTRATOR_PASSWORD" --dn "$SHARE_DN" --set "directorymode=0777"

#----making a folder
return_val="$(smbclient -U "$username%$first_password" "//$hostname.$domainname/$sharename" -c "mkdir folder2")"
echo $return_val | grep "NT_STATUS_NOT_A_DIRECTORY"
if [ $? != 0 ]  && [ -n "$return_val" ]; then
    fail_test 1 "Failed to make a folder even though it should work."
fi

#----making a folder as Administrator, so that the other user is not the owner which is important for the ACL tests
return_val="$(smbclient -U "$ADMINISTRATOR_USER%$ADMINISTRATOR_PASSWORD" "//$hostname.$domainname/$sharename" -c "mkdir folder3")"
echo $return_val | grep "NT_STATUS_NOT_A_DIRECTORY"
if [ $? != 0 ]  && [ -n "$return_val" ]; then
    fail_test 1 "Failed to make a folder as Administrator even though it should work."
fi

#----accessing a folder without permission
setfacl -m "user:$username:---" "/$sharename/folder3"
return_val="$(smbclient -U "$username%$first_password" "//$hostname.$domainname/$sharename" -c "ls folder3\*")"
echo $return_val | grep "NT_STATUS_ACCESS_DENIED" || fail_test 1 "Expected return value NT_STATUS_ACCESS_DENIED, but received: $return_val"

#----accessing a folder
setfacl -m "user:$username:r-x" "/$sharename/folder3"
smbclient -U "$username%$first_password" "//$hostname.$domainname/$sharename" -c "ls folder3\*"
if [ $? != 0 ]; then
    fail_test 1 "Failed to access the folder even though it should work.."
fi

#----making a folder without permission
return_val="$(smbclient -U "$username%$first_password" "//$hostname.$domainname/$sharename" -c "mkdir folder3\folder4")"
echo $return_val | grep "NT_STATUS_ACCESS_DENIED" || fail_test 1 "Expected return value NT_STATUS_ACCESS_DENIED, but received: $return_val"

#----making a folder
setfacl -m "user:$username:rwx" "/$sharename/folder3"
return_val="$(smbclient -U "$username%$first_password" "//$hostname.$domainname/$sharename" -c "mkdir folder3\folder5")"
if [ $? != 0 ]; then
    fail_test 1 "Failed to make a folder even though it should work."
fi


exit $RETVAL
