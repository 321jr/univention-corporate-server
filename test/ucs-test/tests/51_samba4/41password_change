#!/usr/share/ucs-test/runner bash
## desc: "Testing password changing with udm, samba and kerberos"
## exposure: safe
## packages:
##  - univention-samba4
## roles:
## - domaincontroller_master
## tags: [basic]
. "$TESTLIBPATH/user.sh" || exit 137
. "$TESTLIBPATH/shares.sh" || exit 137
. "$TESTLIBPATH/random.sh" || exit 137

#----create User
SAMBA="true"
MAIL="false"
KERBEROS="true"
PERSON="false"
POSIX="true"

username="$(user_randomname)"
first_password=univention
second_password="$(random_chars 8 ${_upperletters}${_lowerletters}${_ciphers}äöü)z1AÄÖÜ"
third_password="$(random_chars 8 ${_upperletters}${_lowerletters}${_ciphers}äöü)z1AÄÖÜ"
fourth_password="$(random_chars 8 ${_upperletters}${_lowerletters}${_ciphers}äöü)z1AÄÖÜ"

min_pwd_age="$(samba-tool domain passwordsettings show | grep "Minimum password age" | sed s/[^0-9]*/""/)"
samba-tool domain passwordsettings set --complexity=off --min-pwd-age=0
trap 'user_remove "$username"; samba-tool domain passwordsettings set --min-pwd-age=$min_pwd_age --complexity=on' INT TERM EXIT

user_create "$username" || fail_fast 1 "Could not create user $username."

echo "----initial connection"
#wait for the user to be created
i=0
while ! ldbsearch -U "$username%$first_password" -H ldap://localhost "samaccountname=$username" dn 2>&1 | grep -q '^dn:'
do
	let i=$i+1
	if [ "$i" = 10 ]; then
		fail_fast 1 "Could not authenticate against samba."
	fi
	sleep 1
done

i=0
while ! echo "$first_password" | kinit --password-file=STDIN "$username" > /dev/null
do
	let i=$i+1
	if [ "$i" = 10 ]; then
		fail_test 1 "Could not authenticate against kinit."
		break
	fi
	sleep 2
done

USER_DN=$(univention-directory-manager users/user list --filter uid="$username" | sed -ne 's/^DN: //p')


#--test starting point
#----password change with samba-tool
echo "----password change with samba-tool"
samba-tool user setpassword "$username" --newpassword="$second_password" 

## first check trivial case: Samba4 password must work
i=0
while ! ldbsearch -U "$username%$second_password" -H ldap://localhost "samaccountname=$username" dn 2>&1 | grep -q '^dn:'
do
	let i=$i+1
	if [ "$i" = 10 ]; then
		fail_test 1 "Could not authenticate against samba after password change with samba."
		break
	fi
	sleep 1
done

## second check complex case: UDM password must work after replication
i=0
while ! univention-ldapsearch -x -D "$USER_DN" -w "$second_password" > /dev/null
do
	let i=$i+1
	if [ "$i" = 15 ]; then
		fail_test 1 "Could not authenticate against UDM after password change with samba."
		break
	fi
	sleep 2
done

## cross check
i=0
while ! echo "$second_password" | kinit --password-file=STDIN "$username" > /dev/null
do
	let i=$i+1
	if [ "$i" = 10 ]; then
		fail_test 1 "Could not authenticate against kinit after password change with samba."
		break
	fi
	sleep 1
done

echo "----password change with udm"
#----password change with udm
/usr/sbin/univention-directory-manager users/user modify \
	--dn "$USER_DN" --set password="$third_password" || fail_fast 1 "Could not change password with UDM"

## first check trivial case: UDM password must work
i=0
while ! univention-ldapsearch -x -D "$USER_DN" -w "$third_password" > /dev/null
do
	let i=$i+1
	if [ "$i" = 10 ]; then
		fail_test 1 "Could not authenticate against UDM after password change with UDM."
		break
	fi
	sleep 1
done

## second check complex case: Samba4 password must work after replication
i=0
while ! ldbsearch -U "$username%$third_password" -H ldap://localhost "samaccountname=$username" dn 2>&1 | grep -q '^dn:'
do
	let i=$i+1
	if [ "$i" = 15 ]; then
		fail_test 1 "Could not authenticate against samba after password change with UDM."
		break
	fi
	sleep 2
done

## cross check
i=0
while ! echo "$third_password" | kinit --password-file=STDIN "$username" > /dev/null
do
	let i=$i+1
	if [ "$i" = 10 ]; then
		fail_test 1 "Could not authenticate against kinit after password change with UDM."
		break
	fi
	sleep 1
done

echo "----password change with kpasswd"
#----password change with kpassword
i=0
while true
do
	## in case passwort is not the default one
	if [ $(univention-config-registry get server/role) = "domaincontroller_master" -a -e /root/root.secret ];then
		echo "Found /root/root.secret, using that secret for Administrator access"
		ADMINISTRATOR_PASSWORD="$(cat /root/root.secret)"
	fi

	retval="$(python kpasswd_change_pwd.py -u "$username" -r "$ADMINISTRATOR_PASSWORD" -n "$fourth_password" -p "$third_password" -a "$ADMINISTRATOR_USER")"
	echo "$retval"
	echo "$retval" | grep "nSoft" || break
	let i=$i+1
	if [ "$i" = 20  ]; then
		echo "Password change with kpasswd: Soft error."
		break
	fi
	sleep 5
done

## first check trivial case: Samba4 password must work
i=0
while ! ldbsearch -U "$username%$fourth_password" -H ldap://localhost "samaccountname=$username" dn 2>&1 | grep -q '^dn:'
do
	let i=$i+1
	if [ "$i" = 10 ]; then
		fail_test 1 "Could not authenticate against samba after password change with kpasswd."
		break
	fi
	sleep 1
done

## second check complex case: UDM password must work after replication
i=0
while ! univention-ldapsearch -x -D "$USER_DN" -w "$fourth_password" > /dev/null
do
	let i=$i+1
	if [ "$i" = 15 ]; then
		fail_test 1 "Could not authenticate against UDM after password change with kpasswd."
		break
	fi
	sleep 2
done

## cross check
i=0
while ! echo "$fourth_password" | kinit --password-file=STDIN "$username" > /dev/null
do
	let i=$i+1
	if [ "$i" = 10 ]; then
		fail_test 1 "Could not authenticate against kinit after password change with kpasswd."
		break
	fi
	sleep 1
done

exit $RETVAL