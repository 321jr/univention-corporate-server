#!/usr/share/ucs-test/runner python
## desc: Create DNS reverse zone with many attributes
## tags: [udm-dns]
## roles: [domaincontroller_master]
## exposure: careful
## packages:
##   - univention-config
##   - univention-directory-manager-tools



import sys
import univention.testing as test
import univention.testing.udm as udm_test
import univention.testing.strings as uts
import univention.uldap as uldap


if __name__ == '__main__':
	reverseZoneProperties = {
		'subnet': '10.20.30',
		'nameserver': uts.random_string(),
		'contact': '%s@%s.%s' % (uts.random_name(), uts.random_name(), uts.random_name()),
		'serial': '1',
		'zonettl': '128',
		'refresh': '64',
		'expire': '32',
		'ttl': '16',
		'retry': '8'
	}

	expectedSOARecord = ['%s %s. %s %s %s %s %s' % (reverseZoneProperties['nameserver'],
											   reverseZoneProperties['contact'].replace('@', '.'),
											   reverseZoneProperties['serial'],
											   reverseZoneProperties['refresh'],
											   reverseZoneProperties['retry'],
											   reverseZoneProperties['expire'],
											   reverseZoneProperties['ttl'])]
	ldap = uldap.getAdminConnection()
	with udm_test.UCSTestUDM() as udm:
		reverseZone = udm.create_object('dns/reverse_zone', **reverseZoneProperties)
		zoneName = reverseZoneProperties['subnet'].split('.')
		zoneName.reverse()
		zoneName = '%s.in-addr.arpa' % '.'.join(zoneName)

		for dn, attr in ldap.search(filter = '(&(zoneName=%s)(objectClass=dNSZone)(relativeDomainName=@))' % zoneName
, attr = ['sOARecord']):
			if dn == reverseZone:
				if attr['sOARecord'] != expectedSOARecord:
					test.fail('Expected "sOAREcord" of created DNS reverse zone to be %r, but found %r instead' % (expectedSOARecord, attr['sOARecord']))
				sys.exit(0)
		
		test.fail('Could not find created DNS reverse zone "%s" in LDAP' % reverseZone)

