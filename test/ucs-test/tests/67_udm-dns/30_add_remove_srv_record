#!/usr/share/ucs-test/runner python
## desc: Create DNS service record, check if attributes are set correctly and remove it again
## tags: [udm-dns,apptest]
## roles: [domaincontroller_master]
## exposure: careful
## packages:
##   - univention-config
##   - univention-directory-manager-tools



import univention.testing.udm as udm_test
import univention.testing.strings as uts
import univention.testing.utils as utils



if __name__ == '__main__':
	srvRecordProperties = {
		'name': '%s tcp %s' % (uts.random_string(), uts.random_string()),
		'location': '0 1 2 %s.%s' % (uts.random_name(), uts.random_name()),
		'zonettl' : '128'
	}
	srvRecordNameSplit = srvRecordProperties['name'].split()

	with udm_test.UCSTestUDM() as udm:
		forwardZone = udm.create_object('dns/forward_zone', zone = '%s.%s' % (uts.random_name(), uts.random_name()), nameserver = uts.random_string())
		srvRecord = udm.create_object('dns/srv_record', superordinate = forwardZone, **srvRecordProperties)
		
		if not utils.verify_ldap_object(srvRecord, {
			'sRVRecord': [srvRecordProperties['location']],
			'dNSTTL': [srvRecordProperties['zonettl']],
			'relativeDomainName': ['_%s._%s.%s' % (srvRecordNameSplit[0], srvRecordNameSplit[1], srvRecordNameSplit[2])]
		}):
			utils.fail()
		
		
		udm.remove_object('dns/srv_record', dn = srvRecord, superordinate = forwardZone)
		if utils.verify_ldap_object(srvRecord):
			utils.fail('Could still find DNS service record "%s" in LDAP after it should have been removed' % (srvRecord))


