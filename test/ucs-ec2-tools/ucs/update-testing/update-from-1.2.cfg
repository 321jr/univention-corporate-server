[EC2Tags]
usecase: dev-jenkins-ucs4.2

[Global]
# These settings can be overwritten by the instance
logfile: update-from-1.2.log

# AMI: UCS 3.2-7 installed with UCS 1.2 
ec2_ami: ami-ded36cad

# EC2 region
ec2_region: eu-west-1

# In VPC the security group id is required
# #ec2_security_group: UCS systems
ec2_security_group: sg-4170962e

# the ec2 ssh keypair
ec2_keypair: tech
ec2_keypair_file: ~/ec2/keys/tech.pem

# Default intance type
#	t1.micro m1.small m1.large m1.xlarge c1.medium
#	c1.xlarge 	m2.xlarge m2.2xlarge m2.4xlarge cc1.4xlarge
ec2_instance_type: m3.medium

# Use the tech VPC
ec2_subnet_id: subnet-f452539c

# To get EC2 access you need to create a .boto file
# http://code.google.com/p/boto/wiki/BotoConfig
# [Credentials]
#  aws_access_key_id = <your access key>
#  aws_secret_access_key = <your secret key>
recover: 5

[system]
command1:
 . utils.sh && basic_setup
 . utils.sh && rotate_logfiles
 ucr set update/secure_apt=yes
 # renew the certs
 cp -a /etc/univention/ssl /etc/univention/ssl_$(date +"%d%m%Y") 
 cd /etc/univention/ssl/ucsCA && openssl x509 -in CAcert.pem -out NewCAcert.pem -days 1000 -passin file:/etc/univention/ssl/password -signkey private/CAkey.pem && mv NewCAcert.pem CAcert.pem
 cd /etc/univention/ssl && eval "$(ucr shell)" && for i in *".$domainname"; do univention-certificate renew -name "$i" -days 730; done
 cp /etc/univention/ssl/ucsCA/CAcert.pem /var/www/ucs-root-ca.crt 
 invoke-rc.d slapd restart
 # this system was already joined, so fix some networking stuff
 univention-directory-listener-ctrl resync bind
 service bind9 restart
 eval "$(ucr shell)" && udm networks/network create --position "cn=networks,$ldap_base" --set name=new --set netmask="$interfaces_eth0_netmask" --set network="$interfaces_eth0_network" --set "dnsEntryZoneForward=zoneName=old.test,cn=dns,$ldap_base"
 udm dns/reverse_zone create --position cn=dns,dc=old,dc=test --set subnet=10.210 --set nameserver=master.old.test.
 eval "$(ucr shell)" && ucr set hosts/static/$interfaces_eth0_address="ucs-sso.old.test ucs-sso"
 ucr set nameserver1="$(ucr get interfaces/eth0/address)"
command2:
 #################
 # update to 3.2 #
 #################
 . utils.sh && upgrade_to_latest --updateto 3.2-99
 # remove deprecated software
 # fix postgres certs, TODO is this a bug?
 chgrp -R ssl-cert /etc/ssl/private/
 eval "$(ucr shell)" && $update_commands_install univention-pkgdb
 ##################
 # update to 3.3  #
 ##################
 . utils.sh && upgrade_to_latest --updateto 3.3-99
 # postgres update for update to 4.0-0
 [ -f /usr/sbin/univention-pkgdb-scan ] && chmod -x /usr/sbin/univention-pkgdb-scan
 service postgresql stop
 rm -rf /etc/postgresql/9.1
 apt-get -y --force-yes install --reinstall postgresql-9.1
 pg_dropcluster 9.1 main --stop
 service postgresql start
 mv /var/lib/postgresql/9.1/main /var/lib/postgresql/9.1/main.old || true
 pg_upgradecluster 8.4 main
 ucr commit /etc/postgresql/9.1/main/*
 chown -R postgres:postgres /var/lib/postgresql/9.1
 service postgresql restart
 [ -f /usr/sbin/univention-pkgdb-scan ] && chmod +x /usr/sbin/univention-pkgdb-scan
 test "$(ucr get version/version)" = 3.3 && univention-install --yes univention-postgresql-9.1
 pg_dropcluster 8.4 main --stop || true
 dpkg -P postgresql-8.4 || true
 # remove obsolte software before updating to 4.0-0
 eval "$(ucr shell)" && $update_commands_remove fileutils ipchains kernel-image-2.4.26 lesstif1 libcomerr1-kerberos4kth libcurl2 libdb1-compat libdb2 libdb4.0 libdb4.1 libdb4.2++ libdns8 libgcrypt1 libgd1-xpm libgimp1.2 libgnutls11 libgnutls5 libgnutls7 libgtkxmhtml1 libidn9 libisc4 libisccfg0 libkdb-1-kerberos4kth libkeynote0 libkrb-1-kerberos4kth libmm13 libmpeg1 libmysqlclient10 libopencdk4 libpng10-0 libreadline4 libsensors1 libsoup2.0-0 libtasn1-0 libtiff3g libxaw6 libxft1 lynx-ssl symlinks t1lib1 libkrb53 apache-common univention-windows-installer-image-linux univention-windows-installer univention-windows-installer-image bootsplash-theme-debian bootsplash courier-base courier-ssl courier-mta courier-ldap courier-imap-ssl courier-imap courier-authdaemon gimp1.2 libg2c0 gcc-3.2-base gcc-3.3-base gcc-3.4-base gcc-4.1-base cpp-3.2 cpp-3.3 cpp-4.1 univention-server-installer python2.1 libsasl7 sasl-bin libsasl-modules-plain libunivention-chkpwhistory0 ia32-sun-java6-bin sun-java6-jre sun-java6-bin sun-java6-jre sun-java6-plugin sun-j2re1.5 sun-java5-bin sun-java5-jre sun-java5-plugin
 #################
 # update to 4.0 #
 #################
 . utils.sh && upgrade_to_latest --updateto 4.0-99
 #################
 # update to 4.1 #
 #################
 . utils.sh && upgrade_to_latest --updateto 4.1-99
 ####################
 # update to latest #
 ####################
 . utils.sh && upgrade_to_latest
 #####################################################
 # until now, we installed already released package, #
 # now check test releases/errata                    #
 #####################################################
 logrotate -f /etc/logrotate.conf
 . utils.sh && jenkins_updates
command3:
 # some basic checks
 . utils.sh && install_ucs_test
 . utils.sh && do_reboot
 LOCAL sleep 120
 . utils.sh && wait_for_reboot
 . utils.sh && assert_packages univention-server-master
 . utils.sh && assert_packages univention-printserver
 . utils.sh && assert_packages univention-management-console
 . utils.sh && assert_packages univention-pkgdb
 . utils.sh && assert_packages slapd
 . utils.sh && assert_packages univention-samba
 # the computer object has no proper krb5 keys, repair this
 udm computers/domaincontroller_master modify --dn "$(ucr get ldap/hostdn)" --set password="$(< /etc/machine.secret)"
 univention-check-join-status
 univention-ldapsearch cn=a
 univention-app update
 test "$(ucr get version/version)" = "4.2"
 . utils.sh && run_tests -s checks
command4:
 LOCAL touch OK
command5:
 LOCAL examples/jenkins/utils/utils-local.sh fetch-results [system_IP]
files:
 ~/ec2/scripts/activate-errata-test-scope.sh /root/
 examples/jenkins/utils/utils.sh /root/
 ~/ec2/license/license.secret /etc/
