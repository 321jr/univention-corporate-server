[Global]
kvm_server: KVM_BUILD_SERVER
kvm_user: build
kvm_architecture: amd64
kvm_ucsversion: 4.2-0
kvm_template: generic-unsafe
kvm_interface: eth0

[installer-controller]
logfile: ucs-installer-test-controller.log
profile:
    hostname="installer-controller"
    domainname="installertest.local"
    ldap/base="dc=installertest,dc=local"
    root_password="univention"
    server/role="domaincontroller_master"
    interfaces/eth0/address="10.200.36.200"
    interfaces/eth0/netmask="255.255.255.0"
    gateway="10.200.36.1"
    nameserver1="192.168.0.3"
command1:
    ip -4 addr flush dev eth0
    ip addr replace "10.200.36.200/24" dev eth0
    ip route replace default via 10.200.36.1
    . utils.sh; basic_setup
command2:
    # Create VM that is to be controlled.
    # TODO: Check if ucs-kt-get waits until the VM is completely booted.
    ucs-kt-get \
        --yes \
        --version "4.1-4" \
        --architecture "amd64" \
        -l "installer-target" \
        --onlyone \
        --keep-cdrom \
        --resultfile="target_resultfile" \
        installer-test
    # Extract vnc-connection info.
    python resultfile_to_vnc_connection target_resultfile > vnc_connection
command3:
    # Run the control script, passing the connection to it.
    # TODO: save result (success or fail)
    python 00_master-de.py "$(cat vnc_connection)"
command4:
    # Terminate controlled VM
    # If the control script ran through:
    #     - Exit with 1.
    # Else:
    #     - Exit with 0.
files:
    examples/jenkins/utils/utils.sh /root/
    installer_test/resultfile_to_vnc_connection /root/
    installer_test/vminstall/*py /root/vminstall
    installer_test/00_master-de.py /root/
