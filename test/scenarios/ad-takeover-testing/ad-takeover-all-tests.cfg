[EC2Tags]
usecase: dev-jenkins-ucs4.3

[Global]
# These settings can be overwritten by the instance
logfile: autotest-adtakeover-test-all.log

# AMI: Univention Corporate Server (UCS) 4.3 (official image) - ami-0aa0e973
ec2_ami: ami-0aa0e973

# EC2 region
ec2_region: eu-west-1

# In VPC the security group id is required
# #ec2_security_group: UCS systems
ec2_security_group: sg-4170962e

# the ec2 ssh keypair
ec2_keypair: tech
ec2_keypair_file: ~/ec2/keys/tech.pem

# Default intance type 
ec2_instance_type: m3.medium

# Use the tech VPC
ec2_subnet_id: subnet-f452539c

recover: 2

[master231]
profile:
 hostname="ucs-adto"
 domainname="adtakeover.local"
 windows/domain="ADTAKEOVER"
 ldap/base="dc=adtakeover,dc=local"
 root_password="univention"
 locale/default="de_DE.UTF-8:UTF-8"
 packages_install="univention-management-console-module-adtakeover"
 packages_remove=""
 server/role="domaincontroller_master"
command1:
 echo -e '[default]\ndomain = adtakeover.local\npassword = [ENV:win2k12-de_PASSWORD]\nuser = Administrator\nclient = [ENV:win2k12-de_IP]' > /root/.ucs-winrm.ini
 . utils.sh; basic_setup
 . utils.sh; rotate_logfiles
 . utils.sh; jenkins_updates
 . utils.sh; run_setup_join
 . utils.sh; do_reboot
 . utils.sh; wait_for_reboot
 . utils.sh; import_license
 . utils.sh; assert_join
 . utils.sh; install_winrm

 python shared-utils/ucs-winrm.py run-ps --cmd ipconfig
 python shared-utils/ucs-winrm.py run-ps --cmd "(gwmi win32_operatingsystem).caption"
 python shared-utils/ucs-winrm.py promote-ad --forestmode WIN2008R2 --domainmode WIN2008R2
 LOCAL sleep 300

#  done:  Der AD Takeover sollte mit Windows Server 2003 R2 und Windows Server 2008R2 getestet werden
#    Folgende Testumgebung wird jeweils benötigt:
#  done:      UCS-Domäne bestehend aus DC Master, und einem weiteren DC
#  done:      AD-Domäne im gleichen IPv4-Netz mit identischem Domännennamen, bestehend aus mindestens einem AD-DC und einem gejointen Windows 7 Client
#  done:  Hostnamen und IP-Adressen sollten domänenübergreifend einzigartig gewählt sein. done
#  done:  Beide Domänen sollten sich DNS-technisch zunächst nicht "sehen", d.h. im AD z.B. sollte nicht das UCS-DNS eingetragen sein.
#  done:  Im AD sollten 1500 Benutzern und 40 Gruppen angelegt werden. Die Benutzer sollten auf die Gruppen verteilt werden.
#  done:  Ein Benutzer sollte zusätzlich in die Gruppe "Domain Admins" / "Domänen Administratoren" aufgenommen werden.
#  done:  Im AD sollten jeweils eine GPO, mit Benutzer bzw. Windows-Client verknüpft werden, z.B.: done
#  done:      Benutzerkonfiguration -> Administrative Vorlagen -> Startmenü und Taskleiste -> Lautstärkesymbol entfernen -> aktivieren/Ok
#        Computerkonfiguration -> Administrative Vorlagen -> System/Anmelden -> Diese Programme bei der Benutzeranmeldung ausführen -> Auszuführende Elemente -> notepad -> aktivieren/Ok
#    Zusätzlich sollte etwas erkennbar an der AD Default-Domänen-Policy geändert werden, z.B. done
#  done:      Benutzerkonfiguration -> Administrative Vorlagen -> "Liste "Alle Programme" aus dem Menü Start entfernen"
#    Nach der erfolgreichen Durchführung des AD Takeover, wie in der Wiki-Dokumentation beschrieben, sollten folgende Punkte geprüft werden:
#  done via WinRM:      Login am übernommenen Windows-Client mit einem übernommenen Benutzer
#  done(server side)          GPOs müssen korrekt angewendet werden.
#            Passwortänderung muss funktionieren. 
#  done:      Login am übernommenen Windows-Client als "Domänen\Administrator"
#            Gruppenrichtlinienverwaltung (GPMC) starten, neue GPO anlegen.
#            AD Benutzer&Computer: Neuen Benutzer anlegen.
#            Name des Windows-Clients ändern, dann reboot, Client-Anmeldung als neuer Benutzer: GPO Auswertung OK?
#        Login an UMC als Administrator
#  done:      Login an UMC als weiteres Mitglied der AD-Gruppe "Domain Admins" / "Domänen Administratoren".
#  done:    Anlegen eines neuen Benutzers per UMC, Anmeldung mit dem neuen Benutzer am Windows Client
#  done:      Joinen eines weiteren Windows Clients in die (UCS-)Domäne, Anmeldung als übernommener Benutzer

 . ad-takeover.sh; prepare_AD_for_takeover 
 udm users/user modify --dn uid=Administrator,cn=users,dc=adtakeover,dc=local --set password='[ENV:win2k12-de_PASSWORD]' --set overridePWHistory=1 --set overridePWLength=1
 echo -e '[default]\ndomain = adtakeover.local\npassword = [ENV:winclient-de_PASSWORD]\nuser = Administrator\nclient = [ENV:winclient-de_IP]' > /root/.ucs-winrm.ini
 python ad-takeover.py -H "$(hostname -f)" -u Administrator -p '[ENV:win2k12-de_PASSWORD]' -D [ENV:win2k12-de_IP] -A Administrator -P '[ENV:win2k12-de_PASSWORD]' 
 . ad-takeover.sh; check_GPO TestGPO
 
 udm users/user modify --dn uid=benutzer1,cn=users,dc=adtakeover,dc=local --set password='univention' --set overridePWHistory=1 --set overridePWLength=1
 udm users/user create --position "cn=users,dc=adtakeover,dc=local" --set username="newuser01" --set firstname="Random" --set lastname="User" --set password="Univention.99"
 python shared-utils/ucs-winrm.py reboot
 python shared-utils/ucs-winrm.py wait_for_client
 LOCAL sleep 150
 
 python shared-utils/ucs-winrm.py domain-join --domain adtakeover.local --dnsserver [master231_IP] --domainuser benutzer2 --domainpassword 'Univention@99'

 . ad-takeover.sh; check_user_in_ucs user10
 . ad-takeover.sh; check_user_in_ucs user1
 . ad-takeover.sh; check_user_in_ucs benutzer1
 . ad-takeover.sh; check_user_in_ucs benutzer1500

 . ad-takeover.sh; check_user_in_winclient newuser01 'Univention.99'

 . ad-takeover.sh; check_GPO_for_user TestGPO user1
 . ad-takeover.sh; check_GPO_for_user TestGPO1 user10
 . ad-takeover.sh; check_GPO_for_user TestGPO user1
 . ad-takeover.sh; check_GPO_for_user TestGPO1 user10
#TODO A better check on client for applied GPOs
 . utils.sh; assert_join
 . utils.sh; set_administrator_dn_for_ucs_test
 . utils.sh; set_administrator_password_for_ucs_test "[ENV:win2k12-de_PASSWORD]"
 . utils.sh; install_ucs_test_checks_from_errata_test ucs-test-samba4
 . utils.sh; run_minimal_tests -s samba4
command2:
  LOCAL utils/utils-local.sh fetch-results [master231_IP]
files:
 utils/utils.sh /root/
 ~/ec2/license/license.secret /etc/
 ~/ec2/scripts/activate-errata-test-scope.sh /root/

[win2k12-de]
# AMI: Windows Server 2012 Deutsch ami-296bbc5e
# ec2_ami: ami-296bbc5e
ec2_ami_name: Windows_Server-2012-RTM-German-*
windows: true
ec2_instance_type: m1.medium
[winclient-de]
# AMI: Windows Server 2012 Deutsch ami-296bbc5e
# ec2_ami: ami-296bbc5e
ec2_ami_name: Windows_Server-2012-RTM-German-*
windows: true
ec2_instance_type: m1.medium
