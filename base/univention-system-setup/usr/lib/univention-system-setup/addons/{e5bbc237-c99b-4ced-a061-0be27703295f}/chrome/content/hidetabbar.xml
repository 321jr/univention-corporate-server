<?xml version="1.0" encoding="UTF-8"?>
<bindings id="hidetabbar-tabBrowserBindings"
	xmlns="http://www.mozilla.org/xbl"
	xmlns:html="http://www.w3.org/1999/xhtml"
	xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
	xmlns:xbl="http://www.mozilla.org/xbl">
	<binding id="hidetabbar-tabbrowser-tabs" extends="chrome://browser/content/tabbrowser.xml#tabbrowser-tabs">
		<implementation implements="nsIDOMEventListener">
			<method name="updateVisibility">
				<body><![CDATA[
					this.visible = this.tabbrowser.visibleTabs.length > 1;
				]]></body>
			</method>
			<method name="adjustTabstrip">
				<body><![CDATA[
					let numTabs = this.childNodes.length - 
					              this.tabbrowser._removingTabs.length;
					// modes for tabstrip
					// 0 - button on active tab only
					// 1 - close buttons on all tabs
					// 2 - no close buttons at all
					// 3 - close button at the end of the tabstrip
					switch (this.mCloseButtons) {
					case 0:
						if (numTabs == 1 && this._closeWindowWithLastTab)
							this.setAttribute("closebuttons", "hidden");
						else
							this.setAttribute("closebuttons", "activetab");
						break;
					case 1:
						if (numTabs == 1) {
							if (this._closeWindowWithLastTab)
								this.setAttribute("closebuttons", "hidden");
							else
								this.setAttribute("closebuttons", "alltabs");
						} else if (numTabs == 2) {
							// This is an optimization to avoid layout flushes by calling
							// getBoundingClientRect() when we just opened a second tab. In
							// this case it's highly unlikely that the tab width is smaller
							// than mTabClipWidth and the tab close button obscures too much
							// of the tab's label. In the edge case of the window being too
							// narrow (or if tabClipWidth has been set to a way higher value),
							// we'll correct the 'closebuttons' attribute after the tabopen
							// animation has finished.
							this.setAttribute("closebuttons", "alltabs");
						} else {
							let tab = this.tabbrowser.visibleTabs[this.tabbrowser._numPinnedTabs];
							if (tab && tab.getBoundingClientRect().width > this.mTabClipWidth)
								this.setAttribute("closebuttons", "alltabs");
							else
								this.setAttribute("closebuttons", "activetab");
						}
						break;
					case 2:
					case 3:
						this.setAttribute("closebuttons", "never");
						break;
					}
					var tabstripClosebutton = document.getElementById("tabs-closebutton");
					if (tabstripClosebutton && tabstripClosebutton.parentNode == this._container)
						tabstripClosebutton.collapsed = this.mCloseButtons != 3;

			 		this.visible = this.tabbrowser.visibleTabs.length > 1;
				]]></body>
			</method>
		</implementation>
	</binding>
</bindings>