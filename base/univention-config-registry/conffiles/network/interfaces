# Warning: This file is auto-generated and might be overwritten by
#          univention-config-registry.
#          Please edit the following file instead:
# Warnung: Diese Datei wurde automatisch generiert und kann durch
#          univention-config-registry Ã¼berschrieben werden.
#          Bitte bearbeiten Sie an Stelle dessen die folgende Datei:
#
# 	/etc/univention/templates/files/etc/network/interfaces
#


auto lo
iface lo inet loopback

@!@

eth_devices=[]

for key,value in configRegistry.items():
	if key.startswith('interfaces/eth'):
		k = key.split("/")[1:2][0]
		if k not in eth_devices:
			eth_devices.append(k)

eth_devices.sort()

def check_gateway (ip, netmask, gateway):
	if not gateway:
		return 0
	samenet=1
	for k in range(0,4):
		if not (int(ip[k])&int(netmask[k])) == (int(gateway[k])&int(netmask[k])):
			samenet=0
	if samenet == 0:
		return 0
	if samenet == 1:
		return 1


gateway=False
configExists=False
ifhandler=configRegistry.get('interfaces/handler','ifplugd')


for i in eth_devices:
	configExists=False
	iface = i.replace("_", ":")
	if configRegistry.has_key('interfaces/%s/type' % i) and configRegistry['interfaces/%s/type' % i] == 'dhcp':
		if ifhandler == 'ifplugd' and configRegistry.get('interfaces/%s/ifplugd' % i, 'yes' ).lower() in ( 'yes', 'true', '1' ):
			print 'auto %s' % iface
			print 'iface %s inet dhcp' % iface
			configExists=True
		elif ifhandler == 'networkmanager' and configRegistry.get('interfaces/%s/networkmanager' % i, 'yes' ).lower() in ( 'no', 'false', '0' ):
			print 'auto %s' % iface
			print 'iface %s inet dhcp' % iface
			configExists=True
	elif  configRegistry['interfaces/%s/address' % i]:
		print 'auto %s' % iface
		print 'iface %s inet static' % iface
		
		print 'address '+configRegistry['interfaces/%s/address' % i]
		if configRegistry['interfaces/%s/network' % i]:
			print 'network '+configRegistry['interfaces/%s/network' % i]
		if configRegistry['interfaces/%s/netmask' % i]:
			print 'netmask '+configRegistry['interfaces/%s/netmask' % i]
		if configRegistry['interfaces/%s/broadcast' % i]:
			print 'broadcast '+configRegistry['interfaces/%s/broadcast' % i]
		if configRegistry['interfaces/%s/address' % i] and configRegistry['interfaces/%s/netmask' % i] and configRegistry['gateway'] and not gateway:
			if check_gateway(configRegistry['interfaces/%s/address' % i].split('.'), configRegistry['interfaces/%s/netmask' % i].split('.'), configRegistry['gateway'].split('.')):
				print 'gateway '+configRegistry['gateway']
				gateway=True
		configExists=True

	if configExists:
		for key,value in configRegistry.items():
			if key.startswith('interfaces/%s/route/' % i):
				if value.startswith('host ') or value.startswith('net '):
					print 'up route add -%s dev %s' % (value, i)

		for key,value in configRegistry.items():
			if key.startswith('interfaces/%s/options/' % i):
				print value

@!@
