@%@UCRWARNING=# @%@


auto lo
iface lo inet loopback

@!@
from univention.dns import splitDotted, networkNumber

eth_devices=[]

for key,value in configRegistry.items():
	if key.startswith('interfaces/eth'):
		k = key.split("/")[1:2][0]
		if k not in eth_devices:
			eth_devices.append(k)

eth_devices.sort()

def check_gateway (ip, netmask, gateway):
	"""
	Check if the 'ip' is in the same network as the 'gatewy'.

	>>> check_gateway([1,2,3,4], [255.255.255.0], [1,2,3,1])
	True
	"""
	if not gateway:
		return False
	return networkNumber(ip, netmask) == networkNumber(gateway, netmask)

gateway=False
configExists=False
ifhandler=configRegistry.get('interfaces/handler','ifplugd')


for i in eth_devices:
	configExists=False
	iface = i.replace("_", ":")
	if configRegistry.get('interfaces/%s/type' % i) == 'dhcp':
		if ifhandler == 'ifplugd' and configRegistry.is_true('interfaces/%s/ifplugd' % i, True):
			print 'auto %s' % iface
			print 'iface %s inet dhcp' % iface
			configExists=True
		elif ifhandler == 'networkmanager' and configRegistry.is_false('interfaces/%s/networkmanager' % i, True):
			print 'auto %s' % iface
			print 'iface %s inet dhcp' % iface
			configExists=True
	elif  configRegistry['interfaces/%s/address' % i]:
		print 'auto %s' % iface
		print 'iface %s inet static' % iface
		
		print 'address '+configRegistry['interfaces/%s/address' % i]
		if configRegistry['interfaces/%s/network' % i]:
			print 'network '+configRegistry['interfaces/%s/network' % i]
		if configRegistry['interfaces/%s/netmask' % i]:
			print 'netmask '+configRegistry['interfaces/%s/netmask' % i]
		if configRegistry['interfaces/%s/broadcast' % i]:
			print 'broadcast '+configRegistry['interfaces/%s/broadcast' % i]
		if configRegistry['interfaces/%s/address' % i] and configRegistry['interfaces/%s/netmask' % i] and configRegistry['gateway'] and not gateway:
			if check_gateway(splitDotted(address), splitDotted(netmask), splitDotted(gateway)):
				print 'gateway '+configRegistry['gateway']
				gateway=True
		configExists=True

	if configExists:
		for key,value in configRegistry.items():
			if key.startswith('interfaces/%s/route/' % i):
				if value.startswith('host ') or value.startswith('net '):
					print 'up route add -%s dev %s' % (value, i)

		for key,value in configRegistry.items():
			if key.startswith('interfaces/%s/options/' % i):
				print value
		if i == "eth0":
			if configRegistry.get('interfaces/eth0/netmask', "") == "255.255.255.255" and configRegistry.get('gateway', False):
				print "up ip route add %s/32 dev eth0" % configRegistry["gateway"]
				print "up route add default gw %s" % configRegistry["gateway"]

@!@
