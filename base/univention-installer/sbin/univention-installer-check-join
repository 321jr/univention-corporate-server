#!/bin/bash
#
# Univention Installer
#  check join credentials
#
# Copyright 2004-2012 Univention GmbH
#
# http://www.univention.de/
#
# All rights reserved.
#
# The source code of this program is made available
# under the terms of the GNU Affero General Public License version 3
# (GNU AGPL V3) as published by the Free Software Foundation.
#
# Binary versions of this program provided by Univention to you as
# well as other copyrighted, protected or trademarked materials like
# Logos, graphics, fonts, specific documentations and configurations,
# cryptographic keys etc. are subject to a license agreement between
# you and Univention and not subject to the GNU AGPL V3.
#
# In the case you use this program under the terms of the GNU AGPL V3,
# the program is provided in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public
# License with the Debian GNU/Linux or Univention distribution in file
# /usr/share/common-licenses/AGPL-3; if not, see
# <http://www.gnu.org/licenses/>.

server="$1"
user="$2"
password="$3"
domain="$4"
nameserver="$5"

errorAndExit () {

	local msg="$1"
	echo "$msg" >&2
	exit 1
}

if [ -z "$user" -o -z "$password" -o -z "$domain" -o -z "$nameserver" ]; then
	errorAndExit "user, password, nameserver or domain empty"
fi

if [ -z "$server" ]; then
	srv="_domaincontroller_master._tcp.$domain"
	server="$(host -t SRV "$srv" "$nameserver" | grep "$srv has SRV record" | awk '{print $NF}'| sed 's/\.$//')"
	if [ -z "$server" ]; then
		errorAndExit "could not get ucs master via dns"
	fi
fi

serverIp="$(host "$server" "$nameserver" | grep "$server has address" | awk '{print $NF}')"
if [ -z "$serverIp" ]; then
	errorAndExit "could not get ip of ucs master"
fi

sshOptions="-o StrictHostKeyChecking=no -o ConnectTimeout=15 -o NumberOfPasswordPrompts=1"
out="$(sshpass -p "$password" ssh $sshOptions "$user"@"$serverIp" "id '$user'")"
if [ ! $? -eq 0 ]; then
	errorAndExit "ssh to $serverIp as $user failed"
fi

# check output
# TODO

exit 0
