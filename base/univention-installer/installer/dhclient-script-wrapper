#!/bin/sh
#
# Univention Installer
#  helper script: getting settings from dhclient
#
# Copyright (C) 2009 Univention GmbH
#
# http://www.univention.de/
#
# All rights reserved.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 2 as
# published by the Free Software Foundation.
#
# Binary versions of this file provided by Univention to you as
# well as other copyrighted, protected or trademarked materials like
# Logos, graphics, fonts, specific documentations and configurations,
# cryptographic keys etc. are subject to a license agreement between
# you and Univention.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

case "$reason" in
	PREINIT)
		# The DHCP client is requesting that an interface be
		# configured as required in order to send packets prior to
		# receiving an actual address. - dhclient-script(8)
		
		#if [ -n "$alias_ip_address" ]; then
		#	# Bring down alias interface. Its routes will disappear too.
		#	ifconfig $interface:0- inet 0
		#fi

		# silence the kernel printk
		PRINTK=`cat /proc/sys/kernel/printk`
		echo "0" >/proc/sys/kernel/printk

		# basic interface setup if it is not already up
		ifconfig $interface | grep -w UP || ifconfig $interface inet 0 up
		
		# We need to give the kernel some time to get the interface up.
		sleep 1
		# echo "$PRINTK" >/proc/sys/kernel/printk
		;;
    BOUND|RENEW|REBIND|REBOOT)
		set -- $new_routers
		first_router="$1"

		i=1
		for new_nameserver in $new_domain_name_servers; do
			eval nameserver_$i=$new_nameserver
			i=$((i+1))
		done
		if [ -n "$dhclientscript_outputfile" ]; then
			cat > $dhclientscript_outputfile <<%EOF%
address: $new_ip_address
netmask: $new_subnet_mask
broadcast: $new_broadcast_address
gateway: $first_router
nameserver_1: $nameserver_1
nameserver_2: $nameserver_2
nameserver_3: $nameserver_3
domainname: $new_domain_name
%EOF%
		fi

        ;;
esac

exit 0
