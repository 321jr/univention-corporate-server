#!/usr/bin/python2.4
#
# Univention Updater
#  repository delpackage
#
# Copyright (C) 2004-2010 Univention GmbH
#
# http://www.univention.de/
#
# All rights reserved.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 2 as
# published by the Free Software Foundation.
#
# Binary versions of this file provided by Univention to you as
# well as other copyrighted, protected or trademarked materials like
# Logos, graphics, fonts, specific documentations and configurations,
# cryptographic keys etc. are subject to a license agreement between
# you and Univention.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

import os, string
import shutil, sys
import getopt, time

import univention_baseconfig
import univention.updater.repository as urepo

def usage(fd=sys.stdout):
	print >>fd, 'univention-repository-delpackage: tool for removing packages from local repository'
	print >>fd, 'copyright (c) 2004-@%@copyright_lastyear@%@ Univention GmbH, Germany'
	print >>fd, ''
	print >>fd, 'Syntax:'
	print >>fd, '  univention-repository-delpackage --file <debian_package> <debian_package>'
	print >>fd, '  univention-repository-delpackage [--help] '
	print >>fd, ''
	print >>fd, 'Known-Bugs:'
	print >>fd, '  -None-'
	print >>fd, ''

# parse options
if __name__ == '__main__':

	if len(sys.argv) < 2:
		usage()
		sys.exit(1)

	if sys.argv[1] in ['-h', '-?', '--help']:
		usage()
		sys.exit(0)


	longopts=['file=' ]
	try:
		opts, args=getopt.getopt(sys.argv[1:], '', longopts)
	except getopt.error, msg:
		print msg
		sys.exit(1)

	files=[]
	packages_dir=''
	for opt, val in opts:
		if opt == '--file':
			files.append(val)

	if len(files) > 0:
		for i in args:
			files.append(i)

	if len(files) < 1:
		usage()
		sys.exit(1)

	baseConfig=univention_baseconfig.baseConfig()
	baseConfig.load()

	if baseConfig.get('local/repository', 'no').lower() in [ 'no', 'false' ]:
		print >> sys.stderr, 'Error: The local repository is diabled. Use "univention-config-registry set local/repository=yes" to activate local repository'
		sys.exit(1)

	dirs=[]

	for file in files:
		if file.endswith('.deb') and os.path.exists(file):
			dir, filename = os.path.split( file )
			basedir = urepo.get_repo_basedir( dir )
			if not basedir in dirs:
				dirs.append( basedir )
			os.unlink( file )

	for path in dirs:
		# these might not exist if creating a new repository
		urepo.create_packages( path, '.' )
		if path[ -1 ] == '/':
			path = path[ : -1 ]

		head, tail = os.path.split( path )
		for arch in urepo.ARCHITECTURES:
			urepo.create_packages( head, '%s/%s' % ( tail, arch ) )
