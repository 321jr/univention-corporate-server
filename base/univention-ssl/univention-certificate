#!/bin/bash
#
# Univention SSL
#  openssl wrapper
#
# Copyright 2004-2017 Univention GmbH
#
# http://www.univention.de/
#
# All rights reserved.
#
# The source code of this program is made available
# under the terms of the GNU Affero General Public License version 3
# (GNU AGPL V3) as published by the Free Software Foundation.
#
# Binary versions of this program provided by Univention to you as
# well as other copyrighted, protected or trademarked materials like
# Logos, graphics, fonts, specific documentations and configurations,
# cryptographic keys etc. are subject to a license agreement between
# you and Univention and not subject to the GNU AGPL V3.
#
# In the case you use this program under the terms of the GNU AGPL V3,
# the program is provided in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public
# License with the Debian GNU/Linux or Univention distribution in file
# /usr/share/common-licenses/AGPL-3; if not, see
# <http://www.gnu.org/licenses/>.
set -o errexit

usage () {
	if [ -n "$1" ]; then
		echo "${0##*/}: $1"
		echo ""
	fi

	echo "Usage: ${0##*/} command [options] "
	echo ""
	echo "Commands:"
	echo "        new"
	echo "        revoke"
	echo "        renew"
	echo "        check"
	echo "        dump"
	echo "        list"
	echo ""
	echo "Options:"
	echo "        -name <name>"
	echo "        -days <days>"

	[ -n "$1" ] && exit 2 || exit 0
}
die () {
	echo "${0##/*}: $*" >&2
	exit 1
}
run_only () {
	local role="$1" mode="$2"
	case "$role/$(ucr get server/role)" in
	master/domaincontroller_master) ;;
	backup/domaincontroller_master) ;;
	backup/domaincontroller_backup) ;;
	master/basesystem) ;;
	backup/basesystem) ;;
	master/) ;;
	backup/) ;;
	*) die "Works only on the DC $1" ;;
	esac
	[ 0 -eq "$(id -u)" ] ||
		die "Only user 'root' can use this"
	exec 3<"$SSLBASE"
	flock -n --"$mode" 3 ||
		die "Failed to get $mode lock"
}

command=
name=
days=
while [ $# -ge 1 ]
do
	case "$1" in
	new) command="$1" ;;
	revoke) command="$1" ;;
	renew) command="$1" ;;
	check) command="$1" ;;
	list) command="$1" name="DUMMY" ;;
	dump) command="$1" ;;
	-name|--name) name="${2:?Missing argument to -name}" ; shift ;;
	-days|--days) days="${2:?Missing argument to -days}" ; shift ;;
	-h|--help|--usage|-\?) usage ;;
	-*) usage "Unknown option: '$1'" >&2 ;;
	*) usage "Unknown command: '$1'" >&2 ;;
	esac
	shift
done

[ -n "$command" ] || usage "Missing command"
: ${name:?Missing argument '-name'}

. /usr/share/univention-ssl/make-certificates.sh
cd "$SSLBASE"

new () {
		run_only master exclusive
		echo "Creating certificate: $name"
		gencert "$SSLBASE/$name" "$name" "$days"
		if getent group "DC Backup Hosts" 2>&1 >/dev/null
		then
			chgrp -R "DC Backup Hosts" "$SSLBASE/$name"
			chmod -R g+rX "$SSLBASE/$name"
		fi
}

revoke () {
		run_only master exclusive
		echo "Revoke certificate: $name"
		revoke_cert "$name"
}

renew () {
		run_only master exclusive
		: ${days:?Missing argument -days}
		echo "Renew certificate: $name"
		renew_cert "$name" "$days"
}

check () {
		local rv=0
		run_only backup shared
		echo -n "Certificate \"$name\" is "
		has_valid_cert "$name" >/dev/null || rv=$?
		case "$rv" in
		0) echo "valid" ;;
		1) echo "invalid (not found)" ;;
		2) echo "invalid (revoked)" ;;
		3) echo "invalid (expired)" ;;
		*) echo "invalid" ;;
		esac
		exit $rv
}

list () {
		run_only backup shared
		echo "List all certificates"
		list_cert_names
}

dump () {
		local filename="$SSLBASE/$name/cert.pem"
		[ -r "$filename" ] ||
			die "Can not read file '$filename'"
		echo "Dump certificate: $name"
		openssl x509 -in "$filename" -noout -text
}

"$command"
