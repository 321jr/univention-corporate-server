#!/usr/bin/python2.6
# -*- coding: utf-8 -*-
#
# Univention Server Memberserver
#  sets LDAP server according to policy
#
# Copyright 2003-2011 Univention GmbH
#
# http://www.univention.de/
#
# All rights reserved.
#
# The source code of this program is made available
# under the terms of the GNU Affero General Public License version 3
# (GNU AGPL V3) as published by the Free Software Foundation.
#
# Binary versions of this program provided by Univention to you as
# well as other copyrighted, protected or trademarked materials like
# Logos, graphics, fonts, specific documentations and configurations,
# cryptographic keys etc. are subject to a license agreement between
# you and Univention and not subject to the GNU AGPL V3.
#
# In the case you use this program under the terms of the GNU AGPL V3,
# the program is provided in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public
# License with the Debian GNU/Linux or Univention distribution in file
# /usr/share/common-licenses/AGPL-3; if not, see
# <http://www.gnu.org/licenses/>.

import os, sys, string
import tempfile

import univention_baseconfig

baseConfig=univention_baseconfig.baseConfig()
baseConfig.load()

found=0

if baseConfig.has_key('ldap/hostdn') and baseConfig['ldap/hostdn']:
	tempfile=tempfile.mktemp()

	for key in ['ldap/server/name', 'ldap/server/addition']:
		if baseConfig.has_key(key):
			for k in baseConfig[key].split(' '):
				result=os.system('univention_policy_result -h %s -s "%s" >>%s' %  (k, baseConfig['ldap/hostdn'], tempfile))
				addition=[]

				if result != 0:
					continue

				file=open(tempfile, 'r')

				for line in file.readlines():
					line=line.strip(' ').strip('\n')
					if line.startswith('univentionLDAPServer='):
						new_ldap_server=line.replace('univentionLDAPServer=', '').replace('"','')
						if not found:
							if not baseConfig.has_key('ldap/server/name'):
								out=univention_baseconfig.handler_set(['ldap/server/name=%s' % new_ldap_server])
							elif  not new_ldap_server == baseConfig['ldap/server/name']:
								out=univention_baseconfig.handler_set(['ldap/server/name=%s' % new_ldap_server])
							found=1
						else:
							addition.append(new_ldap_server)
				if addition:
					out=univention_baseconfig.handler_set(['ldap/server/addition=%s' % string.join(addition,' ')])
				else:
					if baseConfig.has_key( 'ldap/server/addition' ):
						out=univention_baseconfig.handler_unset(['ldap/server/addition'])

				file.close()
				os.remove(tempfile)

				sys.exit(0)

sys.exit(1)
