#!/usr/bin/make -f

D=$(CURDIR)/debian/horde-webmailer/
HORDESHARE=$(D)/usr/share/horde3/

## The Univention patches in debian/patches are applied by quilt
include /usr/share/quilt/quilt.make

prepare: debian/prepare-stamp
debian/prepare-stamp:
	## extract Horde upstream packages and apply Kolab patches
	# debian/prepare_horde-webmailer.sh	# this expects horde-webmailer to be removed in clean target
	tar xzf horde-webmail.tar.gz
	touch debian/prepare-stamp

configure: configure-stamp
configure-stamp: prepare patch
	dh_testdir
	touch configure-stamp

build: configure-stamp build-stamp
build-stamp:
	dh_testdir
	touch build-stamp

clean:
	dh_testdir
	dh_testroot
	rm -f build-stamp configure-stamp
	rm -rf horde-webmail
	rm -rf $(QUILT_STAMPFN)
	rm -rf debian/prepare-stamp
	rm -f *~
	dh_clean

install: build
	dh_testdir
	dh_testroot
	dh_clean -k
	dh_installdirs

	# install
	mkdir -p `dirname $(HORDESHARE)`
	cp -r horde-webmail/* $(HORDESHARE)
	find $(HORDESHARE) -type d -name .pc | xargs -r rm -rf # remove the quilt dirs of upstream-pkgs.sh
	find $(HORDESHARE) -type d -name .svn | xargs -r rm -rf # remove the svn dirs

	# translation
	msgfmt -o ${HORDESHARE}/kronolith/locale/de_DE/LC_MESSAGES/kronolith.mo ${HORDESHARE}/kronolith/po/de_DE.po

	## Horde Demo Cfg files
	(cd ${HORDESHARE}/config && find . ! -path "*.svn*" -type f -exec install -D -m 0644 {} $(D)/etc/horde/horde3/{} \;)
	rm -R ${HORDESHARE}/config
	ln -sf /etc/horde/horde3 ${HORDESHARE}/config

	(cd ${HORDESHARE}/kronolith/config && find . ! -path "*.svn*" -type f -exec install -D -m 0644 {} $(D)/etc/horde/kronolith2/{} \;)
	rm -R ${HORDESHARE}/kronolith/config
	ln -sf /etc/horde/kronolith2 ${HORDESHARE}/kronolith/config

	(cd ${HORDESHARE}/imp/config && find . ! -path "*.svn*" -type f -exec install -D -m 0644 {} $(D)/etc/horde/imp4/{} \;)
	rm -R ${HORDESHARE}/imp/config
	ln -sf /etc/horde/imp4 ${HORDESHARE}/imp/config

	(cd ${HORDESHARE}/dimp/config && find . ! -path "*.svn*" -type f -exec install -D -m 0644 {} $(D)/etc/horde/dimp1/{} \;)
	rm -R ${HORDESHARE}/dimp/config
	ln -sf /etc/horde/dimp1 ${HORDESHARE}/dimp/config

	(cd ${HORDESHARE}/mimp/config && find . ! -path "*.svn*" -type f -exec install -D -m 0644 {} $(D)/etc/horde/mimp1/{} \;)
	rm -R ${HORDESHARE}/mimp/config
	ln -sf /etc/horde/mimp1 ${HORDESHARE}/mimp/config

	(cd ${HORDESHARE}/turba/config && find . ! -path "*.svn*" -type f -exec install -D -m 0644 {} $(D)/etc/horde/turba2/{} \;)
	rm -R ${HORDESHARE}/turba/config
	ln -sf /etc/horde/turba2 ${HORDESHARE}/turba/config

	(cd ${HORDESHARE}/mnemo/config && find . ! -path "*.svn*" -type f -exec install -D -m 0644 {} $(D)/etc/horde/mnemo2/{} \;)
	rm -R ${HORDESHARE}/mnemo/config
	ln -sf /etc/horde/mnemo2 ${HORDESHARE}/mnemo/config

	(cd ${HORDESHARE}/nag/config && find . ! -path "*.svn*" -type f -exec install -D -m 0644 {} $(D)/etc/horde/nag2/{} \;)
	rm -R ${HORDESHARE}/nag/config
	ln -sf /etc/horde/nag2 ${HORDESHARE}/nag/config

	(cd ${HORDESHARE}/ingo/config && find . ! -path "*.svn*" -type f -exec install -D -m 0644 {} $(D)/etc/horde/ingo1/{} \;)
	rm -R ${HORDESHARE}/ingo/config
	ln -sf /etc/horde/ingo1 ${HORDESHARE}/ingo/config

binary-arch: build install

binary-indep: build install
	dh_testdir
	dh_testroot
	dh_installdocs
	dh_installexamples
	dh_installmenu
	dh_installcron
	dh_installman
	dh_installinfo
	dh_installchangelogs
	dh_installlogrotate
	dh_strip
	dh_compress
	dh_fixperms
	dh_installdeb
	dh_link
	dh_gencontrol
	dh_md5sums
	dh_builddeb

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install configure
