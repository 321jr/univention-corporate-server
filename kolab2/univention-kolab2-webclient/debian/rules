#!/usr/bin/make -f
#
# Univention Kolab2 Webclient
#  rules file for the debian package
#
# Copyright 2004-2010 Univention GmbH
#
# http://www.univention.de/
#
# All rights reserved.
#
# The source code of this program is made available
# under the terms of the GNU Affero General Public License version 3
# (GNU AGPL V3) as published by the Free Software Foundation.
#
# Binary versions of this program provided by Univention to you as
# well as other copyrighted, protected or trademarked materials like
# Logos, graphics, fonts, specific documentations and configurations,
# cryptographic keys etc. are subject to a license agreement between
# you and Univention and not subject to the GNU AGPL V3.
#
# In the case you use this program under the terms of the GNU AGPL V3,
# the program is provided in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public
# License with the Debian GNU/Linux or Univention distribution in file
# /usr/share/common-licenses/AGPL-3; if not, see
# <http://www.gnu.org/licenses/>.

# This is the debhelper compatability version to use.
MODULES=modules/voip

configure: configure-stamp
configure-stamp:
	dh_testdir
	touch configure-stamp

build: configure-stamp build-stamp

build-stamp:
	dh_testdir
	touch build-stamp

clean:
	dh_testdir
	dh_testroot
	rm -f build-stamp configure-stamp
	dh_clean

PACKAGE_NAME=univention-kolab2-webclient
D=$(CURDIR)/debian/${PACKAGE_NAME}
SHARE=$(D)/usr/share/${PACKAGE_NAME}
HORDESHARE=$(D)/usr/share/horde3/
bin_dir=$(HORDESHARE)/bin/
lib_dir=$(HORDESHARE)/lib/
php_dir=$(lib_dir)
doc_dir=$(php_dir)/docs/
data_dir=$(php_dir)/data/
test_dir=$(php_dir)/tests/

KOLABPEAR_DIR=$(CURDIR)/kolab-upstream/server/pear/
SRCDIR=kolab-php-lib

# PEAR=pear -d php_dir=$(php_dir) -d doc_dir=$(doc_dir) -d test_dir=$(test_dir) -d bin_dir=$(bin_dir) -d data_dir=$(data_dir) install -n -f

PEAR=PHP_PEAR_PHP_BIN="php -d safe_mode=off -d memory_limit=40M" \
pear -d bin_dir="$(bin_dir)" \
     -d php_dir="$(php_dir)" \
     -d doc_dir="$(doc_dir)" \
     -d data_dir="$(data_dir)" \
     -d test_dir="$(test_dir)" \
     install --offline --force --nodeps

install: build
	dh_testdir
	dh_testroot
	dh_clean -k
	dh_installdirs

	mkdir -p $(SHARE)
	install -m 644 scripts/create.database_and_user.sql $(SHARE)
	install -m 644 scripts/create.pgsql.sql $(SHARE)
	install -m 644 scripts/horde_datatree.sql $(SHARE)
	install -m 644 scripts/horde_prefs.sql $(SHARE)
	install -m 644 scripts/horde_syncml.sql $(SHARE)
	install -m 644 scripts/kronolith.pgsql.sql $(SHARE)
	install -m 644 scripts/turba_objects.pgsql.sql $(SHARE)
	install -m 644 scripts/horde_histories.sql $(SHARE)
	install -m 644 scripts/syncml_map_update.sql $(SHARE)
	install -m 755 scripts/turba-permissions.py $(SHARE)
	install -m 755 scripts/syncml_interrupt.sh $(SHARE)
	install -m 755 scripts/syncml_reset_user.sh $(SHARE)

	## add the PEAR channels
	for channelxml in PEAR-Horde-Channel/pear.horde.org.xml PEAR-PHPUnit-Channel/pear.phpunit.de.xml; \
	do \
		pear_xml=$(KOLABPEAR_DIR)/$${channelxml}; \
		PHP_PEAR_PHP_BIN="php -d safe_mode=off"   \
		pear -d php_dir=$(php_dir) channel-add  $${pear_xml} || \
			echo "Channel already exists!" && sleep 1; \
		pear -d php_dir=$(php_dir) channel-update $${pear_xml} || \
			echo "Could not update channel pear.horde.org!" && sleep 1; \
	done

	for FILE in $(SRCDIR)/*.tgz; do \
	$(PEAR) $${FILE}; \
	done
	rm -rf $(php_dir)/{.filemap,.lock,.channels,.depdb,.depdblock}

	## univention theme, obsolete
	#(cd usr/share/horde3/ && find . ! -path "*CVS*" ! -path "*.svn*" -type d -exec install  -d $(HORDESHARE){} \;)
	#(cd usr/share/horde3/ && find . ! -path "*CVS*" ! -path "*.svn*" -type f -exec install -m 0644 {} $(HORDESHARE){} \;)

	install -D -m 755 webaccess-share.py ${D}/usr/lib/univention-directory-listener/system/webaccess-share.py
	install -D -m 755 horde-prefs.py ${D}/usr/lib/univention-directory-listener/system/horde-prefs.py

	#QUILT_PATCHES=debian/patches quilt push -a || test $$? = 2

	univention-install-baseconfig

binary-arch: build install

binary-indep: build install
	dh_testdir
	dh_testroot
	dh_installdocs
	dh_installchangelogs
	dh_link
	dh_compress
	dh_fixperms
	dh_installdeb
	dh_shlibdeps
	dh_gencontrol
	dh_md5sums
	dh_builddeb

binary: binary-indep binary-arch

.PHONY: build clean binary-indep binary-arch binary install configure
