@!@
import json
import socket
import fcntl
import struct
import urllib2
from univention.config_registry.interfaces import Interfaces


tracebacks = []

def query_ec2(key):
	url = 'http://169.254.169.254/latest/meta-data/' + key
	try:
		result = urllib2.urlopen(url, timeout=2)
		value = result.read().strip()
		return value
	except (urllib2.URLError, socket.error, socket.timeout) as ex:
		tracebacks.append('%s %s' % (url, ex))
		return None


def get_ip_address(ifname):
	SIOCGIFADDR = 0x8915
	try:
		sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
		try:
			addr = socket.inet_ntoa(
				fcntl.ioctl(
					sock.fileno(),
					SIOCGIFADDR,
					struct.pack('256s', ifname[:15])
				)[20:24]
			)
		finally:
			sock.close()
	except IOError as ex:
		tracebacks.append('%s %s %d' % (ifname, ex, ex.errno))
		addr = None
	return addr


def get_ec2_address():
	# EC2 meta data
	if configRegistry.is_true('server/amazon'):
		for key in ('public-hostname', 'public-ipv4', 'local-ipv4'):
			addr = query_ec2(key)
			if addr:
				return addr

	# UCR
	DHCP = {'dhcp', 'dynamic'}
	interfaces = Interfaces(configRegistry)
	for ifname, iface in interfaces.all_interfaces:
		# IPv4
		if iface.type in DHCP:
			addr = get_ip_address(ifname)
			if addr:
				return '%s' % (addr,)
		else:
			addr = iface.ipv4_address()
			if addr:
				return '%s' % (addr.ip,)
		# IPv6
		addr = iface.ipv6_address()
		if addr:
			return '[%s]' % (addr.ip,)

	# runtime data
	for ifname, iface in interfaces.all_interfaces:
		addr = get_ip_address(ifname)
		if addr:
			return '%s' % (addr,)

	# fallback
	return socket.getfqdn()


data = dict(
	domainname=configRegistry['domainname'],
	hostname=configRegistry['hostname'],
	server_role=configRegistry.get('server/role'),
	ldap_master=configRegistry.get('ldap/master'),
	serveraddress=get_ec2_address(),
	appliance_name=configRegistry['umc/web/appliance/name'],
	feedbackAddress=configRegistry.get('umc/web/feedback/mail', 'feedback@univention.de'),
	feedbackSubject=configRegistry.get('umc/web/feedback/description', '[UMC-Feedback] Traceback'),
	tracebacks=tracebacks,
)

print json.dumps(data, indent=2)
@!@
