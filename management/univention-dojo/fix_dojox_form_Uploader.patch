Changes for this code were backported from the dojo SVN repository.
HTML5 problems occurred with eval trying to parse a JSON string.
The IFrame plugin would not work at all.
(Bug #23333)
--- ./dojo-release-1.6.1-src/dojox/form/uploader/plugins/HTML5.js.old	2011-11-08 15:52:04.000000000 +0100
+++ ./dojo-release-1.6.1-src/dojox/form/uploader/plugins/HTML5.js	2011-11-15 20:47:49.000000000 +0100
@@ -139,10 +139,10 @@
 			clearInterval(timer);
 		}), false);
         xhr.onreadystatechange = dojo.hitch(this, function() {
-			if (xhr.readyState === 4) {
-				console.info("COMPLETE")
+			if(xhr.readyState === 4){
+//				console.info("COMPLETE")
 				clearInterval(timer);
-				this.onComplete(dojo.eval(xhr.responseText));
+				this.onComplete(JSON.parse(xhr.responseText.replace(/^\{\}&&/,'')));
 			}
 		});
         xhr.open("POST", this.getUrl());
--- ./dojo-release-1.6.1-src/dojox/form/uploader/plugins/IFrame.js.old	2011-11-18 14:25:18.000000000 +0100
+++ ./dojo-release-1.6.1-src/dojox/form/uploader/plugins/IFrame.js	2011-11-18 19:13:18.000000000 +0100
@@ -21,37 +21,47 @@
 
 	postMixInProperties: function(){
 		this.inherited(arguments);
-		if(!this.supports("multiple")){
-			this.uploadType = "iframe";
-		}
-	},
-
-	upload: function(/*Object ? */data){
-		// summary:
-		//		See: dojox.form.Uploader.upload
-		//
 		if(!this.supports("multiple") || this.force =="iframe"){
-			this.uploadIFrame(data);
-			dojo.stopEvent(data);
-			return;
+			this.uploadType = "iframe";
+			this.upload = this.uploadIFrame;
 		}
 	},
 
-	uploadIFrame: function(){
+	uploadIFrame: function(data){
 		// summary:
 		//		Internal. You could use this, but you should use upload() or submit();
 		//		which can also handle the post data.
 		//
+		var form, destroyAfter = false;
+		if(!this.getForm()){
+			//enctype can't be changed once a form element is created
+			form = dojo.create('form', { enctype: 'multipart/form-data', method: 'post' }, this.domNode);
+			dojo.forEach(this._inputs, function(n, i){
+				if(n.value) form.appendChild(n);
+			}, this);
+			destroyAfter = true;
+		}else{
+			form = this.form;
+		}
+
 		var url = this.getUrl();
+
 		var dfd = dojo.io.iframe.send({
-			url: this.getUrl(),
-			form: this.form,
+			url: url,
+			form: form,
 			handleAs: "json",
+			content: data,
 			error: dojo.hitch(this, function(err){
-				console.error("HTML Upload Error:" + err.message);
+				if(destroyAfter){ dojo.destroy(form); }
+				this.onError(err);
 			}),
 			load: dojo.hitch(this, function(data, ioArgs, widgetRef){
-				this.onComplete(data);
+				if(destroyAfter){ dojo.destroy(form); }
+				if(data["ERROR"] || data["error"]){
+					this.onError(data);
+				}else{
+					this.onComplete(data);
+				}
 			})
 		});
 	}
