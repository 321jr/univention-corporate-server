#!/bin/bash
#
# Univention Self Service UMC module
#  postinst file for the debian package
#
# Copyright 2015 Univention GmbH
#
# http://www.univention.de/
#
# All rights reserved.
#
# The source code of this program is made available
# under the terms of the GNU Affero General Public License version 3
# (GNU AGPL V3) as published by the Free Software Foundation.
#
# Binary versions of this program provided by Univention to you as
# well as other copyrighted, protected or trademarked materials like
# Logos, graphics, fonts, specific documentations and configurations,
# cryptographic keys etc. are subject to a license agreement between
# you and Univention and not subject to the GNU AGPL V3.
#
# In the case you use this program under the terms of the GNU AGPL V3,
# the program is provided in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public
# License with the Debian GNU/Linux or Univention distribution in file
# /usr/share/common-licenses/AGPL-3; if not, see
# <http://www.gnu.org/licenses/>.

#DEBHELPER#

if [ "$1" = "configure" -a -z "$2" ] ; then
	echo "Fresh installation..."
	su - postgres -c "echo \"CREATE ROLE selfservice WITH LOGIN;\" | psql"
	su - postgres -c "createdb selfservice -E UTF8 -O selfservice -T template0"
fi

DB_SECRET_FILE=/etc/self-service-db.secret

if [ -f $DB_SECRET_FILE ]; then
	echo "Using old DB password..."
	selfservice_pwd=$(cat $DB_SECRET_FILE)
else
	echo "Generating new DB password..."
	selfservice_pwd=$(makepasswd --chars 20)
	touch $DB_SECRET_FILE
	chown root:root $DB_SECRET_FILE
	chmod 600 $DB_SECRET_FILE
	echo "$selfservice_pwd" > $DB_SECRET_FILE
	su - postgres -c "echo \"ALTER ROLE selfservice WITH ENCRYPTED PASSWORD '$selfservice_pwd';\" | psql"
fi

SMTPSERVER=$(ucr get umc/self-service/passwordreset/email/server)
if [ -z $SMTPSERVER ]; then
	# try to find a UCS registered SMTP server
	HOST=$(univention-ldapsearch -LLL '(univentionService=SMTP)' cn | egrep '^cn' | cut -f 2 -d ' ')
	DOMAIN=$(univention-ldapsearch -LLL '(univentionService=SMTP)' associatedDomain | egrep '^associatedDomain:' | cut -f 2 -d ' ')
	SMTPSERVER="$HOST.$DOMAIN"
	if ! ping -c 1 -q $SMTPSERVER >/dev/null 2>&1; then
		SMTPSERVER="localhost"
	fi
fi

univention-config-registry set \
	umc/self-service/passwordreset/enabled?yes \
	umc/self-service/passwordreset/blacklist/groups?"Administrators,Domain Admins" \
	umc/self-service/passwordreset/whitelist/groups?"Domain Users" \
	umc/self-service/passwordreset/email/enabled?yes \
	umc/self-service/passwordreset/email/server?$SMTPSERVER \
	umc/self-service/passwordreset/external/enabled=no \
	umc/self-service/passwordreset/sms/enabled?no

if [ "$1" = "configure" ]; then
	uinst=/usr/lib/univention-install/65univention-management-console-module-passwordreset.uinst
	[ -e "$uinst" ] && rm "$uinst"
fi

. /usr/share/univention-lib/base.sh
call_joinscript 35univention-management-console-module-passwordreset.inst

exit 0
