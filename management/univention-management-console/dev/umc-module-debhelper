#!/usr/bin/python2.6
# -*- coding: utf-8 -*-
#
# Univention Configuration Registry
#  install UMC module
#
# Copyright 2011 Univention GmbH
#
# http://www.univention.de/
#
# All rights reserved.
#
# The source code of this program is made available
# under the terms of the GNU Affero General Public License version 3
# (GNU AGPL V3) as published by the Free Software Foundation.
#
# Binary versions of this program provided by Univention to you as
# well as other copyrighted, protected or trademarked materials like
# Logos, graphics, fonts, specific documentations and configurations,
# cryptographic keys etc. are subject to a license agreement between
# you and Univention and not subject to the GNU AGPL V3.
#
# In the case you use this program under the terms of the GNU AGPL V3,
# the program is provided in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public
# License with the Debian GNU/Linux or Univention distribution in file
# /usr/share/common-licenses/AGPL-3; if not, see
# <http://www.gnu.org/licenses/>.

import os
import sys
import univention.debhelper as dh_ucs

MODULE = 'Module'
PYTHON = 'Python'
DEFINITION = 'Definition'
JAVASCRIPT = 'Javascript'
SYNTAX = 'Syntax'
CATEGORY = 'Category'

"""Helps installing UMC modules. It parses a RFC 822 file called
$(package).umc-modules and and installed the specified components of a
module into the correct directories. Each module definition contains
the following entries:

 Module: The internal name of the module
 Python: A directory containing the python module. There must be a subdirectory named like the internal name of the module.
 Definition: The XML definition of the module
 Syntax: The XML definition of new syntax classes
 Javascript: The filename of the javascript code
 Category: The XML definition of additional categories

The entries Syntax and Category are optional.

Example:
 Module: ucr
 Python: umc/module
 Definition: umc/ucr.xml
 Syntax: umc/syntax/ucr.xml
 Javascript: umc/js/ucr.js
 Category: umc/categories/ucr.xml
"""

def do_package( package ):
	file_umc_module = os.path.join( 'debian/', package + '.umc-modules' )

	if not os.path.isfile( file_umc_module ):
		return

	f_umc_module = open( file_umc_module, 'r' )

	for item in dh_ucs.parseRfc822( f_umc_module.read() ):
		# required fields
		for required in ( MODULE, PYTHON, DEFINITION, JAVASCRIPT ):
			if not required in item or not item[ required ]:
				print >>sys.stderr, 'warning: UMC module definition incomplete. key %s missing' % required
				return

		# single values
		item[ 'package' ] = package
		item[ MODULE ] = item[ MODULE ][ 0 ]
		item[ PYTHON ] = item[ PYTHON ][ 0 ]

		# prepare directory
		dh_ucs.doIt( [ 'install', '-d', 'debian/%(package)s/usr/share/pyshared/univention/management/console/modules/%(Module)s' % item ] )
		dh_ucs.doIt( [ 'install', '-d', 'debian/%(package)s/usr/share/univention-management-console/js' % item ] )
		dh_ucs.doIt( [ 'install', '-d', 'debian/%(package)s/usr/share/univention-management-console/modules' % item ] )
		if SYNTAX in item:
			dh_ucs.doIt( [ 'install', '-d', 'debian/%(package)s/usr/share/univention-management-console/syntax' % item ] )
		else:
			print >>sys.stderr, 'info: no syntax definition file'
		if CATEGORY in item:
			dh_ucs.doIt( [ 'install', '-d', 'debian/%(package)s/usr/share/univention-management-console/categories' % item ] )
		else:
			print >>sys.stderr, 'info: no category definition file'

		# copy python module
		install_python = []
		module_dir = '%(Python)s/%(Module)s/' % item
		for entry in os.listdir( module_dir ):
			filename = os.path.join( module_dir, entry )
			if os.path.isfile( filename ) and entry.endswith( '.py' ):
				install_python.append( filename )
		if not install_python:
			print >>sys.stderr, 'error: no python files found in %s' % module_dir
			sys,exit( 1 )
		install_python.insert( 0, 'install' )
		install_python.append( 'debian/%(package)s/usr/share/pyshared/univention/management/console/modules/%(Module)s' % item )
		dh_ucs.doIt( install_python )

		# copy javascript code
		for script in item[ JAVASCRIPT ]:
			dh_ucs.doIt( [ 'install', script, 'debian/%(package)s/usr/share/univention-management-console/js' % item ] )

		# copy XML definitions
		dh_ucs.doIt( [ 'install', item[ DEFINITION ][ 0 ], 'debian/%(package)s/usr/share/univention-management-console/modules' % item ] )
		if SYNTAX in item:
			dh_ucs.doIt( [ 'install', item[ SYNTAX ][ 0 ], 'debian/%(package)s/usr/share/univention-management-console/syntax' % item ] )
		if CATEGORY in item:
			dh_ucs.doIt( [ 'install', item[ CATEGORY ][ 0 ], 'debian/%(package)s/usr/share/univention-management-console/categories' % item ] )

	f_umc_module.close()
	f_postinst = open( os.path.join( 'debian', package + '.postinst.debhelper' ), 'a' )
	f_postinst.write( 'invoke-rc.d univention-management-console-server reload || true\n' )
	f_postinst.close()

	f_prerm = open( os.path.join( 'debian', package + '.prerm.debhelper' ), 'a' )
	f_prerm.write( 'invoke-rc.d univention-management-console-server reload || true\n' )
	f_prerm.close()

if __name__ == '__main__':
	for package in dh_ucs.binary_packages():
		do_package( package )
