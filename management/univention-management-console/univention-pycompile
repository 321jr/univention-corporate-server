#!/usr/bin/python2.4 -OO
# a python preprocessor

import os, sys, getopt, re, py_compile

define=[]
opts, args=getopt.getopt(sys.argv[1:], 'D:')
for opt, val in opts:
	if opt == '-D':
		define.append(val)

input, output=args

print 'byte-compiling: %s' % input
if os.path.exists(output):
	os.unlink(output)

if output.endswith('.pyo'):
	output_pp=open(output+'.pp', 'w')
else:
	output_pp=open(output, 'w')

ifdef_pattern=re.compile('^#ifdef (.*)')
endif_pattern=re.compile('^#endif *(/\*.*\*/)*')

hide_depth=0
depth=0
hide=0

for line in open(input).readlines():
	line=line[0:-1]
	
	if ifdef_pattern.match(line):
		var=ifdef_pattern.findall(line)[0]
		depth+=1
		if not hide:
			hide=not var in define
			hide_depth=depth
	elif endif_pattern.match(line):
		if depth == hide_depth:	
			hide=0
		depth-=1
	elif not hide:
		print >>output_pp, line
output_pp.close()

if output.endswith('.pyo'):
	e=py_compile.compile(output+'.pp', output, input)
	#os.unlink(output+'.pp')
	
if not os.path.exists(output):
	sys.exit(1)
