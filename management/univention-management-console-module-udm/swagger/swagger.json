{"info": {"version": "1.0", "description": "A simple UDM API", "title": "UDM API"}, "paths": {"/appcenter/app/": {"post": {"tags": ["appcenter_app"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/appcenter_app"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/appcenter_app"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new app object"}, "get": {"tags": ["appcenter_app"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/appcenter_app"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all app objects"}}, "/appcenter/app/{id}": {"put": {"tags": ["appcenter_app"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/appcenter_app"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/appcenter_app"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a app object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["appcenter_app"], "summary": "Delete a app object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["appcenter_app"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/appcenter_app"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a app object given its id"}}, "/computers/computer/": {"post": {"tags": ["computers_computer"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/computers_computer"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/computers_computer"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new computer object"}, "get": {"tags": ["computers_computer"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/computers_computer"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all computer objects"}}, "/computers/computer/{id}": {"put": {"tags": ["computers_computer"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/computers_computer"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/computers_computer"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a computer object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["computers_computer"], "summary": "Delete a computer object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["computers_computer"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/computers_computer"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a computer object given its id"}}, "/computers/domaincontroller_backup/": {"post": {"tags": ["computers_domaincontroller_backup"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/computers_domaincontroller_backup"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/computers_domaincontroller_backup"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new domaincontroller_backup object"}, "get": {"tags": ["computers_domaincontroller_backup"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/computers_domaincontroller_backup"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all domaincontroller_backup objects"}}, "/computers/domaincontroller_backup/{id}": {"put": {"tags": ["computers_domaincontroller_backup"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/computers_domaincontroller_backup"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/computers_domaincontroller_backup"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a domaincontroller_backup object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["computers_domaincontroller_backup"], "summary": "Delete a domaincontroller_backup object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["computers_domaincontroller_backup"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/computers_domaincontroller_backup"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a domaincontroller_backup object given its id"}}, "/computers/domaincontroller_master/": {"post": {"tags": ["computers_domaincontroller_master"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/computers_domaincontroller_master"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/computers_domaincontroller_master"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new domaincontroller_master object"}, "get": {"tags": ["computers_domaincontroller_master"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/computers_domaincontroller_master"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all domaincontroller_master objects"}}, "/computers/domaincontroller_master/{id}": {"put": {"tags": ["computers_domaincontroller_master"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/computers_domaincontroller_master"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/computers_domaincontroller_master"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a domaincontroller_master object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["computers_domaincontroller_master"], "summary": "Delete a domaincontroller_master object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["computers_domaincontroller_master"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/computers_domaincontroller_master"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a domaincontroller_master object given its id"}}, "/computers/domaincontroller_slave/": {"post": {"tags": ["computers_domaincontroller_slave"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/computers_domaincontroller_slave"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/computers_domaincontroller_slave"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new domaincontroller_slave object"}, "get": {"tags": ["computers_domaincontroller_slave"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/computers_domaincontroller_slave"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all domaincontroller_slave objects"}}, "/computers/domaincontroller_slave/{id}": {"put": {"tags": ["computers_domaincontroller_slave"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/computers_domaincontroller_slave"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/computers_domaincontroller_slave"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a domaincontroller_slave object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["computers_domaincontroller_slave"], "summary": "Delete a domaincontroller_slave object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["computers_domaincontroller_slave"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/computers_domaincontroller_slave"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a domaincontroller_slave object given its id"}}, "/computers/ipmanagedclient/": {"post": {"tags": ["computers_ipmanagedclient"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/computers_ipmanagedclient"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/computers_ipmanagedclient"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new ipmanagedclient object"}, "get": {"tags": ["computers_ipmanagedclient"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/computers_ipmanagedclient"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all ipmanagedclient objects"}}, "/computers/ipmanagedclient/{id}": {"put": {"tags": ["computers_ipmanagedclient"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/computers_ipmanagedclient"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/computers_ipmanagedclient"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a ipmanagedclient object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["computers_ipmanagedclient"], "summary": "Delete a ipmanagedclient object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["computers_ipmanagedclient"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/computers_ipmanagedclient"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a ipmanagedclient object given its id"}}, "/computers/linux/": {"post": {"tags": ["computers_linux"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/computers_linux"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/computers_linux"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new linux object"}, "get": {"tags": ["computers_linux"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/computers_linux"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all linux objects"}}, "/computers/linux/{id}": {"put": {"tags": ["computers_linux"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/computers_linux"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/computers_linux"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a linux object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["computers_linux"], "summary": "Delete a linux object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["computers_linux"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/computers_linux"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a linux object given its id"}}, "/computers/macos/": {"post": {"tags": ["computers_macos"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/computers_macos"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/computers_macos"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new macos object"}, "get": {"tags": ["computers_macos"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/computers_macos"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all macos objects"}}, "/computers/macos/{id}": {"put": {"tags": ["computers_macos"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/computers_macos"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/computers_macos"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a macos object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["computers_macos"], "summary": "Delete a macos object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["computers_macos"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/computers_macos"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a macos object given its id"}}, "/computers/memberserver/": {"post": {"tags": ["computers_memberserver"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/computers_memberserver"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/computers_memberserver"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new memberserver object"}, "get": {"tags": ["computers_memberserver"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/computers_memberserver"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all memberserver objects"}}, "/computers/memberserver/{id}": {"put": {"tags": ["computers_memberserver"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/computers_memberserver"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/computers_memberserver"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a memberserver object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["computers_memberserver"], "summary": "Delete a memberserver object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["computers_memberserver"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/computers_memberserver"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a memberserver object given its id"}}, "/computers/trustaccount/": {"post": {"tags": ["computers_trustaccount"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/computers_trustaccount"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/computers_trustaccount"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new trustaccount object"}, "get": {"tags": ["computers_trustaccount"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/computers_trustaccount"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all trustaccount objects"}}, "/computers/trustaccount/{id}": {"put": {"tags": ["computers_trustaccount"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/computers_trustaccount"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/computers_trustaccount"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a trustaccount object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["computers_trustaccount"], "summary": "Delete a trustaccount object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["computers_trustaccount"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/computers_trustaccount"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a trustaccount object given its id"}}, "/computers/ubuntu/": {"post": {"tags": ["computers_ubuntu"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/computers_ubuntu"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/computers_ubuntu"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new ubuntu object"}, "get": {"tags": ["computers_ubuntu"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/computers_ubuntu"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all ubuntu objects"}}, "/computers/ubuntu/{id}": {"put": {"tags": ["computers_ubuntu"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/computers_ubuntu"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/computers_ubuntu"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a ubuntu object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["computers_ubuntu"], "summary": "Delete a ubuntu object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["computers_ubuntu"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/computers_ubuntu"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a ubuntu object given its id"}}, "/computers/windows/": {"post": {"tags": ["computers_windows"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/computers_windows"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/computers_windows"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new windows object"}, "get": {"tags": ["computers_windows"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/computers_windows"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all windows objects"}}, "/computers/windows/{id}": {"put": {"tags": ["computers_windows"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/computers_windows"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/computers_windows"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a windows object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["computers_windows"], "summary": "Delete a windows object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["computers_windows"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/computers_windows"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a windows object given its id"}}, "/computers/windows_domaincontroller/": {"post": {"tags": ["computers_windows_domaincontroller"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/computers_windows_domaincontroller"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/computers_windows_domaincontroller"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new windows_domaincontroller object"}, "get": {"tags": ["computers_windows_domaincontroller"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/computers_windows_domaincontroller"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all windows_domaincontroller objects"}}, "/computers/windows_domaincontroller/{id}": {"put": {"tags": ["computers_windows_domaincontroller"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/computers_windows_domaincontroller"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/computers_windows_domaincontroller"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a windows_domaincontroller object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["computers_windows_domaincontroller"], "summary": "Delete a windows_domaincontroller object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["computers_windows_domaincontroller"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/computers_windows_domaincontroller"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a windows_domaincontroller object given its id"}}, "/container/cn/": {"post": {"tags": ["container_cn"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/container_cn"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/container_cn"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new cn object"}, "get": {"tags": ["container_cn"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/container_cn"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all cn objects"}}, "/container/cn/{id}": {"put": {"tags": ["container_cn"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/container_cn"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/container_cn"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a cn object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["container_cn"], "summary": "Delete a cn object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["container_cn"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/container_cn"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a cn object given its id"}}, "/container/dc/": {"post": {"tags": ["container_dc"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/container_dc"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/container_dc"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new dc object"}, "get": {"tags": ["container_dc"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/container_dc"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all dc objects"}}, "/container/dc/{id}": {"put": {"tags": ["container_dc"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/container_dc"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/container_dc"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a dc object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["container_dc"], "summary": "Delete a dc object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["container_dc"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/container_dc"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a dc object given its id"}}, "/container/ou/": {"post": {"tags": ["container_ou"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/container_ou"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/container_ou"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new ou object"}, "get": {"tags": ["container_ou"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/container_ou"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all ou objects"}}, "/container/ou/{id}": {"put": {"tags": ["container_ou"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/container_ou"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/container_ou"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a ou object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["container_ou"], "summary": "Delete a ou object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["container_ou"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/container_ou"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a ou object given its id"}}, "/dhcp/host/": {"post": {"tags": ["dhcp_host"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/dhcp_host"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/dhcp_host"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new host object"}, "get": {"tags": ["dhcp_host"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/dhcp_host"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all host objects"}}, "/dhcp/host/{id}": {"put": {"tags": ["dhcp_host"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/dhcp_host"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/dhcp_host"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a host object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["dhcp_host"], "summary": "Delete a host object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["dhcp_host"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/dhcp_host"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a host object given its id"}}, "/dhcp/server/": {"post": {"tags": ["dhcp_server"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/dhcp_server"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/dhcp_server"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new server object"}, "get": {"tags": ["dhcp_server"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/dhcp_server"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all server objects"}}, "/dhcp/server/{id}": {"put": {"tags": ["dhcp_server"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/dhcp_server"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/dhcp_server"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a server object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["dhcp_server"], "summary": "Delete a server object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["dhcp_server"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/dhcp_server"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a server object given its id"}}, "/dhcp/service/": {"post": {"tags": ["dhcp_service"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/dhcp_service"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/dhcp_service"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new service object"}, "get": {"tags": ["dhcp_service"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/dhcp_service"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all service objects"}}, "/dhcp/service/{id}": {"put": {"tags": ["dhcp_service"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/dhcp_service"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/dhcp_service"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a service object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["dhcp_service"], "summary": "Delete a service object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["dhcp_service"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/dhcp_service"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a service object given its id"}}, "/dhcp/shared/": {"post": {"tags": ["dhcp_shared"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/dhcp_shared"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/dhcp_shared"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new shared object"}, "get": {"tags": ["dhcp_shared"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/dhcp_shared"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all shared objects"}}, "/dhcp/shared/{id}": {"put": {"tags": ["dhcp_shared"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/dhcp_shared"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/dhcp_shared"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a shared object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["dhcp_shared"], "summary": "Delete a shared object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["dhcp_shared"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/dhcp_shared"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a shared object given its id"}}, "/dhcp/subnet/": {"post": {"tags": ["dhcp_subnet"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/dhcp_subnet"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/dhcp_subnet"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new subnet object"}, "get": {"tags": ["dhcp_subnet"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/dhcp_subnet"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all subnet objects"}}, "/dhcp/subnet/{id}": {"put": {"tags": ["dhcp_subnet"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/dhcp_subnet"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/dhcp_subnet"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a subnet object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["dhcp_subnet"], "summary": "Delete a subnet object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["dhcp_subnet"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/dhcp_subnet"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a subnet object given its id"}}, "/dns/alias/": {"post": {"tags": ["dns_alias"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/dns_alias"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/dns_alias"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new alias object"}, "get": {"tags": ["dns_alias"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/dns_alias"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all alias objects"}}, "/dns/alias/{id}": {"put": {"tags": ["dns_alias"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/dns_alias"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/dns_alias"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a alias object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["dns_alias"], "summary": "Delete a alias object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["dns_alias"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/dns_alias"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a alias object given its id"}}, "/dns/forward_zone/": {"post": {"tags": ["dns_forward_zone"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/dns_forward_zone"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/dns_forward_zone"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new forward_zone object"}, "get": {"tags": ["dns_forward_zone"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/dns_forward_zone"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all forward_zone objects"}}, "/dns/forward_zone/{id}": {"put": {"tags": ["dns_forward_zone"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/dns_forward_zone"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/dns_forward_zone"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a forward_zone object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["dns_forward_zone"], "summary": "Delete a forward_zone object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["dns_forward_zone"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/dns_forward_zone"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a forward_zone object given its id"}}, "/dns/host_record/": {"post": {"tags": ["dns_host_record"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/dns_host_record"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/dns_host_record"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new host_record object"}, "get": {"tags": ["dns_host_record"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/dns_host_record"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all host_record objects"}}, "/dns/host_record/{id}": {"put": {"tags": ["dns_host_record"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/dns_host_record"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/dns_host_record"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a host_record object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["dns_host_record"], "summary": "Delete a host_record object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["dns_host_record"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/dns_host_record"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a host_record object given its id"}}, "/dns/ns_record/": {"post": {"tags": ["dns_ns_record"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/dns_ns_record"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/dns_ns_record"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new ns_record object"}, "get": {"tags": ["dns_ns_record"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/dns_ns_record"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all ns_record objects"}}, "/dns/ns_record/{id}": {"put": {"tags": ["dns_ns_record"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/dns_ns_record"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/dns_ns_record"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a ns_record object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["dns_ns_record"], "summary": "Delete a ns_record object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["dns_ns_record"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/dns_ns_record"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a ns_record object given its id"}}, "/dns/ptr_record/": {"post": {"tags": ["dns_ptr_record"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/dns_ptr_record"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/dns_ptr_record"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new ptr_record object"}, "get": {"tags": ["dns_ptr_record"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/dns_ptr_record"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all ptr_record objects"}}, "/dns/ptr_record/{id}": {"put": {"tags": ["dns_ptr_record"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/dns_ptr_record"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/dns_ptr_record"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a ptr_record object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["dns_ptr_record"], "summary": "Delete a ptr_record object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["dns_ptr_record"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/dns_ptr_record"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a ptr_record object given its id"}}, "/dns/reverse_zone/": {"post": {"tags": ["dns_reverse_zone"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/dns_reverse_zone"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/dns_reverse_zone"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new reverse_zone object"}, "get": {"tags": ["dns_reverse_zone"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/dns_reverse_zone"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all reverse_zone objects"}}, "/dns/reverse_zone/{id}": {"put": {"tags": ["dns_reverse_zone"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/dns_reverse_zone"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/dns_reverse_zone"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a reverse_zone object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["dns_reverse_zone"], "summary": "Delete a reverse_zone object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["dns_reverse_zone"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/dns_reverse_zone"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a reverse_zone object given its id"}}, "/dns/srv_record/": {"post": {"tags": ["dns_srv_record"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/dns_srv_record"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/dns_srv_record"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new srv_record object"}, "get": {"tags": ["dns_srv_record"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/dns_srv_record"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all srv_record objects"}}, "/dns/srv_record/{id}": {"put": {"tags": ["dns_srv_record"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/dns_srv_record"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/dns_srv_record"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a srv_record object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["dns_srv_record"], "summary": "Delete a srv_record object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["dns_srv_record"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/dns_srv_record"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a srv_record object given its id"}}, "/dns/txt_record/": {"post": {"tags": ["dns_txt_record"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/dns_txt_record"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/dns_txt_record"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new txt_record object"}, "get": {"tags": ["dns_txt_record"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/dns_txt_record"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all txt_record objects"}}, "/dns/txt_record/{id}": {"put": {"tags": ["dns_txt_record"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/dns_txt_record"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/dns_txt_record"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a txt_record object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["dns_txt_record"], "summary": "Delete a txt_record object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["dns_txt_record"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/dns_txt_record"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a txt_record object given its id"}}, "/groups/group/": {"post": {"tags": ["groups_group"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/groups_group"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/groups_group"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new group object"}, "get": {"tags": ["groups_group"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/groups_group"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all group objects"}}, "/groups/group/{id}": {"put": {"tags": ["groups_group"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/groups_group"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/groups_group"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a group object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["groups_group"], "summary": "Delete a group object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["groups_group"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/groups_group"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a group object given its id"}}, "/kerberos/kdcentry/": {"post": {"tags": ["kerberos_kdcentry"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/kerberos_kdcentry"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/kerberos_kdcentry"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new kdcentry object"}, "get": {"tags": ["kerberos_kdcentry"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/kerberos_kdcentry"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all kdcentry objects"}}, "/kerberos/kdcentry/{id}": {"put": {"tags": ["kerberos_kdcentry"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/kerberos_kdcentry"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/kerberos_kdcentry"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a kdcentry object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["kerberos_kdcentry"], "summary": "Delete a kdcentry object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["kerberos_kdcentry"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/kerberos_kdcentry"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a kdcentry object given its id"}}, "/mail/domain/": {"post": {"tags": ["mail_domain"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/mail_domain"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/mail_domain"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new domain object"}, "get": {"tags": ["mail_domain"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/mail_domain"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all domain objects"}}, "/mail/domain/{id}": {"put": {"tags": ["mail_domain"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/mail_domain"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/mail_domain"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a domain object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["mail_domain"], "summary": "Delete a domain object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["mail_domain"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/mail_domain"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a domain object given its id"}}, "/mail/folder/": {"post": {"tags": ["mail_folder"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/mail_folder"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/mail_folder"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new folder object"}, "get": {"tags": ["mail_folder"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/mail_folder"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all folder objects"}}, "/mail/folder/{id}": {"put": {"tags": ["mail_folder"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/mail_folder"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/mail_folder"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a folder object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["mail_folder"], "summary": "Delete a folder object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["mail_folder"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/mail_folder"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a folder object given its id"}}, "/mail/lists/": {"post": {"tags": ["mail_lists"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/mail_lists"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/mail_lists"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new lists object"}, "get": {"tags": ["mail_lists"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/mail_lists"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all lists objects"}}, "/mail/lists/{id}": {"put": {"tags": ["mail_lists"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/mail_lists"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/mail_lists"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a lists object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["mail_lists"], "summary": "Delete a lists object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["mail_lists"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/mail_lists"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a lists object given its id"}}, "/nagios/nagios/": {"post": {"tags": ["nagios_nagios"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/nagios_nagios"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/nagios_nagios"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new nagios object"}, "get": {"tags": ["nagios_nagios"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/nagios_nagios"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all nagios objects"}}, "/nagios/nagios/{id}": {"put": {"tags": ["nagios_nagios"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/nagios_nagios"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/nagios_nagios"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a nagios object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["nagios_nagios"], "summary": "Delete a nagios object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["nagios_nagios"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/nagios_nagios"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a nagios object given its id"}}, "/nagios/service/": {"post": {"tags": ["nagios_service"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/nagios_service"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/nagios_service"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new service object"}, "get": {"tags": ["nagios_service"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/nagios_service"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all service objects"}}, "/nagios/service/{id}": {"put": {"tags": ["nagios_service"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/nagios_service"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/nagios_service"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a service object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["nagios_service"], "summary": "Delete a service object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["nagios_service"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/nagios_service"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a service object given its id"}}, "/nagios/timeperiod/": {"post": {"tags": ["nagios_timeperiod"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/nagios_timeperiod"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/nagios_timeperiod"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new timeperiod object"}, "get": {"tags": ["nagios_timeperiod"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/nagios_timeperiod"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all timeperiod objects"}}, "/nagios/timeperiod/{id}": {"put": {"tags": ["nagios_timeperiod"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/nagios_timeperiod"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/nagios_timeperiod"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a timeperiod object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["nagios_timeperiod"], "summary": "Delete a timeperiod object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["nagios_timeperiod"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/nagios_timeperiod"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a timeperiod object given its id"}}, "/networks/network/": {"post": {"tags": ["networks_network"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/networks_network"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/networks_network"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new network object"}, "get": {"tags": ["networks_network"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/networks_network"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all network objects"}}, "/networks/network/{id}": {"put": {"tags": ["networks_network"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/networks_network"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/networks_network"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a network object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["networks_network"], "summary": "Delete a network object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["networks_network"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/networks_network"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a network object given its id"}}, "/policies/admin_container/": {"post": {"tags": ["policies_admin_container"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/policies_admin_container"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/policies_admin_container"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new admin_container object"}, "get": {"tags": ["policies_admin_container"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/policies_admin_container"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all admin_container objects"}}, "/policies/admin_container/{id}": {"put": {"tags": ["policies_admin_container"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/policies_admin_container"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/policies_admin_container"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a admin_container object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["policies_admin_container"], "summary": "Delete a admin_container object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["policies_admin_container"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/policies_admin_container"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a admin_container object given its id"}}, "/policies/autostart/": {"post": {"tags": ["policies_autostart"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/policies_autostart"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/policies_autostart"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new autostart object"}, "get": {"tags": ["policies_autostart"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/policies_autostart"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all autostart objects"}}, "/policies/autostart/{id}": {"put": {"tags": ["policies_autostart"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/policies_autostart"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/policies_autostart"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a autostart object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["policies_autostart"], "summary": "Delete a autostart object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["policies_autostart"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/policies_autostart"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a autostart object given its id"}}, "/policies/desktop/": {"post": {"tags": ["policies_desktop"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/policies_desktop"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/policies_desktop"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new desktop object"}, "get": {"tags": ["policies_desktop"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/policies_desktop"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all desktop objects"}}, "/policies/desktop/{id}": {"put": {"tags": ["policies_desktop"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/policies_desktop"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/policies_desktop"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a desktop object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["policies_desktop"], "summary": "Delete a desktop object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["policies_desktop"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/policies_desktop"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a desktop object given its id"}}, "/policies/dhcp_boot/": {"post": {"tags": ["policies_dhcp_boot"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/policies_dhcp_boot"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/policies_dhcp_boot"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new dhcp_boot object"}, "get": {"tags": ["policies_dhcp_boot"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/policies_dhcp_boot"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all dhcp_boot objects"}}, "/policies/dhcp_boot/{id}": {"put": {"tags": ["policies_dhcp_boot"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/policies_dhcp_boot"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/policies_dhcp_boot"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a dhcp_boot object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["policies_dhcp_boot"], "summary": "Delete a dhcp_boot object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["policies_dhcp_boot"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/policies_dhcp_boot"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a dhcp_boot object given its id"}}, "/policies/dhcp_dns/": {"post": {"tags": ["policies_dhcp_dns"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/policies_dhcp_dns"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/policies_dhcp_dns"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new dhcp_dns object"}, "get": {"tags": ["policies_dhcp_dns"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/policies_dhcp_dns"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all dhcp_dns objects"}}, "/policies/dhcp_dns/{id}": {"put": {"tags": ["policies_dhcp_dns"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/policies_dhcp_dns"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/policies_dhcp_dns"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a dhcp_dns object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["policies_dhcp_dns"], "summary": "Delete a dhcp_dns object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["policies_dhcp_dns"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/policies_dhcp_dns"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a dhcp_dns object given its id"}}, "/policies/dhcp_dnsupdate/": {"post": {"tags": ["policies_dhcp_dnsupdate"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/policies_dhcp_dnsupdate"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/policies_dhcp_dnsupdate"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new dhcp_dnsupdate object"}, "get": {"tags": ["policies_dhcp_dnsupdate"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/policies_dhcp_dnsupdate"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all dhcp_dnsupdate objects"}}, "/policies/dhcp_dnsupdate/{id}": {"put": {"tags": ["policies_dhcp_dnsupdate"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/policies_dhcp_dnsupdate"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/policies_dhcp_dnsupdate"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a dhcp_dnsupdate object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["policies_dhcp_dnsupdate"], "summary": "Delete a dhcp_dnsupdate object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["policies_dhcp_dnsupdate"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/policies_dhcp_dnsupdate"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a dhcp_dnsupdate object given its id"}}, "/policies/dhcp_leasetime/": {"post": {"tags": ["policies_dhcp_leasetime"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/policies_dhcp_leasetime"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/policies_dhcp_leasetime"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new dhcp_leasetime object"}, "get": {"tags": ["policies_dhcp_leasetime"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/policies_dhcp_leasetime"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all dhcp_leasetime objects"}}, "/policies/dhcp_leasetime/{id}": {"put": {"tags": ["policies_dhcp_leasetime"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/policies_dhcp_leasetime"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/policies_dhcp_leasetime"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a dhcp_leasetime object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["policies_dhcp_leasetime"], "summary": "Delete a dhcp_leasetime object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["policies_dhcp_leasetime"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/policies_dhcp_leasetime"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a dhcp_leasetime object given its id"}}, "/policies/dhcp_netbios/": {"post": {"tags": ["policies_dhcp_netbios"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/policies_dhcp_netbios"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/policies_dhcp_netbios"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new dhcp_netbios object"}, "get": {"tags": ["policies_dhcp_netbios"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/policies_dhcp_netbios"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all dhcp_netbios objects"}}, "/policies/dhcp_netbios/{id}": {"put": {"tags": ["policies_dhcp_netbios"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/policies_dhcp_netbios"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/policies_dhcp_netbios"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a dhcp_netbios object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["policies_dhcp_netbios"], "summary": "Delete a dhcp_netbios object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["policies_dhcp_netbios"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/policies_dhcp_netbios"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a dhcp_netbios object given its id"}}, "/policies/dhcp_routing/": {"post": {"tags": ["policies_dhcp_routing"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/policies_dhcp_routing"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/policies_dhcp_routing"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new dhcp_routing object"}, "get": {"tags": ["policies_dhcp_routing"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/policies_dhcp_routing"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all dhcp_routing objects"}}, "/policies/dhcp_routing/{id}": {"put": {"tags": ["policies_dhcp_routing"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/policies_dhcp_routing"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/policies_dhcp_routing"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a dhcp_routing object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["policies_dhcp_routing"], "summary": "Delete a dhcp_routing object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["policies_dhcp_routing"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/policies_dhcp_routing"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a dhcp_routing object given its id"}}, "/policies/dhcp_scope/": {"post": {"tags": ["policies_dhcp_scope"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/policies_dhcp_scope"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/policies_dhcp_scope"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new dhcp_scope object"}, "get": {"tags": ["policies_dhcp_scope"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/policies_dhcp_scope"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all dhcp_scope objects"}}, "/policies/dhcp_scope/{id}": {"put": {"tags": ["policies_dhcp_scope"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/policies_dhcp_scope"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/policies_dhcp_scope"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a dhcp_scope object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["policies_dhcp_scope"], "summary": "Delete a dhcp_scope object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["policies_dhcp_scope"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/policies_dhcp_scope"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a dhcp_scope object given its id"}}, "/policies/dhcp_statements/": {"post": {"tags": ["policies_dhcp_statements"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/policies_dhcp_statements"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/policies_dhcp_statements"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new dhcp_statements object"}, "get": {"tags": ["policies_dhcp_statements"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/policies_dhcp_statements"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all dhcp_statements objects"}}, "/policies/dhcp_statements/{id}": {"put": {"tags": ["policies_dhcp_statements"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/policies_dhcp_statements"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/policies_dhcp_statements"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a dhcp_statements object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["policies_dhcp_statements"], "summary": "Delete a dhcp_statements object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["policies_dhcp_statements"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/policies_dhcp_statements"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a dhcp_statements object given its id"}}, "/policies/ldapserver/": {"post": {"tags": ["policies_ldapserver"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/policies_ldapserver"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/policies_ldapserver"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new ldapserver object"}, "get": {"tags": ["policies_ldapserver"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/policies_ldapserver"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all ldapserver objects"}}, "/policies/ldapserver/{id}": {"put": {"tags": ["policies_ldapserver"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/policies_ldapserver"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/policies_ldapserver"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a ldapserver object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["policies_ldapserver"], "summary": "Delete a ldapserver object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["policies_ldapserver"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/policies_ldapserver"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a ldapserver object given its id"}}, "/policies/maintenance/": {"post": {"tags": ["policies_maintenance"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/policies_maintenance"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/policies_maintenance"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new maintenance object"}, "get": {"tags": ["policies_maintenance"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/policies_maintenance"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all maintenance objects"}}, "/policies/maintenance/{id}": {"put": {"tags": ["policies_maintenance"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/policies_maintenance"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/policies_maintenance"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a maintenance object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["policies_maintenance"], "summary": "Delete a maintenance object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["policies_maintenance"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/policies_maintenance"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a maintenance object given its id"}}, "/policies/masterpackages/": {"post": {"tags": ["policies_masterpackages"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/policies_masterpackages"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/policies_masterpackages"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new masterpackages object"}, "get": {"tags": ["policies_masterpackages"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/policies_masterpackages"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all masterpackages objects"}}, "/policies/masterpackages/{id}": {"put": {"tags": ["policies_masterpackages"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/policies_masterpackages"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/policies_masterpackages"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a masterpackages object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["policies_masterpackages"], "summary": "Delete a masterpackages object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["policies_masterpackages"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/policies_masterpackages"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a masterpackages object given its id"}}, "/policies/memberpackages/": {"post": {"tags": ["policies_memberpackages"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/policies_memberpackages"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/policies_memberpackages"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new memberpackages object"}, "get": {"tags": ["policies_memberpackages"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/policies_memberpackages"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all memberpackages objects"}}, "/policies/memberpackages/{id}": {"put": {"tags": ["policies_memberpackages"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/policies_memberpackages"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/policies_memberpackages"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a memberpackages object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["policies_memberpackages"], "summary": "Delete a memberpackages object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["policies_memberpackages"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/policies_memberpackages"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a memberpackages object given its id"}}, "/policies/nfsmounts/": {"post": {"tags": ["policies_nfsmounts"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/policies_nfsmounts"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/policies_nfsmounts"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new nfsmounts object"}, "get": {"tags": ["policies_nfsmounts"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/policies_nfsmounts"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all nfsmounts objects"}}, "/policies/nfsmounts/{id}": {"put": {"tags": ["policies_nfsmounts"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/policies_nfsmounts"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/policies_nfsmounts"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a nfsmounts object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["policies_nfsmounts"], "summary": "Delete a nfsmounts object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["policies_nfsmounts"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/policies_nfsmounts"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a nfsmounts object given its id"}}, "/policies/print_quota/": {"post": {"tags": ["policies_print_quota"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/policies_print_quota"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/policies_print_quota"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new print_quota object"}, "get": {"tags": ["policies_print_quota"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/policies_print_quota"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all print_quota objects"}}, "/policies/print_quota/{id}": {"put": {"tags": ["policies_print_quota"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/policies_print_quota"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/policies_print_quota"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a print_quota object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["policies_print_quota"], "summary": "Delete a print_quota object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["policies_print_quota"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/policies_print_quota"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a print_quota object given its id"}}, "/policies/printserver/": {"post": {"tags": ["policies_printserver"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/policies_printserver"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/policies_printserver"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new printserver object"}, "get": {"tags": ["policies_printserver"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/policies_printserver"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all printserver objects"}}, "/policies/printserver/{id}": {"put": {"tags": ["policies_printserver"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/policies_printserver"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/policies_printserver"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a printserver object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["policies_printserver"], "summary": "Delete a printserver object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["policies_printserver"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/policies_printserver"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a printserver object given its id"}}, "/policies/pwhistory/": {"post": {"tags": ["policies_pwhistory"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/policies_pwhistory"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/policies_pwhistory"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new pwhistory object"}, "get": {"tags": ["policies_pwhistory"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/policies_pwhistory"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all pwhistory objects"}}, "/policies/pwhistory/{id}": {"put": {"tags": ["policies_pwhistory"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/policies_pwhistory"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/policies_pwhistory"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a pwhistory object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["policies_pwhistory"], "summary": "Delete a pwhistory object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["policies_pwhistory"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/policies_pwhistory"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a pwhistory object given its id"}}, "/policies/registry/": {"post": {"tags": ["policies_registry"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/policies_registry"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/policies_registry"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new registry object"}, "get": {"tags": ["policies_registry"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/policies_registry"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all registry objects"}}, "/policies/registry/{id}": {"put": {"tags": ["policies_registry"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/policies_registry"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/policies_registry"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a registry object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["policies_registry"], "summary": "Delete a registry object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["policies_registry"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/policies_registry"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a registry object given its id"}}, "/policies/release/": {"post": {"tags": ["policies_release"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/policies_release"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/policies_release"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new release object"}, "get": {"tags": ["policies_release"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/policies_release"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all release objects"}}, "/policies/release/{id}": {"put": {"tags": ["policies_release"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/policies_release"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/policies_release"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a release object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["policies_release"], "summary": "Delete a release object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["policies_release"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/policies_release"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a release object given its id"}}, "/policies/repositoryserver/": {"post": {"tags": ["policies_repositoryserver"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/policies_repositoryserver"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/policies_repositoryserver"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new repositoryserver object"}, "get": {"tags": ["policies_repositoryserver"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/policies_repositoryserver"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all repositoryserver objects"}}, "/policies/repositoryserver/{id}": {"put": {"tags": ["policies_repositoryserver"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/policies_repositoryserver"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/policies_repositoryserver"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a repositoryserver object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["policies_repositoryserver"], "summary": "Delete a repositoryserver object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["policies_repositoryserver"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/policies_repositoryserver"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a repositoryserver object given its id"}}, "/policies/repositorysync/": {"post": {"tags": ["policies_repositorysync"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/policies_repositorysync"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/policies_repositorysync"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new repositorysync object"}, "get": {"tags": ["policies_repositorysync"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/policies_repositorysync"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all repositorysync objects"}}, "/policies/repositorysync/{id}": {"put": {"tags": ["policies_repositorysync"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/policies_repositorysync"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/policies_repositorysync"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a repositorysync object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["policies_repositorysync"], "summary": "Delete a repositorysync object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["policies_repositorysync"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/policies_repositorysync"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a repositorysync object given its id"}}, "/policies/share_userquota/": {"post": {"tags": ["policies_share_userquota"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/policies_share_userquota"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/policies_share_userquota"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new share_userquota object"}, "get": {"tags": ["policies_share_userquota"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/policies_share_userquota"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all share_userquota objects"}}, "/policies/share_userquota/{id}": {"put": {"tags": ["policies_share_userquota"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/policies_share_userquota"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/policies_share_userquota"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a share_userquota object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["policies_share_userquota"], "summary": "Delete a share_userquota object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["policies_share_userquota"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/policies_share_userquota"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a share_userquota object given its id"}}, "/policies/slavepackages/": {"post": {"tags": ["policies_slavepackages"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/policies_slavepackages"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/policies_slavepackages"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new slavepackages object"}, "get": {"tags": ["policies_slavepackages"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/policies_slavepackages"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all slavepackages objects"}}, "/policies/slavepackages/{id}": {"put": {"tags": ["policies_slavepackages"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/policies_slavepackages"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/policies_slavepackages"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a slavepackages object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["policies_slavepackages"], "summary": "Delete a slavepackages object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["policies_slavepackages"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/policies_slavepackages"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a slavepackages object given its id"}}, "/policies/umc/": {"post": {"tags": ["policies_umc"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/policies_umc"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/policies_umc"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new umc object"}, "get": {"tags": ["policies_umc"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/policies_umc"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all umc objects"}}, "/policies/umc/{id}": {"put": {"tags": ["policies_umc"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/policies_umc"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/policies_umc"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a umc object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["policies_umc"], "summary": "Delete a umc object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["policies_umc"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/policies_umc"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a umc object given its id"}}, "/saml/idpconfig/": {"post": {"tags": ["saml_idpconfig"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/saml_idpconfig"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/saml_idpconfig"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new idpconfig object"}, "get": {"tags": ["saml_idpconfig"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/saml_idpconfig"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all idpconfig objects"}}, "/saml/idpconfig/{id}": {"put": {"tags": ["saml_idpconfig"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/saml_idpconfig"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/saml_idpconfig"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a idpconfig object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["saml_idpconfig"], "summary": "Delete a idpconfig object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["saml_idpconfig"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/saml_idpconfig"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a idpconfig object given its id"}}, "/saml/serviceprovider/": {"post": {"tags": ["saml_serviceprovider"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/saml_serviceprovider"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/saml_serviceprovider"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new serviceprovider object"}, "get": {"tags": ["saml_serviceprovider"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/saml_serviceprovider"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all serviceprovider objects"}}, "/saml/serviceprovider/{id}": {"put": {"tags": ["saml_serviceprovider"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/saml_serviceprovider"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/saml_serviceprovider"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a serviceprovider object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["saml_serviceprovider"], "summary": "Delete a serviceprovider object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["saml_serviceprovider"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/saml_serviceprovider"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a serviceprovider object given its id"}}, "/settings/cn/": {"post": {"tags": ["settings_cn"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/settings_cn"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/settings_cn"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new cn object"}, "get": {"tags": ["settings_cn"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/settings_cn"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all cn objects"}}, "/settings/cn/{id}": {"put": {"tags": ["settings_cn"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/settings_cn"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/settings_cn"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a cn object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["settings_cn"], "summary": "Delete a cn object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["settings_cn"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/settings_cn"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a cn object given its id"}}, "/settings/data/": {"post": {"tags": ["settings_data"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/settings_data"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/settings_data"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new data object"}, "get": {"tags": ["settings_data"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/settings_data"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all data objects"}}, "/settings/data/{id}": {"put": {"tags": ["settings_data"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/settings_data"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/settings_data"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a data object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["settings_data"], "summary": "Delete a data object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["settings_data"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/settings_data"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a data object given its id"}}, "/settings/default/": {"post": {"tags": ["settings_default"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/settings_default"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/settings_default"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new default object"}, "get": {"tags": ["settings_default"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/settings_default"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all default objects"}}, "/settings/default/{id}": {"put": {"tags": ["settings_default"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/settings_default"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/settings_default"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a default object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["settings_default"], "summary": "Delete a default object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["settings_default"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/settings_default"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a default object given its id"}}, "/settings/directory/": {"post": {"tags": ["settings_directory"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/settings_directory"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/settings_directory"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new directory object"}, "get": {"tags": ["settings_directory"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/settings_directory"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all directory objects"}}, "/settings/directory/{id}": {"put": {"tags": ["settings_directory"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/settings_directory"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/settings_directory"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a directory object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["settings_directory"], "summary": "Delete a directory object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["settings_directory"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/settings_directory"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a directory object given its id"}}, "/settings/extended_attribute/": {"post": {"tags": ["settings_extended_attribute"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/settings_extended_attribute"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/settings_extended_attribute"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new extended_attribute object"}, "get": {"tags": ["settings_extended_attribute"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/settings_extended_attribute"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all extended_attribute objects"}}, "/settings/extended_attribute/{id}": {"put": {"tags": ["settings_extended_attribute"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/settings_extended_attribute"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/settings_extended_attribute"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a extended_attribute object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["settings_extended_attribute"], "summary": "Delete a extended_attribute object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["settings_extended_attribute"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/settings_extended_attribute"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a extended_attribute object given its id"}}, "/settings/extended_options/": {"post": {"tags": ["settings_extended_options"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/settings_extended_options"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/settings_extended_options"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new extended_options object"}, "get": {"tags": ["settings_extended_options"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/settings_extended_options"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all extended_options objects"}}, "/settings/extended_options/{id}": {"put": {"tags": ["settings_extended_options"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/settings_extended_options"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/settings_extended_options"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a extended_options object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["settings_extended_options"], "summary": "Delete a extended_options object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["settings_extended_options"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/settings_extended_options"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a extended_options object given its id"}}, "/settings/ldapacl/": {"post": {"tags": ["settings_ldapacl"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/settings_ldapacl"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/settings_ldapacl"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new ldapacl object"}, "get": {"tags": ["settings_ldapacl"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/settings_ldapacl"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all ldapacl objects"}}, "/settings/ldapacl/{id}": {"put": {"tags": ["settings_ldapacl"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/settings_ldapacl"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/settings_ldapacl"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a ldapacl object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["settings_ldapacl"], "summary": "Delete a ldapacl object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["settings_ldapacl"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/settings_ldapacl"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a ldapacl object given its id"}}, "/settings/ldapschema/": {"post": {"tags": ["settings_ldapschema"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/settings_ldapschema"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/settings_ldapschema"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new ldapschema object"}, "get": {"tags": ["settings_ldapschema"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/settings_ldapschema"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all ldapschema objects"}}, "/settings/ldapschema/{id}": {"put": {"tags": ["settings_ldapschema"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/settings_ldapschema"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/settings_ldapschema"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a ldapschema object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["settings_ldapschema"], "summary": "Delete a ldapschema object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["settings_ldapschema"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/settings_ldapschema"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a ldapschema object given its id"}}, "/settings/license/": {"post": {"tags": ["settings_license"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/settings_license"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/settings_license"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new license object"}, "get": {"tags": ["settings_license"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/settings_license"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all license objects"}}, "/settings/license/{id}": {"put": {"tags": ["settings_license"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/settings_license"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/settings_license"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a license object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["settings_license"], "summary": "Delete a license object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["settings_license"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/settings_license"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a license object given its id"}}, "/settings/lock/": {"post": {"tags": ["settings_lock"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/settings_lock"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/settings_lock"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new lock object"}, "get": {"tags": ["settings_lock"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/settings_lock"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all lock objects"}}, "/settings/lock/{id}": {"put": {"tags": ["settings_lock"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/settings_lock"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/settings_lock"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a lock object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["settings_lock"], "summary": "Delete a lock object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["settings_lock"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/settings_lock"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a lock object given its id"}}, "/settings/packages/": {"post": {"tags": ["settings_packages"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/settings_packages"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/settings_packages"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new packages object"}, "get": {"tags": ["settings_packages"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/settings_packages"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all packages objects"}}, "/settings/packages/{id}": {"put": {"tags": ["settings_packages"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/settings_packages"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/settings_packages"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a packages object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["settings_packages"], "summary": "Delete a packages object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["settings_packages"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/settings_packages"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a packages object given its id"}}, "/settings/portal/": {"post": {"tags": ["settings_portal"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/settings_portal"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/settings_portal"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new portal object"}, "get": {"tags": ["settings_portal"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/settings_portal"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all portal objects"}}, "/settings/portal/{id}": {"put": {"tags": ["settings_portal"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/settings_portal"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/settings_portal"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a portal object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["settings_portal"], "summary": "Delete a portal object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["settings_portal"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/settings_portal"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a portal object given its id"}}, "/settings/portal_category/": {"post": {"tags": ["settings_portal_category"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/settings_portal_category"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/settings_portal_category"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new portal_category object"}, "get": {"tags": ["settings_portal_category"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/settings_portal_category"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all portal_category objects"}}, "/settings/portal_category/{id}": {"put": {"tags": ["settings_portal_category"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/settings_portal_category"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/settings_portal_category"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a portal_category object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["settings_portal_category"], "summary": "Delete a portal_category object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["settings_portal_category"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/settings_portal_category"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a portal_category object given its id"}}, "/settings/portal_entry/": {"post": {"tags": ["settings_portal_entry"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/settings_portal_entry"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/settings_portal_entry"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new portal_entry object"}, "get": {"tags": ["settings_portal_entry"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/settings_portal_entry"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all portal_entry objects"}}, "/settings/portal_entry/{id}": {"put": {"tags": ["settings_portal_entry"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/settings_portal_entry"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/settings_portal_entry"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a portal_entry object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["settings_portal_entry"], "summary": "Delete a portal_entry object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["settings_portal_entry"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/settings_portal_entry"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a portal_entry object given its id"}}, "/settings/printermodel/": {"post": {"tags": ["settings_printermodel"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/settings_printermodel"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/settings_printermodel"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new printermodel object"}, "get": {"tags": ["settings_printermodel"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/settings_printermodel"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all printermodel objects"}}, "/settings/printermodel/{id}": {"put": {"tags": ["settings_printermodel"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/settings_printermodel"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/settings_printermodel"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a printermodel object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["settings_printermodel"], "summary": "Delete a printermodel object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["settings_printermodel"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/settings_printermodel"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a printermodel object given its id"}}, "/settings/printeruri/": {"post": {"tags": ["settings_printeruri"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/settings_printeruri"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/settings_printeruri"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new printeruri object"}, "get": {"tags": ["settings_printeruri"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/settings_printeruri"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all printeruri objects"}}, "/settings/printeruri/{id}": {"put": {"tags": ["settings_printeruri"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/settings_printeruri"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/settings_printeruri"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a printeruri object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["settings_printeruri"], "summary": "Delete a printeruri object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["settings_printeruri"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/settings_printeruri"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a printeruri object given its id"}}, "/settings/prohibited_username/": {"post": {"tags": ["settings_prohibited_username"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/settings_prohibited_username"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/settings_prohibited_username"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new prohibited_username object"}, "get": {"tags": ["settings_prohibited_username"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/settings_prohibited_username"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all prohibited_username objects"}}, "/settings/prohibited_username/{id}": {"put": {"tags": ["settings_prohibited_username"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/settings_prohibited_username"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/settings_prohibited_username"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a prohibited_username object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["settings_prohibited_username"], "summary": "Delete a prohibited_username object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["settings_prohibited_username"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/settings_prohibited_username"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a prohibited_username object given its id"}}, "/settings/sambaconfig/": {"post": {"tags": ["settings_sambaconfig"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/settings_sambaconfig"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/settings_sambaconfig"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new sambaconfig object"}, "get": {"tags": ["settings_sambaconfig"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/settings_sambaconfig"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all sambaconfig objects"}}, "/settings/sambaconfig/{id}": {"put": {"tags": ["settings_sambaconfig"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/settings_sambaconfig"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/settings_sambaconfig"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a sambaconfig object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["settings_sambaconfig"], "summary": "Delete a sambaconfig object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["settings_sambaconfig"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/settings_sambaconfig"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a sambaconfig object given its id"}}, "/settings/sambadomain/": {"post": {"tags": ["settings_sambadomain"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/settings_sambadomain"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/settings_sambadomain"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new sambadomain object"}, "get": {"tags": ["settings_sambadomain"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/settings_sambadomain"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all sambadomain objects"}}, "/settings/sambadomain/{id}": {"put": {"tags": ["settings_sambadomain"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/settings_sambadomain"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/settings_sambadomain"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a sambadomain object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["settings_sambadomain"], "summary": "Delete a sambadomain object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["settings_sambadomain"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/settings_sambadomain"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a sambadomain object given its id"}}, "/settings/service/": {"post": {"tags": ["settings_service"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/settings_service"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/settings_service"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new service object"}, "get": {"tags": ["settings_service"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/settings_service"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all service objects"}}, "/settings/service/{id}": {"put": {"tags": ["settings_service"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/settings_service"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/settings_service"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a service object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["settings_service"], "summary": "Delete a service object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["settings_service"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/settings_service"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a service object given its id"}}, "/settings/syntax/": {"post": {"tags": ["settings_syntax"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/settings_syntax"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/settings_syntax"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new syntax object"}, "get": {"tags": ["settings_syntax"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/settings_syntax"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all syntax objects"}}, "/settings/syntax/{id}": {"put": {"tags": ["settings_syntax"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/settings_syntax"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/settings_syntax"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a syntax object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["settings_syntax"], "summary": "Delete a syntax object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["settings_syntax"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/settings_syntax"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a syntax object given its id"}}, "/settings/udm_hook/": {"post": {"tags": ["settings_udm_hook"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/settings_udm_hook"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/settings_udm_hook"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new udm_hook object"}, "get": {"tags": ["settings_udm_hook"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/settings_udm_hook"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all udm_hook objects"}}, "/settings/udm_hook/{id}": {"put": {"tags": ["settings_udm_hook"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/settings_udm_hook"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/settings_udm_hook"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a udm_hook object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["settings_udm_hook"], "summary": "Delete a udm_hook object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["settings_udm_hook"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/settings_udm_hook"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a udm_hook object given its id"}}, "/settings/udm_module/": {"post": {"tags": ["settings_udm_module"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/settings_udm_module"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/settings_udm_module"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new udm_module object"}, "get": {"tags": ["settings_udm_module"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/settings_udm_module"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all udm_module objects"}}, "/settings/udm_module/{id}": {"put": {"tags": ["settings_udm_module"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/settings_udm_module"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/settings_udm_module"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a udm_module object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["settings_udm_module"], "summary": "Delete a udm_module object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["settings_udm_module"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/settings_udm_module"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a udm_module object given its id"}}, "/settings/udm_syntax/": {"post": {"tags": ["settings_udm_syntax"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/settings_udm_syntax"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/settings_udm_syntax"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new udm_syntax object"}, "get": {"tags": ["settings_udm_syntax"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/settings_udm_syntax"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all udm_syntax objects"}}, "/settings/udm_syntax/{id}": {"put": {"tags": ["settings_udm_syntax"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/settings_udm_syntax"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/settings_udm_syntax"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a udm_syntax object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["settings_udm_syntax"], "summary": "Delete a udm_syntax object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["settings_udm_syntax"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/settings_udm_syntax"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a udm_syntax object given its id"}}, "/settings/umc_operationset/": {"post": {"tags": ["settings_umc_operationset"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/settings_umc_operationset"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/settings_umc_operationset"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new umc_operationset object"}, "get": {"tags": ["settings_umc_operationset"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/settings_umc_operationset"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all umc_operationset objects"}}, "/settings/umc_operationset/{id}": {"put": {"tags": ["settings_umc_operationset"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/settings_umc_operationset"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/settings_umc_operationset"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a umc_operationset object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["settings_umc_operationset"], "summary": "Delete a umc_operationset object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["settings_umc_operationset"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/settings_umc_operationset"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a umc_operationset object given its id"}}, "/settings/usertemplate/": {"post": {"tags": ["settings_usertemplate"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/settings_usertemplate"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/settings_usertemplate"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new usertemplate object"}, "get": {"tags": ["settings_usertemplate"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/settings_usertemplate"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all usertemplate objects"}}, "/settings/usertemplate/{id}": {"put": {"tags": ["settings_usertemplate"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/settings_usertemplate"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/settings_usertemplate"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a usertemplate object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["settings_usertemplate"], "summary": "Delete a usertemplate object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["settings_usertemplate"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/settings_usertemplate"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a usertemplate object given its id"}}, "/settings/xconfig_choices/": {"post": {"tags": ["settings_xconfig_choices"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/settings_xconfig_choices"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/settings_xconfig_choices"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new xconfig_choices object"}, "get": {"tags": ["settings_xconfig_choices"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/settings_xconfig_choices"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all xconfig_choices objects"}}, "/settings/xconfig_choices/{id}": {"put": {"tags": ["settings_xconfig_choices"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/settings_xconfig_choices"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/settings_xconfig_choices"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a xconfig_choices object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["settings_xconfig_choices"], "summary": "Delete a xconfig_choices object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["settings_xconfig_choices"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/settings_xconfig_choices"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a xconfig_choices object given its id"}}, "/shares/printer/": {"post": {"tags": ["shares_printer"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/shares_printer"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/shares_printer"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new printer object"}, "get": {"tags": ["shares_printer"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/shares_printer"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all printer objects"}}, "/shares/printer/{id}": {"put": {"tags": ["shares_printer"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/shares_printer"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/shares_printer"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a printer object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["shares_printer"], "summary": "Delete a printer object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["shares_printer"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/shares_printer"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a printer object given its id"}}, "/shares/printergroup/": {"post": {"tags": ["shares_printergroup"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/shares_printergroup"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/shares_printergroup"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new printergroup object"}, "get": {"tags": ["shares_printergroup"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/shares_printergroup"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all printergroup objects"}}, "/shares/printergroup/{id}": {"put": {"tags": ["shares_printergroup"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/shares_printergroup"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/shares_printergroup"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a printergroup object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["shares_printergroup"], "summary": "Delete a printergroup object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["shares_printergroup"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/shares_printergroup"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a printergroup object given its id"}}, "/shares/share/": {"post": {"tags": ["shares_share"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/shares_share"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/shares_share"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new share object"}, "get": {"tags": ["shares_share"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/shares_share"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all share objects"}}, "/shares/share/{id}": {"put": {"tags": ["shares_share"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/shares_share"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/shares_share"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a share object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["shares_share"], "summary": "Delete a share object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["shares_share"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/shares_share"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a share object given its id"}}, "/users/contact/": {"post": {"tags": ["users_contact"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/users_contact"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/users_contact"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new contact object"}, "get": {"tags": ["users_contact"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/users_contact"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all contact objects"}}, "/users/contact/{id}": {"put": {"tags": ["users_contact"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/users_contact"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/users_contact"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a contact object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["users_contact"], "summary": "Delete a contact object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["users_contact"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/users_contact"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a contact object given its id"}}, "/users/ldap/": {"post": {"tags": ["users_ldap"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/users_ldap"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/users_ldap"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new ldap object"}, "get": {"tags": ["users_ldap"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/users_ldap"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all ldap objects"}}, "/users/ldap/{id}": {"put": {"tags": ["users_ldap"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/users_ldap"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/users_ldap"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a ldap object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["users_ldap"], "summary": "Delete a ldap object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["users_ldap"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/users_ldap"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a ldap object given its id"}}, "/users/user/": {"post": {"tags": ["users_user"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/users_user"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/users_user"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new user object"}, "get": {"tags": ["users_user"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/users_user"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all user objects"}}, "/users/user/{id}": {"put": {"tags": ["users_user"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/users_user"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/users_user"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a user object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["users_user"], "summary": "Delete a user object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["users_user"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/users_user"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a user object given its id"}}, "/uvmm/cloudconnection/": {"post": {"tags": ["uvmm_cloudconnection"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/uvmm_cloudconnection"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/uvmm_cloudconnection"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new cloudconnection object"}, "get": {"tags": ["uvmm_cloudconnection"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/uvmm_cloudconnection"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all cloudconnection objects"}}, "/uvmm/cloudconnection/{id}": {"put": {"tags": ["uvmm_cloudconnection"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/uvmm_cloudconnection"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/uvmm_cloudconnection"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a cloudconnection object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["uvmm_cloudconnection"], "summary": "Delete a cloudconnection object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["uvmm_cloudconnection"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/uvmm_cloudconnection"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a cloudconnection object given its id"}}, "/uvmm/cloudtype/": {"post": {"tags": ["uvmm_cloudtype"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/uvmm_cloudtype"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/uvmm_cloudtype"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new cloudtype object"}, "get": {"tags": ["uvmm_cloudtype"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/uvmm_cloudtype"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all cloudtype objects"}}, "/uvmm/cloudtype/{id}": {"put": {"tags": ["uvmm_cloudtype"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/uvmm_cloudtype"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/uvmm_cloudtype"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a cloudtype object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["uvmm_cloudtype"], "summary": "Delete a cloudtype object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["uvmm_cloudtype"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/uvmm_cloudtype"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a cloudtype object given its id"}}, "/uvmm/info/": {"post": {"tags": ["uvmm_info"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/uvmm_info"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/uvmm_info"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new info object"}, "get": {"tags": ["uvmm_info"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/uvmm_info"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all info objects"}}, "/uvmm/info/{id}": {"put": {"tags": ["uvmm_info"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/uvmm_info"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/uvmm_info"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a info object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["uvmm_info"], "summary": "Delete a info object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["uvmm_info"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/uvmm_info"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a info object given its id"}}, "/uvmm/profile/": {"post": {"tags": ["uvmm_profile"], "operationId": "create", "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/uvmm_profile"}}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/uvmm_profile"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Create a new profile object"}, "get": {"tags": ["uvmm_profile"], "operationId": "list", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/uvmm_profile"}, "type": "array"}}}, "parameters": [{"type": "string", "description": "LDAP filter [optional].", "name": "filter", "in": "header"}, {"type": "string", "description": "LDAP subtree to search [optional].", "name": "base", "in": "header"}, {"type": "string", "description": "LDAP scope to apply [optional].", "name": "scope", "in": "header"}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "List all profile objects"}}, "/uvmm/profile/{id}": {"put": {"tags": ["uvmm_profile"], "operationId": "modify", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/uvmm_profile"}}, "404": {"description": "Object not found"}}, "parameters": [{"required": true, "in": "body", "name": "payload", "schema": {"$ref": "#/definitions/uvmm_profile"}}, {"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Update a profile object given its id"}, "delete": {"operationId": "delete", "responses": {"204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "tags": ["uvmm_profile"], "summary": "Delete a profile object given its id"}, "parameters": [{"required": true, "type": "string", "description": "The objects ID (username, group name etc).", "name": "id", "in": "path"}], "get": {"tags": ["uvmm_profile"], "operationId": "get", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/uvmm_profile"}}, "404": {"description": "Object not found"}}, "parameters": [{"description": "An optional fields mask", "format": "mask", "type": "string", "name": "X-Fields", "in": "header"}], "summary": "Fetch a profile object given its id"}}}, "responses": {"MaskError": {"description": "When any error occurs on mask"}, "ParseError": {"description": "When a mask can't be parsed"}}, "tags": [{"name": "appcenter_app", "description": "appcenter/app related operations"}, {"name": "computers_computer", "description": "computers/computer related operations"}, {"name": "computers_domaincontroller_backup", "description": "computers/domaincontroller_backup related operations"}, {"name": "computers_domaincontroller_master", "description": "computers/domaincontroller_master related operations"}, {"name": "computers_domaincontroller_slave", "description": "computers/domaincontroller_slave related operations"}, {"name": "computers_ipmanagedclient", "description": "computers/ipmanagedclient related operations"}, {"name": "computers_linux", "description": "computers/linux related operations"}, {"name": "computers_macos", "description": "computers/macos related operations"}, {"name": "computers_memberserver", "description": "computers/memberserver related operations"}, {"name": "computers_trustaccount", "description": "computers/trustaccount related operations"}, {"name": "computers_ubuntu", "description": "computers/ubuntu related operations"}, {"name": "computers_windows", "description": "computers/windows related operations"}, {"name": "computers_windows_domaincontroller", "description": "computers/windows_domaincontroller related operations"}, {"name": "container_cn", "description": "container/cn related operations"}, {"name": "container_dc", "description": "container/dc related operations"}, {"name": "container_ou", "description": "container/ou related operations"}, {"name": "dhcp_host", "description": "dhcp/host related operations"}, {"name": "dhcp_server", "description": "dhcp/server related operations"}, {"name": "dhcp_service", "description": "dhcp/service related operations"}, {"name": "dhcp_shared", "description": "dhcp/shared related operations"}, {"name": "dhcp_subnet", "description": "dhcp/subnet related operations"}, {"name": "dns_alias", "description": "dns/alias related operations"}, {"name": "dns_forward_zone", "description": "dns/forward_zone related operations"}, {"name": "dns_host_record", "description": "dns/host_record related operations"}, {"name": "dns_ns_record", "description": "dns/ns_record related operations"}, {"name": "dns_ptr_record", "description": "dns/ptr_record related operations"}, {"name": "dns_reverse_zone", "description": "dns/reverse_zone related operations"}, {"name": "dns_srv_record", "description": "dns/srv_record related operations"}, {"name": "dns_txt_record", "description": "dns/txt_record related operations"}, {"name": "groups_group", "description": "groups/group related operations"}, {"name": "kerberos_kdcentry", "description": "kerberos/kdcentry related operations"}, {"name": "mail_domain", "description": "mail/domain related operations"}, {"name": "mail_folder", "description": "mail/folder related operations"}, {"name": "mail_lists", "description": "mail/lists related operations"}, {"name": "nagios_nagios", "description": "nagios/nagios related operations"}, {"name": "nagios_service", "description": "nagios/service related operations"}, {"name": "nagios_timeperiod", "description": "nagios/timeperiod related operations"}, {"name": "networks_network", "description": "networks/network related operations"}, {"name": "policies_admin_container", "description": "policies/admin_container related operations"}, {"name": "policies_autostart", "description": "policies/autostart related operations"}, {"name": "policies_desktop", "description": "policies/desktop related operations"}, {"name": "policies_dhcp_boot", "description": "policies/dhcp_boot related operations"}, {"name": "policies_dhcp_dns", "description": "policies/dhcp_dns related operations"}, {"name": "policies_dhcp_dnsupdate", "description": "policies/dhcp_dnsupdate related operations"}, {"name": "policies_dhcp_leasetime", "description": "policies/dhcp_leasetime related operations"}, {"name": "policies_dhcp_netbios", "description": "policies/dhcp_netbios related operations"}, {"name": "policies_dhcp_routing", "description": "policies/dhcp_routing related operations"}, {"name": "policies_dhcp_scope", "description": "policies/dhcp_scope related operations"}, {"name": "policies_dhcp_statements", "description": "policies/dhcp_statements related operations"}, {"name": "policies_ldapserver", "description": "policies/ldapserver related operations"}, {"name": "policies_maintenance", "description": "policies/maintenance related operations"}, {"name": "policies_masterpackages", "description": "policies/masterpackages related operations"}, {"name": "policies_memberpackages", "description": "policies/memberpackages related operations"}, {"name": "policies_nfsmounts", "description": "policies/nfsmounts related operations"}, {"name": "policies_print_quota", "description": "policies/print_quota related operations"}, {"name": "policies_printserver", "description": "policies/printserver related operations"}, {"name": "policies_pwhistory", "description": "policies/pwhistory related operations"}, {"name": "policies_registry", "description": "policies/registry related operations"}, {"name": "policies_release", "description": "policies/release related operations"}, {"name": "policies_repositoryserver", "description": "policies/repositoryserver related operations"}, {"name": "policies_repositorysync", "description": "policies/repositorysync related operations"}, {"name": "policies_share_userquota", "description": "policies/share_userquota related operations"}, {"name": "policies_slavepackages", "description": "policies/slavepackages related operations"}, {"name": "policies_umc", "description": "policies/umc related operations"}, {"name": "saml_idpconfig", "description": "saml/idpconfig related operations"}, {"name": "saml_serviceprovider", "description": "saml/serviceprovider related operations"}, {"name": "settings_cn", "description": "settings/cn related operations"}, {"name": "settings_data", "description": "settings/data related operations"}, {"name": "settings_default", "description": "settings/default related operations"}, {"name": "settings_directory", "description": "settings/directory related operations"}, {"name": "settings_extended_attribute", "description": "settings/extended_attribute related operations"}, {"name": "settings_extended_options", "description": "settings/extended_options related operations"}, {"name": "settings_ldapacl", "description": "settings/ldapacl related operations"}, {"name": "settings_ldapschema", "description": "settings/ldapschema related operations"}, {"name": "settings_license", "description": "settings/license related operations"}, {"name": "settings_lock", "description": "settings/lock related operations"}, {"name": "settings_packages", "description": "settings/packages related operations"}, {"name": "settings_portal", "description": "settings/portal related operations"}, {"name": "settings_portal_category", "description": "settings/portal_category related operations"}, {"name": "settings_portal_entry", "description": "settings/portal_entry related operations"}, {"name": "settings_printermodel", "description": "settings/printermodel related operations"}, {"name": "settings_printeruri", "description": "settings/printeruri related operations"}, {"name": "settings_prohibited_username", "description": "settings/prohibited_username related operations"}, {"name": "settings_sambaconfig", "description": "settings/sambaconfig related operations"}, {"name": "settings_sambadomain", "description": "settings/sambadomain related operations"}, {"name": "settings_service", "description": "settings/service related operations"}, {"name": "settings_syntax", "description": "settings/syntax related operations"}, {"name": "settings_udm_hook", "description": "settings/udm_hook related operations"}, {"name": "settings_udm_module", "description": "settings/udm_module related operations"}, {"name": "settings_udm_syntax", "description": "settings/udm_syntax related operations"}, {"name": "settings_umc_operationset", "description": "settings/umc_operationset related operations"}, {"name": "settings_usertemplate", "description": "settings/usertemplate related operations"}, {"name": "settings_xconfig_choices", "description": "settings/xconfig_choices related operations"}, {"name": "shares_printer", "description": "shares/printer related operations"}, {"name": "shares_printergroup", "description": "shares/printergroup related operations"}, {"name": "shares_share", "description": "shares/share related operations"}, {"name": "users_contact", "description": "users/contact related operations"}, {"name": "users_ldap", "description": "users/ldap related operations"}, {"name": "users_user", "description": "users/user related operations"}, {"name": "uvmm_cloudconnection", "description": "uvmm/cloudconnection related operations"}, {"name": "uvmm_cloudtype", "description": "uvmm/cloudtype related operations"}, {"name": "uvmm_info", "description": "uvmm/info related operations"}, {"name": "uvmm_profile", "description": "uvmm/profile related operations"}], "basePath": "/udm", "produces": ["application/json"], "securityDefinitions": {"basic": {"type": "basic"}}, "definitions": {"AppcenterAppProperties": {"type": "object", "properties": {"websiteMaintainer": {"items": {"type": "string"}, "type": "array"}, "maintainer": {"type": "string"}, "version": {"type": "string"}, "shortDescription": {"type": "object"}, "id": {"type": "string"}, "defaultPackages": {"items": {"type": "string"}, "type": "array"}, "category": {"items": {"type": "string"}, "type": "array"}, "umcModuleFlavor": {"type": "string"}, "webInterface": {"type": "string"}, "icon": {"type": "string"}, "conflictingSystemPackages": {"items": {"type": "string"}, "type": "array"}, "website": {"type": "object"}, "vendor": {"type": "string"}, "longDescription": {"type": "object"}, "defaultPackagesMaster": {"items": {"type": "string"}, "type": "array"}, "conflictingApps": {"items": {"type": "string"}, "type": "array"}, "websiteVendor": {"type": "object"}, "serverRole": {"items": {"type": "string"}, "type": "array"}, "name": {"type": "object"}, "umcModuleName": {"type": "string"}, "server": {"items": {"type": "string"}, "type": "array"}, "contact": {"type": "string"}, "webInterfaceName": {"type": "string"}}}, "policies_umc": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/PoliciesUmcProperties"}}}]}, "computers_ipmanagedclient": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/ComputersIpmanagedclientProperties"}}}]}, "settings_udm_syntax": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/SettingsUdm_syntaxProperties"}}}]}, "SettingsCnProperties": {"type": "object", "properties": {"name": {"type": "string"}}}, "policies_pwhistory": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/PoliciesPwhistoryProperties"}}}]}, "PoliciesDhcp_routingProperties": {"type": "object", "properties": {"ldapFilter": {"type": "string"}, "name": {"type": "string"}, "emptyAttributes": {"items": {"type": "string"}, "type": "array"}, "routers": {"items": {"type": "string"}, "type": "array"}, "prohibitedObjectClasses": {"items": {"type": "string"}, "type": "array"}, "requiredObjectClasses": {"items": {"type": "string"}, "type": "array"}, "fixedAttributes": {"items": {"type": "string"}, "type": "array"}}}, "PoliciesDhcp_dnsProperties": {"type": "object", "properties": {"ldapFilter": {"type": "string"}, "name": {"type": "string"}, "emptyAttributes": {"items": {"type": "string"}, "type": "array"}, "domain_name_servers": {"items": {"type": "string"}, "type": "array"}, "domain_name": {"type": "string"}, "prohibitedObjectClasses": {"items": {"type": "string"}, "type": "array"}, "requiredObjectClasses": {"items": {"type": "string"}, "type": "array"}, "fixedAttributes": {"items": {"type": "string"}, "type": "array"}}}, "DnsForward_zoneProperties": {"type": "object", "properties": {"a": {"items": {"type": "string"}, "type": "array"}, "retry": {"type": "string"}, "zone": {"type": "string"}, "zonettl": {"type": "string"}, "refresh": {"type": "string"}, "contact": {"type": "string"}, "expire": {"type": "string"}, "ttl": {"type": "string"}, "nameserver": {"items": {"type": "string"}, "type": "array"}, "txt": {"items": {"type": "string"}, "type": "array"}, "mx": {"items": {"type": "string"}, "type": "array"}, "serial": {"type": "string"}}}, "policies_dhcp_netbios": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/PoliciesDhcp_netbiosProperties"}}}]}, "SettingsLockProperties": {"type": "object", "properties": {"locktime": {"type": "string"}, "name": {"type": "string"}}}, "ComputersComputerProperties": {"type": "object", "properties": {"description": {"type": "string"}, "inventoryNumber": {"items": {"type": "string"}, "type": "array"}, "ip": {"items": {"type": "string"}, "type": "array"}, "fqdn": {"type": "string"}, "mac": {"items": {"type": "string"}, "type": "array"}, "dnsAlias": {"items": {"type": "string"}, "type": "array"}, "name": {"type": "string"}}}, "ContainerCnProperties": {"type": "object", "properties": {"printerPath": {"type": "string"}, "userPath": {"type": "string"}, "description": {"type": "string"}, "name": {"type": "string"}, "mailPath": {"type": "string"}, "computerPath": {"type": "string"}, "networkPath": {"type": "string"}, "groupPath": {"type": "string"}, "licensePath": {"type": "string"}, "dhcpPath": {"type": "string"}, "policyPath": {"type": "string"}, "sharePath": {"type": "string"}, "dnsPath": {"type": "string"}}}, "MailListsProperties": {"type": "object", "properties": {"description": {"type": "string"}, "allowedEmailUsers": {"items": {"type": "string"}, "type": "array"}, "members": {"items": {"type": "string"}, "type": "array"}, "allowedEmailGroups": {"items": {"type": "string"}, "type": "array"}, "mailAddress": {"type": "string"}, "name": {"type": "string"}}}, "container_cn": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/ContainerCnProperties"}}}]}, "SettingsLdapaclProperties": {"type": "object", "properties": {"name": {"type": "string"}, "package": {"type": "string"}, "filename": {"type": "string"}, "ucsversionstart": {"type": "string"}, "ucsversionend": {"type": "string"}, "active": {"type": "string"}, "packageversion": {"type": "string"}, "data": {"type": "string"}, "appidentifier": {"items": {"type": "string"}, "type": "array"}}}, "PoliciesRepositoryserverProperties": {"type": "object", "properties": {"ldapFilter": {"type": "string"}, "name": {"type": "string"}, "emptyAttributes": {"items": {"type": "string"}, "type": "array"}, "repositoryServer": {"type": "string"}, "prohibitedObjectClasses": {"items": {"type": "string"}, "type": "array"}, "requiredObjectClasses": {"items": {"type": "string"}, "type": "array"}, "fixedAttributes": {"items": {"type": "string"}, "type": "array"}}}, "NetworksNetworkProperties": {"type": "object", "properties": {"name": {"type": "string"}, "dnsEntryZoneReverse": {"type": "string"}, "netmask": {"type": "string"}, "dhcpEntryZone": {"type": "string"}, "nextIp": {"type": "string"}, "dnsEntryZoneForward": {"type": "string"}, "ipRange": {"items": {"type": "string"}, "type": "array"}, "network": {"type": "string"}}}, "users_user": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/UsersUserProperties"}}}]}, "uvmm_cloudconnection": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/UvmmCloudconnectionProperties"}}}]}, "shares_share": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/SharesShareProperties"}}}]}, "MailFolderProperties": {"type": "object", "properties": {"sharedFolderUserACL": {"type": "object"}, "mailDomain": {"type": "string"}, "sharedFolderGroupACL": {"type": "object"}, "mailPrimaryAddress": {"type": "string"}, "mailQuota": {"type": "integer"}, "mailHomeServer": {"type": "string"}, "name": {"type": "string"}}}, "SettingsSyntaxProperties": {"type": "object", "properties": {"viewonly": {"type": "string"}, "description": {"type": "string"}, "attribute": {"items": {"type": "string"}, "type": "array"}, "ldapvalue": {"type": "string"}, "ldapattribute": {"items": {"type": "string"}, "type": "array"}, "value": {"type": "string"}, "filter": {"type": "string"}, "base": {"type": "string"}, "addEmptyValue": {"type": "string"}, "name": {"type": "string"}}}, "uvmm_cloudtype": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/UvmmCloudtypeProperties"}}}]}, "mail_lists": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/MailListsProperties"}}}]}, "KerberosKdcentryProperties": {"type": "object", "properties": {"keyVersionNumber": {"type": "string"}, "description": {"type": "string"}, "name": {"type": "string"}, "maxLife": {"type": "string"}, "generateRandomPassword": {"type": "string"}, "maxRenew": {"type": "string"}, "password": {"type": "string"}, "KDCFlags": {"type": "string"}}}, "PoliciesNfsmountsProperties": {"type": "object", "properties": {"ldapFilter": {"type": "string"}, "name": {"type": "string"}, "emptyAttributes": {"items": {"type": "string"}, "type": "array"}, "prohibitedObjectClasses": {"items": {"type": "string"}, "type": "array"}, "requiredObjectClasses": {"items": {"type": "string"}, "type": "array"}, "nfsMounts": {"items": {"type": "string"}, "type": "array"}, "fixedAttributes": {"items": {"type": "string"}, "type": "array"}}}, "policies_release": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/PoliciesReleaseProperties"}}}]}, "networks_network": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/NetworksNetworkProperties"}}}]}, "settings_license": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/SettingsLicenseProperties"}}}]}, "policies_share_userquota": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/PoliciesShare_userquotaProperties"}}}]}, "UvmmCloudtypeProperties": {"type": "object", "properties": {"name": {"type": "string"}}}, "PoliciesDhcp_scopeProperties": {"type": "object", "properties": {"ldapFilter": {"type": "string"}, "name": {"type": "string"}, "emptyAttributes": {"items": {"type": "string"}, "type": "array"}, "duplicates": {"type": "string"}, "declines": {"type": "string"}, "bootp": {"type": "string"}, "prohibitedObjectClasses": {"items": {"type": "string"}, "type": "array"}, "requiredObjectClasses": {"items": {"type": "string"}, "type": "array"}, "booting": {"type": "string"}, "fixedAttributes": {"items": {"type": "string"}, "type": "array"}, "scopeUnknownClients": {"type": "string"}}}, "settings_printermodel": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/SettingsPrintermodelProperties"}}}]}, "PoliciesDesktopProperties": {"type": "object", "properties": {"profile": {"items": {"type": "string"}, "type": "array"}, "ldapFilter": {"type": "string"}, "name": {"type": "string"}, "language": {"type": "string"}, "emptyAttributes": {"items": {"type": "string"}, "type": "array"}, "logoutScripts": {"items": {"type": "string"}, "type": "array"}, "prohibitedObjectClasses": {"items": {"type": "string"}, "type": "array"}, "requiredObjectClasses": {"items": {"type": "string"}, "type": "array"}, "logonScripts": {"items": {"type": "string"}, "type": "array"}, "fixedAttributes": {"items": {"type": "string"}, "type": "array"}}}, "settings_service": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/SettingsServiceProperties"}}}]}, "PoliciesSlavepackagesProperties": {"type": "object", "properties": {"ldapFilter": {"type": "string"}, "name": {"type": "string"}, "slavePackagesRemove": {"items": {"type": "string"}, "type": "array"}, "emptyAttributes": {"items": {"type": "string"}, "type": "array"}, "prohibitedObjectClasses": {"items": {"type": "string"}, "type": "array"}, "requiredObjectClasses": {"items": {"type": "string"}, "type": "array"}, "fixedAttributes": {"items": {"type": "string"}, "type": "array"}, "slavePackages": {"items": {"type": "string"}, "type": "array"}}}, "settings_usertemplate": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/SettingsUsertemplateProperties"}}}]}, "PoliciesMaintenanceProperties": {"type": "object", "properties": {"ldapFilter": {"type": "string"}, "name": {"type": "string"}, "hour": {"items": {"type": "string"}, "type": "array"}, "emptyAttributes": {"items": {"type": "string"}, "type": "array"}, "startup": {"type": "string"}, "reboot": {"type": "string"}, "prohibitedObjectClasses": {"items": {"type": "string"}, "type": "array"}, "month": {"items": {"type": "string"}, "type": "array"}, "cron": {"type": "string"}, "weekday": {"items": {"type": "string"}, "type": "array"}, "shutdown": {"type": "string"}, "fixedAttributes": {"items": {"type": "string"}, "type": "array"}, "requiredObjectClasses": {"items": {"type": "string"}, "type": "array"}, "day": {"items": {"type": "string"}, "type": "array"}, "minute": {"items": {"type": "string"}, "type": "array"}}}, "dns_forward_zone": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/DnsForward_zoneProperties"}}}]}, "settings_default": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/SettingsDefaultProperties"}}}]}, "shares_printer": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/SharesPrinterProperties"}}}]}, "computers_memberserver": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/ComputersMemberserverProperties"}}}]}, "MailDomainProperties": {"type": "object", "properties": {"name": {"type": "string"}}}, "ComputersDomaincontroller_slaveProperties": {"type": "object", "properties": {"domain": {"type": "string"}, "ManageableBy": {"items": {"type": "string"}, "type": "array"}, "nagiosContactEmail": {"items": {"type": "string"}, "type": "array"}, "ip": {"items": {"type": "string"}, "type": "array"}, "nagiosParents": {"items": {"type": "string"}, "type": "array"}, "nagiosServices": {"items": {"type": "string"}, "type": "array"}, "network": {"type": "string"}, "service": {"items": {"type": "string"}, "type": "array"}, "reinstalloption": {"type": "string"}, "unixhome": {"type": "string"}, "dnsAlias": {"items": {"type": "string"}, "type": "array"}, "instprofile": {"type": "string"}, "dnsEntryZoneAlias": {"items": {"type": "string"}, "type": "array"}, "shell": {"type": "string"}, "description": {"type": "string"}, "inventoryNumber": {"items": {"type": "string"}, "type": "array"}, "objectFlag": {"items": {"type": "string"}, "type": "array"}, "mac": {"items": {"type": "string"}, "type": "array"}, "portal": {"type": "string"}, "groups": {"items": {"type": "string"}, "type": "array"}, "primaryGroup": {"type": "string"}, "operatingSystemVersion": {"type": "string"}, "password": {"type": "string"}, "reinstall": {"type": "string"}, "serverRole": {"items": {"type": "string"}, "type": "array"}, "dnsEntryZoneForward": {"items": {"type": "string"}, "type": "array"}, "name": {"type": "string"}, "fqdn": {"type": "string"}, "dnsEntryZoneReverse": {"items": {"type": "string"}, "type": "array"}, "dhcpEntryZone": {"items": {"type": "string"}, "type": "array"}, "sambaRID": {"type": "integer"}, "operatingSystem": {"type": "string"}}}, "NagiosTimeperiodProperties": {"type": "object", "properties": {"periodTuesday": {"type": "string"}, "periodSunday": {"type": "string"}, "description": {"type": "string"}, "periodFriday": {"type": "string"}, "periodThursday": {"type": "string"}, "periodSaturday": {"type": "string"}, "periodWednesday": {"type": "string"}, "periodMonday": {"type": "string"}, "name": {"type": "string"}}}, "nagios_timeperiod": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/NagiosTimeperiodProperties"}}}]}, "policies_registry": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/PoliciesRegistryProperties"}}}]}, "settings_data": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/SettingsDataProperties"}}}]}, "dhcp_shared": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/DhcpSharedProperties"}}}]}, "UsersContactProperties": {"type": "object", "properties": {"mobileTelephoneNumber": {"items": {"type": "string"}, "type": "array"}, "cn": {"type": "string"}, "jpegPhoto": {"type": "string"}, "street": {"type": "string"}, "postcode": {"type": "string"}, "homePostalAddress": {"items": {"type": "string"}, "type": "array"}, "city": {"type": "string"}, "employeeType": {"type": "string"}, "title": {"type": "string"}, "pagerTelephoneNumber": {"items": {"type": "string"}, "type": "array"}, "organisation": {"type": "string"}, "e-mail": {"items": {"type": "string"}, "type": "array"}, "departmentNumber": {"type": "string"}, "homeTelephoneNumber": {"items": {"type": "string"}, "type": "array"}, "description": {"type": "string"}, "firstname": {"type": "string"}, "lastname": {"type": "string"}, "phone": {"items": {"type": "string"}, "type": "array"}, "birthday": {"type": "string"}, "employeeNumber": {"type": "string"}, "displayName": {"type": "string"}, "country": {"type": "string"}, "roomNumber": {"type": "string"}, "secretary": {"items": {"type": "string"}, "type": "array"}}}, "dns_ns_record": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/DnsNs_recordProperties"}}}]}, "groups_group": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/GroupsGroupProperties"}}}]}, "computers_linux": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/ComputersLinuxProperties"}}}]}, "computers_domaincontroller_master": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/ComputersDomaincontroller_masterProperties"}}}]}, "PoliciesAdmin_containerProperties": {"type": "object", "properties": {"ldapFilter": {"type": "string"}, "name": {"type": "string"}, "emptyAttributes": {"items": {"type": "string"}, "type": "array"}, "prohibitedObjectClasses": {"items": {"type": "string"}, "type": "array"}, "requiredObjectClasses": {"items": {"type": "string"}, "type": "array"}, "listModules": {"items": {"type": "string"}, "type": "array"}, "fixedAttributes": {"items": {"type": "string"}, "type": "array"}}}, "SettingsPrintermodelProperties": {"type": "object", "properties": {"name": {"type": "string"}, "printmodel": {"items": {"type": "string"}, "type": "array"}}}, "PoliciesShare_userquotaProperties": {"type": "object", "properties": {"softLimitSpace": {"type": "string"}, "name": {"type": "string"}, "emptyAttributes": {"items": {"type": "string"}, "type": "array"}, "prohibitedObjectClasses": {"items": {"type": "string"}, "type": "array"}, "requiredObjectClasses": {"items": {"type": "string"}, "type": "array"}, "ldapFilter": {"type": "string"}, "softLimitInodes": {"type": "string"}, "hardLimitSpace": {"type": "string"}, "fixedAttributes": {"items": {"type": "string"}, "type": "array"}, "reapplyeverylogin": {"type": "string"}, "hardLimitInodes": {"type": "string"}}}, "DnsAliasProperties": {"type": "object", "properties": {"cname": {"type": "string"}, "name": {"type": "string"}, "zonettl": {"type": "string"}}}, "policies_memberpackages": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/PoliciesMemberpackagesProperties"}}}]}, "ComputersWindowsProperties": {"type": "object", "properties": {"domain": {"type": "string"}, "nagiosContactEmail": {"items": {"type": "string"}, "type": "array"}, "ip": {"items": {"type": "string"}, "type": "array"}, "nagiosParents": {"items": {"type": "string"}, "type": "array"}, "nagiosServices": {"items": {"type": "string"}, "type": "array"}, "network": {"type": "string"}, "unixhome": {"type": "string"}, "dnsEntryZoneForward": {"items": {"type": "string"}, "type": "array"}, "dnsEntryZoneAlias": {"items": {"type": "string"}, "type": "array"}, "ntCompatibility": {"type": "string"}, "shell": {"type": "string"}, "description": {"type": "string"}, "inventoryNumber": {"items": {"type": "string"}, "type": "array"}, "objectFlag": {"items": {"type": "string"}, "type": "array"}, "mac": {"items": {"type": "string"}, "type": "array"}, "groups": {"items": {"type": "string"}, "type": "array"}, "primaryGroup": {"type": "string"}, "operatingSystemVersion": {"type": "string"}, "password": {"type": "string"}, "dnsAlias": {"items": {"type": "string"}, "type": "array"}, "name": {"type": "string"}, "fqdn": {"type": "string"}, "dnsEntryZoneReverse": {"items": {"type": "string"}, "type": "array"}, "dhcpEntryZone": {"items": {"type": "string"}, "type": "array"}, "sambaRID": {"type": "integer"}, "operatingSystem": {"type": "string"}}}, "PoliciesPrintserverProperties": {"type": "object", "properties": {"ldapFilter": {"type": "string"}, "name": {"type": "string"}, "emptyAttributes": {"items": {"type": "string"}, "type": "array"}, "prohibitedObjectClasses": {"items": {"type": "string"}, "type": "array"}, "requiredObjectClasses": {"items": {"type": "string"}, "type": "array"}, "fixedAttributes": {"items": {"type": "string"}, "type": "array"}, "printServer": {"type": "string"}}}, "policies_dhcp_routing": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/PoliciesDhcp_routingProperties"}}}]}, "PoliciesDhcp_leasetimeProperties": {"type": "object", "properties": {"ldapFilter": {"type": "string"}, "name": {"type": "string"}, "emptyAttributes": {"items": {"type": "string"}, "type": "array"}, "lease_time_default": {"type": "string"}, "prohibitedObjectClasses": {"items": {"type": "string"}, "type": "array"}, "requiredObjectClasses": {"items": {"type": "string"}, "type": "array"}, "lease_time_max": {"type": "string"}, "fixedAttributes": {"items": {"type": "string"}, "type": "array"}, "lease_time_min": {"type": "string"}}}, "DnsNs_recordProperties": {"type": "object", "properties": {"nameserver": {"items": {"type": "string"}, "type": "array"}, "zonettl": {"type": "string"}, "zone": {"type": "string"}}}, "settings_lock": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/SettingsLockProperties"}}}]}, "PoliciesDhcp_netbiosProperties": {"type": "object", "properties": {"ldapFilter": {"type": "string"}, "name": {"type": "string"}, "emptyAttributes": {"items": {"type": "string"}, "type": "array"}, "prohibitedObjectClasses": {"items": {"type": "string"}, "type": "array"}, "requiredObjectClasses": {"items": {"type": "string"}, "type": "array"}, "netbios_node_type": {"type": "string"}, "netbios_scope": {"type": "string"}, "fixedAttributes": {"items": {"type": "string"}, "type": "array"}, "netbios_name_servers": {"items": {"type": "string"}, "type": "array"}}}, "ContainerDcProperties": {"type": "object", "properties": {"dnsReverseZone": {"items": {"type": "string"}, "type": "array"}, "sambaDomainName": {"items": {"type": "string"}, "type": "array"}, "dnsForwardZone": {"items": {"type": "string"}, "type": "array"}, "kerberosRealm": {"type": "string"}, "sambaSID": {"type": "string"}, "sambaNextGroupRid": {"type": "string"}, "sambaNextUserRid": {"type": "string"}, "name": {"type": "string"}}}, "shares_printergroup": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/SharesPrintergroupProperties"}}}]}, "settings_prohibited_username": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/SettingsProhibited_usernameProperties"}}}]}, "ComputersUbuntuProperties": {"type": "object", "properties": {"domain": {"type": "string"}, "nagiosContactEmail": {"items": {"type": "string"}, "type": "array"}, "ip": {"items": {"type": "string"}, "type": "array"}, "nagiosParents": {"items": {"type": "string"}, "type": "array"}, "nagiosServices": {"items": {"type": "string"}, "type": "array"}, "network": {"type": "string"}, "unixhome": {"type": "string"}, "dnsEntryZoneForward": {"items": {"type": "string"}, "type": "array"}, "dnsEntryZoneAlias": {"items": {"type": "string"}, "type": "array"}, "shell": {"type": "string"}, "description": {"type": "string"}, "inventoryNumber": {"items": {"type": "string"}, "type": "array"}, "objectFlag": {"items": {"type": "string"}, "type": "array"}, "mac": {"items": {"type": "string"}, "type": "array"}, "groups": {"items": {"type": "string"}, "type": "array"}, "primaryGroup": {"type": "string"}, "operatingSystemVersion": {"type": "string"}, "password": {"type": "string"}, "dnsAlias": {"items": {"type": "string"}, "type": "array"}, "name": {"type": "string"}, "fqdn": {"type": "string"}, "dnsEntryZoneReverse": {"items": {"type": "string"}, "type": "array"}, "dhcpEntryZone": {"items": {"type": "string"}, "type": "array"}, "sambaRID": {"type": "integer"}, "operatingSystem": {"type": "string"}}}, "PoliciesRepositorysyncProperties": {"type": "object", "properties": {"ldapFilter": {"type": "string"}, "name": {"type": "string"}, "hour": {"items": {"type": "string"}, "type": "array"}, "emptyAttributes": {"items": {"type": "string"}, "type": "array"}, "prohibitedObjectClasses": {"items": {"type": "string"}, "type": "array"}, "month": {"items": {"type": "string"}, "type": "array"}, "weekday": {"items": {"type": "string"}, "type": "array"}, "fixedAttributes": {"items": {"type": "string"}, "type": "array"}, "requiredObjectClasses": {"items": {"type": "string"}, "type": "array"}, "day": {"items": {"type": "string"}, "type": "array"}, "minute": {"items": {"type": "string"}, "type": "array"}}}, "settings_umc_operationset": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/SettingsUmc_operationsetProperties"}}}]}, "GroupsGroupProperties": {"type": "object", "properties": {"sambaGroupType": {"type": "string"}, "users": {"items": {"type": "string"}, "type": "array"}, "adGroupType": {"type": "string"}, "allowedEmailUsers": {"items": {"type": "string"}, "type": "array"}, "description": {"type": "string"}, "sambaRID": {"type": "integer"}, "memberOf": {"items": {"type": "string"}, "type": "array"}, "name": {"type": "string"}, "gidNumber": {"type": "integer"}, "hosts": {"items": {"type": "string"}, "type": "array"}, "objectFlag": {"items": {"type": "string"}, "type": "array"}, "sambaPrivileges": {"items": {"type": "string"}, "type": "array"}, "allowedEmailGroups": {"items": {"type": "string"}, "type": "array"}, "mailAddress": {"type": "string"}, "nestedGroup": {"items": {"type": "string"}, "type": "array"}, "UVMMGroup": {"type": "string"}}}, "settings_sambadomain": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/SettingsSambadomainProperties"}}}]}, "settings_directory": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/SettingsDirectoryProperties"}}}]}, "PoliciesDhcp_bootProperties": {"type": "object", "properties": {"ldapFilter": {"type": "string"}, "boot_filename": {"type": "string"}, "emptyAttributes": {"items": {"type": "string"}, "type": "array"}, "boot_server": {"type": "string"}, "prohibitedObjectClasses": {"items": {"type": "string"}, "type": "array"}, "requiredObjectClasses": {"items": {"type": "string"}, "type": "array"}, "fixedAttributes": {"items": {"type": "string"}, "type": "array"}, "name": {"type": "string"}}}, "appcenter_app": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/AppcenterAppProperties"}}}]}, "users_contact": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/UsersContactProperties"}}}]}, "dns_host_record": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/DnsHost_recordProperties"}}}]}, "ComputersMacosProperties": {"type": "object", "properties": {"domain": {"type": "string"}, "nagiosContactEmail": {"items": {"type": "string"}, "type": "array"}, "ip": {"items": {"type": "string"}, "type": "array"}, "nagiosParents": {"items": {"type": "string"}, "type": "array"}, "nagiosServices": {"items": {"type": "string"}, "type": "array"}, "network": {"type": "string"}, "unixhome": {"type": "string"}, "dnsEntryZoneForward": {"items": {"type": "string"}, "type": "array"}, "dnsEntryZoneAlias": {"items": {"type": "string"}, "type": "array"}, "shell": {"type": "string"}, "description": {"type": "string"}, "inventoryNumber": {"items": {"type": "string"}, "type": "array"}, "objectFlag": {"items": {"type": "string"}, "type": "array"}, "mac": {"items": {"type": "string"}, "type": "array"}, "groups": {"items": {"type": "string"}, "type": "array"}, "primaryGroup": {"type": "string"}, "operatingSystemVersion": {"type": "string"}, "password": {"type": "string"}, "dnsAlias": {"items": {"type": "string"}, "type": "array"}, "name": {"type": "string"}, "fqdn": {"type": "string"}, "dnsEntryZoneReverse": {"items": {"type": "string"}, "type": "array"}, "dhcpEntryZone": {"items": {"type": "string"}, "type": "array"}, "sambaRID": {"type": "integer"}, "operatingSystem": {"type": "string"}}}, "dns_srv_record": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/DnsSrv_recordProperties"}}}]}, "SettingsDefaultProperties": {"type": "object", "properties": {"defaultGroup": {"type": "string"}, "defaultClientGroup": {"type": "string"}, "defaultComputerGroup": {"type": "string"}, "defaultMemberServerGroup": {"type": "string"}, "defaultDomainControllerMBGroup": {"type": "string"}, "name": {"type": "string"}, "defaultDomainControllerGroup": {"type": "string"}, "defaultKdeProfiles": {"items": {"type": "string"}, "type": "array"}}}, "saml_idpconfig": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/SamlIdpconfigProperties"}}}]}, "ContainerOuProperties": {"type": "object", "properties": {"printerPath": {"type": "string"}, "userPath": {"type": "string"}, "description": {"type": "string"}, "name": {"type": "string"}, "mailPath": {"type": "string"}, "computerPath": {"type": "string"}, "networkPath": {"type": "string"}, "groupPath": {"type": "string"}, "licensePath": {"type": "string"}, "dhcpPath": {"type": "string"}, "policyPath": {"type": "string"}, "sharePath": {"type": "string"}, "dnsPath": {"type": "string"}}}, "PoliciesPwhistoryProperties": {"type": "object", "properties": {"ldapFilter": {"type": "string"}, "name": {"type": "string"}, "emptyAttributes": {"items": {"type": "string"}, "type": "array"}, "prohibitedObjectClasses": {"items": {"type": "string"}, "type": "array"}, "requiredObjectClasses": {"items": {"type": "string"}, "type": "array"}, "length": {"type": "string"}, "expiryInterval": {"type": "string"}, "fixedAttributes": {"items": {"type": "string"}, "type": "array"}, "pwQualityCheck": {"type": "string"}, "pwLength": {"type": "string"}}}, "ComputersLinuxProperties": {"type": "object", "properties": {"domain": {"type": "string"}, "nagiosContactEmail": {"items": {"type": "string"}, "type": "array"}, "ip": {"items": {"type": "string"}, "type": "array"}, "nagiosParents": {"items": {"type": "string"}, "type": "array"}, "nagiosServices": {"items": {"type": "string"}, "type": "array"}, "network": {"type": "string"}, "unixhome": {"type": "string"}, "dnsEntryZoneForward": {"items": {"type": "string"}, "type": "array"}, "dnsEntryZoneAlias": {"items": {"type": "string"}, "type": "array"}, "shell": {"type": "string"}, "description": {"type": "string"}, "inventoryNumber": {"items": {"type": "string"}, "type": "array"}, "objectFlag": {"items": {"type": "string"}, "type": "array"}, "mac": {"items": {"type": "string"}, "type": "array"}, "groups": {"items": {"type": "string"}, "type": "array"}, "primaryGroup": {"type": "string"}, "operatingSystemVersion": {"type": "string"}, "password": {"type": "string"}, "dnsAlias": {"items": {"type": "string"}, "type": "array"}, "name": {"type": "string"}, "fqdn": {"type": "string"}, "dnsEntryZoneReverse": {"items": {"type": "string"}, "type": "array"}, "dhcpEntryZone": {"items": {"type": "string"}, "type": "array"}, "sambaRID": {"type": "integer"}, "operatingSystem": {"type": "string"}}}, "ComputersMemberserverProperties": {"type": "object", "properties": {"domain": {"type": "string"}, "ManageableBy": {"items": {"type": "string"}, "type": "array"}, "nagiosContactEmail": {"items": {"type": "string"}, "type": "array"}, "ip": {"items": {"type": "string"}, "type": "array"}, "nagiosParents": {"items": {"type": "string"}, "type": "array"}, "nagiosServices": {"items": {"type": "string"}, "type": "array"}, "network": {"type": "string"}, "service": {"items": {"type": "string"}, "type": "array"}, "reinstalloption": {"type": "string"}, "unixhome": {"type": "string"}, "dnsAlias": {"items": {"type": "string"}, "type": "array"}, "instprofile": {"type": "string"}, "dnsEntryZoneAlias": {"items": {"type": "string"}, "type": "array"}, "shell": {"type": "string"}, "description": {"type": "string"}, "inventoryNumber": {"items": {"type": "string"}, "type": "array"}, "objectFlag": {"items": {"type": "string"}, "type": "array"}, "mac": {"items": {"type": "string"}, "type": "array"}, "portal": {"type": "string"}, "groups": {"items": {"type": "string"}, "type": "array"}, "primaryGroup": {"type": "string"}, "operatingSystemVersion": {"type": "string"}, "password": {"type": "string"}, "reinstall": {"type": "string"}, "serverRole": {"items": {"type": "string"}, "type": "array"}, "dnsEntryZoneForward": {"items": {"type": "string"}, "type": "array"}, "name": {"type": "string"}, "fqdn": {"type": "string"}, "dnsEntryZoneReverse": {"items": {"type": "string"}, "type": "array"}, "dhcpEntryZone": {"items": {"type": "string"}, "type": "array"}, "sambaRID": {"type": "integer"}, "operatingSystem": {"type": "string"}}}, "SettingsDataProperties": {"type": "object", "properties": {"name": {"type": "string"}, "data_type": {"type": "string"}, "package": {"type": "string"}, "filename": {"type": "string"}, "ucsversionstart": {"type": "string"}, "ucsversionend": {"type": "string"}, "meta": {"items": {"type": "string"}, "type": "array"}, "packageversion": {"type": "string"}, "data": {"type": "string"}, "description": {"type": "string"}}}, "policies_masterpackages": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/PoliciesMasterpackagesProperties"}}}]}, "SharesPrinterProperties": {"type": "object", "properties": {"setQuota": {"type": "string"}, "model": {"type": "string"}, "ACLtype": {"type": "string"}, "description": {"type": "string"}, "producer": {"type": "string"}, "ACLUsers": {"items": {"type": "string"}, "type": "array"}, "jobPrice": {"type": "string"}, "uri": {"type": "string"}, "ACLGroups": {"items": {"type": "string"}, "type": "array"}, "location": {"type": "string"}, "sambaName": {"type": "string"}, "pagePrice": {"type": "string"}, "spoolHost": {"items": {"type": "string"}, "type": "array"}, "name": {"type": "string"}}}, "policies_dhcp_dnsupdate": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/PoliciesDhcp_dnsupdateProperties"}}}]}, "ComputersIpmanagedclientProperties": {"type": "object", "properties": {"domain": {"type": "string"}, "nagiosServices": {"items": {"type": "string"}, "type": "array"}, "description": {"type": "string"}, "nagiosContactEmail": {"items": {"type": "string"}, "type": "array"}, "inventoryNumber": {"items": {"type": "string"}, "type": "array"}, "ip": {"items": {"type": "string"}, "type": "array"}, "dnsAlias": {"items": {"type": "string"}, "type": "array"}, "nagiosParents": {"items": {"type": "string"}, "type": "array"}, "dnsEntryZoneReverse": {"items": {"type": "string"}, "type": "array"}, "fqdn": {"type": "string"}, "network": {"type": "string"}, "mac": {"items": {"type": "string"}, "type": "array"}, "dhcpEntryZone": {"items": {"type": "string"}, "type": "array"}, "groups": {"items": {"type": "string"}, "type": "array"}, "objectFlag": {"items": {"type": "string"}, "type": "array"}, "dnsEntryZoneForward": {"items": {"type": "string"}, "type": "array"}, "dnsEntryZoneAlias": {"items": {"type": "string"}, "type": "array"}, "name": {"type": "string"}}}, "container_dc": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/ContainerDcProperties"}}}]}, "policies_print_quota": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/PoliciesPrint_quotaProperties"}}}]}, "dns_ptr_record": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/DnsPtr_recordProperties"}}}]}, "base": {"type": "object", "properties": {"dn": {"type": "string", "description": "DN of this object (read only)"}, "superordinate": {"type": "string"}, "options": {"items": {"type": "string"}, "type": "array", "description": "List of options."}, "policies": {"items": {"type": "string"}, "type": "array", "description": "List policy objects, that apply for this object."}, "position": {"type": "string", "description": "DN of LDAP node below which the object is located."}, "id": {"type": "string", "description": "ID of this object."}}}, "dhcp_host": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/DhcpHostProperties"}}}]}, "SharesShareProperties": {"type": "object", "properties": {"sambaFakeOplocks": {"type": "string"}, "sambaDirectorySecurityMode": {"type": "string"}, "sambaNtAclSupport": {"type": "string"}, "sync": {"type": "string"}, "sambaInheritOwner": {"type": "string"}, "sambaPostexec": {"type": "string"}, "owner": {"type": "string"}, "sambaHideFiles": {"type": "string"}, "sambaForceDirectoryMode": {"type": "string"}, "sambaValidUsers": {"type": "string"}, "sambaName": {"type": "string"}, "sambaCustomSettings": {"items": {"type": "string"}, "type": "array"}, "sambaCreateMode": {"type": "string"}, "group": {"type": "string"}, "sambaForceCreateMode": {"type": "string"}, "sambaBrowseable": {"type": "string"}, "nfsCustomSettings": {"items": {"type": "string"}, "type": "array"}, "sambaDosFilemode": {"type": "string"}, "sambaBlockSize": {"type": "string"}, "printablename": {"type": "string"}, "sambaPreexec": {"type": "string"}, "root_squash": {"type": "string"}, "sambaHideUnreadable": {"type": "string"}, "sambaInheritAcls": {"type": "string"}, "sambaWriteList": {"type": "string"}, "sambaForceGroup": {"type": "string"}, "writeable": {"type": "string"}, "sambaInheritPermissions": {"type": "string"}, "sambaSecurityMode": {"type": "string"}, "sambaForceSecurityMode": {"type": "string"}, "sambaVFSObjects": {"type": "string"}, "sambaMSDFSRoot": {"type": "string"}, "sambaForceUser": {"type": "string"}, "sambaOplocks": {"type": "string"}, "sambaWriteable": {"type": "string"}, "nfs_hosts": {"items": {"type": "string"}, "type": "array"}, "sambaStrictLocking": {"type": "string"}, "sambaDirectoryMode": {"type": "string"}, "path": {"type": "string"}, "sambaHostsDeny": {"items": {"type": "string"}, "type": "array"}, "sambaLocking": {"type": "string"}, "sambaBlockingLocks": {"type": "string"}, "sambaInvalidUsers": {"type": "string"}, "name": {"type": "string"}, "sambaHostsAllow": {"items": {"type": "string"}, "type": "array"}, "subtree_checking": {"type": "string"}, "host": {"type": "string"}, "sambaPublic": {"type": "string"}, "directorymode": {"type": "string"}, "sambaLevel2Oplocks": {"type": "string"}, "sambaForceDirectorySecurityMode": {"type": "string"}, "sambaCscPolicy": {"type": "string"}}}, "computers_windows_domaincontroller": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/ComputersWindows_domaincontrollerProperties"}}}]}, "SettingsPortalProperties": {"type": "object", "properties": {"showMenu": {"type": "string"}, "showApps": {"type": "string"}, "displayName": {"type": "object"}, "name": {"type": "string"}, "links": {"items": {"type": "string"}, "type": "array"}, "portalEntriesOrder": {"items": {"type": "string"}, "type": "array"}, "content": {"type": "string"}, "showServers": {"type": "string"}, "showLogin": {"type": "string"}, "cssBackground": {"type": "string"}, "background": {"type": "string"}, "portalComputers": {"items": {"type": "string"}, "type": "array"}, "logo": {"type": "string"}, "showSearch": {"type": "string"}, "fontColor": {"type": "string"}}}, "PoliciesAutostartProperties": {"type": "object", "properties": {"ldapFilter": {"type": "string"}, "name": {"type": "string"}, "emptyAttributes": {"items": {"type": "string"}, "type": "array"}, "autostartScript": {"type": "string"}, "prohibitedObjectClasses": {"items": {"type": "string"}, "type": "array"}, "requiredObjectClasses": {"items": {"type": "string"}, "type": "array"}, "fixedAttributes": {"items": {"type": "string"}, "type": "array"}}}, "dns_txt_record": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/DnsTxt_recordProperties"}}}]}, "DnsReverse_zoneProperties": {"type": "object", "properties": {"subnet": {"type": "string"}, "retry": {"type": "string"}, "zonettl": {"type": "string"}, "refresh": {"type": "string"}, "contact": {"type": "string"}, "expire": {"type": "string"}, "ttl": {"type": "string"}, "serial": {"type": "string"}, "nameserver": {"items": {"type": "string"}, "type": "array"}}}, "settings_extended_options": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/SettingsExtended_optionsProperties"}}}]}, "PoliciesDhcp_statementsProperties": {"type": "object", "properties": {"serverIdentifier": {"type": "string"}, "ldapFilter": {"type": "string"}, "name": {"type": "string"}, "emptyAttributes": {"items": {"type": "string"}, "type": "array"}, "authoritative": {"type": "string"}, "boot-unknown-clients": {"type": "string"}, "prohibitedObjectClasses": {"items": {"type": "string"}, "type": "array"}, "requiredObjectClasses": {"items": {"type": "string"}, "type": "array"}, "pingCheck": {"type": "string"}, "fixedAttributes": {"items": {"type": "string"}, "type": "array"}, "serverName": {"type": "string"}, "getLeaseHostnames": {"type": "string"}}}, "PoliciesLdapserverProperties": {"type": "object", "properties": {"ldapFilter": {"type": "string"}, "name": {"type": "string"}, "emptyAttributes": {"items": {"type": "string"}, "type": "array"}, "prohibitedObjectClasses": {"items": {"type": "string"}, "type": "array"}, "requiredObjectClasses": {"items": {"type": "string"}, "type": "array"}, "ldapServer": {"items": {"type": "string"}, "type": "array"}, "fixedAttributes": {"items": {"type": "string"}, "type": "array"}}}, "SettingsPrinteruriProperties": {"type": "object", "properties": {"printeruri": {"items": {"type": "string"}, "type": "array"}, "name": {"type": "string"}}}, "policies_desktop": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/PoliciesDesktopProperties"}}}]}, "settings_cn": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/SettingsCnProperties"}}}]}, "SettingsSambaconfigProperties": {"type": "object", "properties": {"resetCountMinutes": {"type": "string"}, "minPasswordAge": {"type": "string"}, "name": {"type": "string"}, "lockoutDuration": {"type": "string"}, "refuseMachinePWChange": {"type": "string"}, "maxPasswordAge": {"type": "string"}, "passwordHistory": {"type": "string"}, "disconnectTime": {"type": "string"}, "badLockoutAttempts": {"type": "string"}, "logonToChangePW": {"type": "string"}, "passwordLength": {"type": "string"}}}, "SettingsDirectoryProperties": {"type": "object", "properties": {"groups": {"items": {"type": "string"}, "type": "array"}, "license": {"items": {"type": "string"}, "type": "array"}, "computers": {"items": {"type": "string"}, "type": "array"}, "mail": {"items": {"type": "string"}, "type": "array"}, "shares": {"items": {"type": "string"}, "type": "array"}, "networks": {"items": {"type": "string"}, "type": "array"}, "dns": {"items": {"type": "string"}, "type": "array"}, "printers": {"items": {"type": "string"}, "type": "array"}, "dhcp": {"items": {"type": "string"}, "type": "array"}, "users": {"items": {"type": "string"}, "type": "array"}, "policies": {"items": {"type": "string"}, "type": "array"}, "name": {"type": "string"}}}, "policies_dhcp_dns": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/PoliciesDhcp_dnsProperties"}}}]}, "DnsHost_recordProperties": {"type": "object", "properties": {"a": {"items": {"type": "string"}, "type": "array"}, "txt": {"items": {"type": "string"}, "type": "array"}, "mx": {"items": {"type": "string"}, "type": "array"}, "zonettl": {"type": "string"}, "name": {"type": "string"}}}, "policies_maintenance": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/PoliciesMaintenanceProperties"}}}]}, "nagios_service": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/NagiosServiceProperties"}}}]}, "ComputersWindows_domaincontrollerProperties": {"type": "object", "properties": {"domain": {"type": "string"}, "nagiosContactEmail": {"items": {"type": "string"}, "type": "array"}, "ip": {"items": {"type": "string"}, "type": "array"}, "nagiosParents": {"items": {"type": "string"}, "type": "array"}, "nagiosServices": {"items": {"type": "string"}, "type": "array"}, "network": {"type": "string"}, "service": {"items": {"type": "string"}, "type": "array"}, "unixhome": {"type": "string"}, "dnsEntryZoneForward": {"items": {"type": "string"}, "type": "array"}, "dnsEntryZoneAlias": {"items": {"type": "string"}, "type": "array"}, "shell": {"type": "string"}, "description": {"type": "string"}, "inventoryNumber": {"items": {"type": "string"}, "type": "array"}, "objectFlag": {"items": {"type": "string"}, "type": "array"}, "mac": {"items": {"type": "string"}, "type": "array"}, "groups": {"items": {"type": "string"}, "type": "array"}, "primaryGroup": {"type": "string"}, "operatingSystemVersion": {"type": "string"}, "password": {"type": "string"}, "serverRole": {"items": {"type": "string"}, "type": "array"}, "dnsAlias": {"items": {"type": "string"}, "type": "array"}, "name": {"type": "string"}, "fqdn": {"type": "string"}, "dnsEntryZoneReverse": {"items": {"type": "string"}, "type": "array"}, "dhcpEntryZone": {"items": {"type": "string"}, "type": "array"}, "sambaRID": {"type": "integer"}, "operatingSystem": {"type": "string"}}}, "saml_serviceprovider": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/SamlServiceproviderProperties"}}}]}, "uvmm_profile": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/UvmmProfileProperties"}}}]}, "users_ldap": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/UsersLdapProperties"}}}]}, "policies_repositoryserver": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/PoliciesRepositoryserverProperties"}}}]}, "DhcpServiceProperties": {"type": "object", "properties": {"statements": {"items": {"type": "string"}, "type": "array"}, "option": {"items": {"type": "string"}, "type": "array"}, "service": {"type": "string"}}}, "SettingsPortal_categoryProperties": {"type": "object", "properties": {"displayName": {"items": {"type": "string"}, "type": "array"}, "name": {"type": "string"}}}, "DhcpServerProperties": {"type": "object", "properties": {"server": {"type": "string"}}}, "policies_printserver": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/PoliciesPrintserverProperties"}}}]}, "SettingsServiceProperties": {"type": "object", "properties": {"name": {"type": "string"}}}, "settings_packages": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/SettingsPackagesProperties"}}}]}, "policies_dhcp_boot": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/PoliciesDhcp_bootProperties"}}}]}, "mail_domain": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/MailDomainProperties"}}}]}, "SettingsProhibited_usernameProperties": {"type": "object", "properties": {"usernames": {"items": {"type": "string"}, "type": "array"}, "name": {"type": "string"}}}, "container_ou": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/ContainerOuProperties"}}}]}, "settings_ldapacl": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/SettingsLdapaclProperties"}}}]}, "policies_nfsmounts": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/PoliciesNfsmountsProperties"}}}]}, "PoliciesMasterpackagesProperties": {"type": "object", "properties": {"ldapFilter": {"type": "string"}, "masterPackagesRemove": {"items": {"type": "string"}, "type": "array"}, "emptyAttributes": {"items": {"type": "string"}, "type": "array"}, "prohibitedObjectClasses": {"items": {"type": "string"}, "type": "array"}, "requiredObjectClasses": {"items": {"type": "string"}, "type": "array"}, "fixedAttributes": {"items": {"type": "string"}, "type": "array"}, "masterPackages": {"items": {"type": "string"}, "type": "array"}, "name": {"type": "string"}}}, "settings_ldapschema": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/SettingsLdapschemaProperties"}}}]}, "SettingsLdapschemaProperties": {"type": "object", "properties": {"name": {"type": "string"}, "package": {"type": "string"}, "filename": {"type": "string"}, "active": {"type": "string"}, "packageversion": {"type": "string"}, "data": {"type": "string"}, "appidentifier": {"items": {"type": "string"}, "type": "array"}}}, "PoliciesReleaseProperties": {"type": "object", "properties": {"ldapFilter": {"type": "string"}, "name": {"type": "string"}, "emptyAttributes": {"items": {"type": "string"}, "type": "array"}, "releaseVersion": {"type": "string"}, "prohibitedObjectClasses": {"items": {"type": "string"}, "type": "array"}, "requiredObjectClasses": {"items": {"type": "string"}, "type": "array"}, "activate": {"type": "string"}, "fixedAttributes": {"items": {"type": "string"}, "type": "array"}}}, "policies_admin_container": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/PoliciesAdmin_containerProperties"}}}]}, "SettingsXconfig_choicesProperties": {"type": "object", "properties": {"keyboardLayout": {"items": {"type": "string"}, "type": "array"}, "name": {"type": "string"}, "vRefresh": {"items": {"type": "string"}, "type": "array"}, "displaySize": {"items": {"type": "string"}, "type": "array"}, "mouseDevice": {"items": {"type": "string"}, "type": "array"}, "hSync": {"items": {"type": "string"}, "type": "array"}, "keyboardVariant": {"items": {"type": "string"}, "type": "array"}, "xModule": {"items": {"type": "string"}, "type": "array"}, "mouseProtocol": {"items": {"type": "string"}, "type": "array"}, "colorDepth": {"items": {"type": "string"}, "type": "array"}, "resolution": {"items": {"type": "string"}, "type": "array"}}}, "SettingsExtended_optionsProperties": {"type": "object", "properties": {"translationLongDescription": {"items": {"type": "string"}, "type": "array"}, "name": {"type": "string"}, "translationShortDescription": {"items": {"type": "string"}, "type": "array"}, "default": {"type": "string"}, "editable": {"type": "string"}, "module": {"items": {"type": "string"}, "type": "array"}, "longDescription": {"type": "string"}, "objectClass": {"items": {"type": "string"}, "type": "array"}, "shortDescription": {"type": "string"}}}, "policies_ldapserver": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/PoliciesLdapserverProperties"}}}]}, "SettingsUmc_operationsetProperties": {"type": "object", "properties": {"flavor": {"type": "string"}, "hosts": {"items": {"type": "string"}, "type": "array"}, "description": {"type": "string"}, "operation": {"items": {"type": "string"}, "type": "array"}, "name": {"type": "string"}}}, "computers_domaincontroller_backup": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/ComputersDomaincontroller_backupProperties"}}}]}, "SettingsLicenseProperties": {"type": "object", "properties": {"oemProductTypes": {"items": {"type": "string"}, "type": "array"}, "desktops": {"type": "string"}, "module": {"type": "string"}, "servers": {"type": "string"}, "groupwareaccounts": {"type": "string"}, "accounts": {"type": "string"}, "corporateclients": {"type": "string"}, "keyID": {"type": "string"}, "virtualdesktopclients": {"type": "string"}, "support": {"type": "string"}, "version": {"type": "string"}, "product": {"items": {"type": "string"}, "type": "array"}, "users": {"type": "string"}, "productTypes": {"items": {"type": "string"}, "type": "array"}, "expires": {"type": "string"}, "base": {"type": "string"}, "virtualdesktopusers": {"type": "string"}, "managedclients": {"type": "string"}, "name": {"type": "string"}, "premiumsupport": {"type": "string"}, "clients": {"type": "string"}, "signature": {"type": "string"}}}, "policies_slavepackages": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/PoliciesSlavepackagesProperties"}}}]}, "NagiosNagiosProperties": {"type": "object", "properties": {"name": {"type": "string"}}}, "policies_dhcp_leasetime": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/PoliciesDhcp_leasetimeProperties"}}}]}, "dhcp_server": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/DhcpServerProperties"}}}]}, "DnsTxt_recordProperties": {"type": "object", "properties": {"txt": {"items": {"type": "string"}, "type": "array"}, "name": {"type": "string"}, "zonettl": {"type": "string"}}}, "PoliciesUmcProperties": {"type": "object", "properties": {"ldapFilter": {"type": "string"}, "name": {"type": "string"}, "emptyAttributes": {"items": {"type": "string"}, "type": "array"}, "prohibitedObjectClasses": {"items": {"type": "string"}, "type": "array"}, "requiredObjectClasses": {"items": {"type": "string"}, "type": "array"}, "allow": {"items": {"type": "string"}, "type": "array"}, "fixedAttributes": {"items": {"type": "string"}, "type": "array"}}}, "PoliciesDhcp_dnsupdateProperties": {"type": "object", "properties": {"ddnsDomainname": {"type": "string"}, "ldapFilter": {"type": "string"}, "name": {"type": "string"}, "emptyAttributes": {"items": {"type": "string"}, "type": "array"}, "ddnsUpdates": {"type": "string"}, "ddnsUpdateStyle": {"type": "string"}, "prohibitedObjectClasses": {"items": {"type": "string"}, "type": "array"}, "requiredObjectClasses": {"items": {"type": "string"}, "type": "array"}, "clientUpdates": {"type": "string"}, "ddnsDoForwardUpdate": {"type": "string"}, "ddnsHostname": {"type": "string"}, "ddnsRevDomainname": {"type": "string"}, "fixedAttributes": {"items": {"type": "string"}, "type": "array"}, "updateStaticLeases": {"type": "string"}}}, "computers_trustaccount": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/ComputersTrustaccountProperties"}}}]}, "policies_repositorysync": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/PoliciesRepositorysyncProperties"}}}]}, "policies_autostart": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/PoliciesAutostartProperties"}}}]}, "NagiosServiceProperties": {"type": "object", "properties": {"retryCheckInterval": {"type": "integer"}, "description": {"type": "string"}, "checkPeriod": {"type": "string"}, "notificationOptionCritical": {"type": "boolean"}, "normalCheckInterval": {"type": "integer"}, "checkArgs": {"type": "string"}, "useNRPE": {"type": "boolean"}, "notificationOptionUnreachable": {"type": "boolean"}, "assignedHosts": {"items": {"type": "string"}, "type": "array"}, "maxCheckAttempts": {"type": "integer"}, "checkCommand": {"type": "string"}, "notificationPeriod": {"type": "string"}, "notificationInterval": {"type": "integer"}, "notificationOptionWarning": {"type": "boolean"}, "notificationOptionRecovered": {"type": "boolean"}, "name": {"type": "string"}}}, "SettingsUdm_moduleProperties": {"type": "object", "properties": {"ucsversionstart": {"type": "string"}, "name": {"type": "string"}, "package": {"type": "string"}, "filename": {"type": "string"}, "messagecatalog": {"items": {"type": "string"}, "type": "array"}, "umcregistration": {"type": "string"}, "active": {"type": "string"}, "packageversion": {"type": "string"}, "data": {"type": "string"}, "appidentifier": {"items": {"type": "string"}, "type": "array"}, "ucsversionend": {"type": "string"}, "icon": {"items": {"type": "string"}, "type": "array"}}}, "computers_windows": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/ComputersWindowsProperties"}}}]}, "settings_portal": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/SettingsPortalProperties"}}}]}, "dhcp_subnet": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/DhcpSubnetProperties"}}}]}, "ComputersDomaincontroller_backupProperties": {"type": "object", "properties": {"domain": {"type": "string"}, "ManageableBy": {"items": {"type": "string"}, "type": "array"}, "nagiosContactEmail": {"items": {"type": "string"}, "type": "array"}, "ip": {"items": {"type": "string"}, "type": "array"}, "nagiosParents": {"items": {"type": "string"}, "type": "array"}, "nagiosServices": {"items": {"type": "string"}, "type": "array"}, "network": {"type": "string"}, "service": {"items": {"type": "string"}, "type": "array"}, "reinstalloption": {"type": "string"}, "unixhome": {"type": "string"}, "dnsAlias": {"items": {"type": "string"}, "type": "array"}, "instprofile": {"type": "string"}, "dnsEntryZoneAlias": {"items": {"type": "string"}, "type": "array"}, "shell": {"type": "string"}, "description": {"type": "string"}, "inventoryNumber": {"items": {"type": "string"}, "type": "array"}, "objectFlag": {"items": {"type": "string"}, "type": "array"}, "mac": {"items": {"type": "string"}, "type": "array"}, "portal": {"type": "string"}, "groups": {"items": {"type": "string"}, "type": "array"}, "primaryGroup": {"type": "string"}, "operatingSystemVersion": {"type": "string"}, "password": {"type": "string"}, "reinstall": {"type": "string"}, "serverRole": {"items": {"type": "string"}, "type": "array"}, "dnsEntryZoneForward": {"items": {"type": "string"}, "type": "array"}, "name": {"type": "string"}, "fqdn": {"type": "string"}, "dnsEntryZoneReverse": {"items": {"type": "string"}, "type": "array"}, "dhcpEntryZone": {"items": {"type": "string"}, "type": "array"}, "sambaRID": {"type": "integer"}, "operatingSystem": {"type": "string"}}}, "SharesPrintergroupProperties": {"type": "object", "properties": {"setQuota": {"type": "string"}, "name": {"type": "string"}, "jobPrice": {"type": "string"}, "groupMember": {"items": {"type": "string"}, "type": "array"}, "sambaName": {"type": "string"}, "spoolHost": {"items": {"type": "string"}, "type": "array"}, "pagePrice": {"type": "string"}}}, "dns_reverse_zone": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/DnsReverse_zoneProperties"}}}]}, "DhcpSubnetProperties": {"type": "object", "properties": {"subnet": {"type": "string"}, "statements": {"items": {"type": "string"}, "type": "array"}, "option": {"items": {"type": "string"}, "type": "array"}, "range": {"items": {"type": "string"}, "type": "array"}, "broadcastaddress": {"type": "string"}, "subnetmask": {"type": "string"}}}, "settings_extended_attribute": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/SettingsExtended_attributeProperties"}}}]}, "SettingsPortal_entryProperties": {"type": "object", "properties": {"category": {"type": "string"}, "displayName": {"type": "object"}, "description": {"type": "object"}, "name": {"type": "string"}, "favorite": {"type": "string"}, "activated": {"type": "string"}, "allowedGroups": {"items": {"type": "string"}, "type": "array"}, "authRestriction": {"type": "string"}, "link": {"items": {"type": "string"}, "type": "array"}, "portal": {"items": {"type": "string"}, "type": "array"}, "icon": {"type": "string"}}}, "SamlIdpconfigProperties": {"type": "object", "properties": {"LdapGetAttributes": {"items": {"type": "string"}, "type": "array"}, "id": {"type": "string"}}}, "uvmm_info": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/UvmmInfoProperties"}}}]}, "PoliciesPrint_quotaProperties": {"type": "object", "properties": {"quotaGroups": {"items": {"type": "string"}, "type": "array"}, "name": {"type": "string"}, "emptyAttributes": {"items": {"type": "string"}, "type": "array"}, "quotaGroupsPerUsers": {"items": {"type": "string"}, "type": "array"}, "prohibitedObjectClasses": {"items": {"type": "string"}, "type": "array"}, "requiredObjectClasses": {"items": {"type": "string"}, "type": "array"}, "quotaUsers": {"items": {"type": "string"}, "type": "array"}, "ldapFilter": {"type": "string"}, "fixedAttributes": {"items": {"type": "string"}, "type": "array"}}}, "dhcp_service": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/DhcpServiceProperties"}}}]}, "ComputersDomaincontroller_masterProperties": {"type": "object", "properties": {"domain": {"type": "string"}, "ManageableBy": {"items": {"type": "string"}, "type": "array"}, "nagiosContactEmail": {"items": {"type": "string"}, "type": "array"}, "ip": {"items": {"type": "string"}, "type": "array"}, "nagiosParents": {"items": {"type": "string"}, "type": "array"}, "nagiosServices": {"items": {"type": "string"}, "type": "array"}, "network": {"type": "string"}, "service": {"items": {"type": "string"}, "type": "array"}, "reinstalloption": {"type": "string"}, "unixhome": {"type": "string"}, "dnsAlias": {"items": {"type": "string"}, "type": "array"}, "instprofile": {"type": "string"}, "dnsEntryZoneAlias": {"items": {"type": "string"}, "type": "array"}, "shell": {"type": "string"}, "description": {"type": "string"}, "inventoryNumber": {"items": {"type": "string"}, "type": "array"}, "objectFlag": {"items": {"type": "string"}, "type": "array"}, "mac": {"items": {"type": "string"}, "type": "array"}, "portal": {"type": "string"}, "groups": {"items": {"type": "string"}, "type": "array"}, "primaryGroup": {"type": "string"}, "operatingSystemVersion": {"type": "string"}, "password": {"type": "string"}, "reinstall": {"type": "string"}, "serverRole": {"items": {"type": "string"}, "type": "array"}, "dnsEntryZoneForward": {"items": {"type": "string"}, "type": "array"}, "name": {"type": "string"}, "fqdn": {"type": "string"}, "dnsEntryZoneReverse": {"items": {"type": "string"}, "type": "array"}, "dhcpEntryZone": {"items": {"type": "string"}, "type": "array"}, "sambaRID": {"type": "integer"}, "operatingSystem": {"type": "string"}}}, "settings_portal_category": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/SettingsPortal_categoryProperties"}}}]}, "settings_sambaconfig": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/SettingsSambaconfigProperties"}}}]}, "dns_alias": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/DnsAliasProperties"}}}]}, "policies_dhcp_statements": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/PoliciesDhcp_statementsProperties"}}}]}, "UsersUserProperties": {"type": "object", "properties": {"certificateSubjectOrganisationalUnit": {"type": "string"}, "mobileTelephoneNumber": {"items": {"type": "string"}, "type": "array"}, "city": {"type": "string"}, "homedrive": {"type": "string"}, "umcProperty": {"items": {"type": "string"}, "type": "array"}, "certificateSerial": {"type": "string"}, "certificateSubjectCommonName": {"type": "string"}, "sambaLogonHours": {"items": {"type": "string"}, "type": "array"}, "uidNumber": {"type": "integer"}, "pwdChangeNextLogin": {"type": "string"}, "disabled": {"type": "boolean"}, "overridePWHistory": {"type": "string"}, "unlock": {"type": "string"}, "homeShare": {"type": "string"}, "certificateSubjectState": {"type": "string"}, "scriptpath": {"type": "string"}, "sambaPrivileges": {"items": {"type": "string"}, "type": "array"}, "primaryGroup": {"type": "string"}, "homeTelephoneNumber": {"items": {"type": "string"}, "type": "array"}, "homePostalAddress": {"items": {"$ref": "#/definitions/UsersUser_homePostalAddress"}, "type": "array"}, "certificateIssuerCommonName": {"type": "string"}, "mailForwardCopyToSelf": {"type": "boolean"}, "employeeType": {"type": "string"}, "sambahome": {"type": "string"}, "title": {"type": "string"}, "mailAlternativeAddress": {"items": {"type": "string"}, "type": "array"}, "userCertificate": {"type": "string"}, "organisation": {"type": "string"}, "certificateSubjectOrganisation": {"type": "string"}, "certificateIssuerOrganisationalUnit": {"type": "string"}, "e-mail": {"items": {"type": "string"}, "type": "array"}, "userexpiry": {"type": "string", "format": "date"}, "pagerTelephoneNumber": {"items": {"type": "string"}, "type": "array"}, "lastname": {"type": "string"}, "unixhome": {"type": "string"}, "certificateIssuerMail": {"type": "string"}, "sambaUserWorkstations": {"items": {"type": "string"}, "type": "array"}, "certificateIssuerState": {"type": "string"}, "homeSharePath": {"type": "string"}, "username": {"type": "string"}, "departmentNumber": {"type": "string"}, "certificateIssuerCountry": {"type": "string"}, "shell": {"type": "string"}, "description": {"type": "string"}, "firstname": {"type": "string"}, "certificateIssuerOrganisation": {"type": "string"}, "objectFlag": {"items": {"type": "string"}, "type": "array"}, "mailHomeServer": {"type": "string"}, "certificateSubjectMail": {"type": "string"}, "mailForwardAddress": {"items": {"type": "string"}, "type": "array"}, "phone": {"items": {"type": "string"}, "type": "array"}, "gidNumber": {"type": "integer"}, "birthday": {"type": "string", "format": "date"}, "employeeNumber": {"type": "string"}, "groups": {"items": {"type": "string"}, "type": "array"}, "overridePWLength": {"type": "string"}, "certificateSubjectLocation": {"type": "string"}, "locked": {"type": "string"}, "password": {"type": "string"}, "lockedTime": {"type": "string"}, "serviceprovider": {"items": {"type": "string"}, "type": "array"}, "displayName": {"type": "string"}, "mailPrimaryAddress": {"type": "string"}, "certificateIssuerLocation": {"type": "string"}, "country": {"type": "string"}, "roomNumber": {"type": "string"}, "certificateSubjectCountry": {"type": "string"}, "certificateDateNotAfter": {"type": "string"}, "passwordexpiry": {"type": "string"}, "certificateVersion": {"type": "string"}, "street": {"type": "string"}, "gecos": {"type": "string"}, "unlockTime": {"type": "string"}, "sambaRID": {"type": "integer"}, "profilepath": {"type": "string"}, "secretary": {"items": {"type": "string"}, "type": "array"}, "jpegPhoto": {"type": "string"}, "certificateDateNotBefore": {"type": "string"}, "postcode": {"type": "string"}}}, "SettingsUdm_hookProperties": {"type": "object", "properties": {"ucsversionstart": {"type": "string"}, "name": {"type": "string"}, "package": {"type": "string"}, "filename": {"type": "string"}, "messagecatalog": {"items": {"type": "string"}, "type": "array"}, "ucsversionend": {"type": "string"}, "active": {"type": "string"}, "packageversion": {"type": "string"}, "data": {"type": "string"}, "appidentifier": {"items": {"type": "string"}, "type": "array"}}}, "UvmmProfileProperties": {"type": "object", "properties": {"kernel": {"type": "string"}, "bootdev": {"items": {"type": "string"}, "type": "array"}, "pvdisk": {"type": "string"}, "vnc": {"type": "string"}, "virttech": {"type": "string"}, "diskspace": {"type": "string"}, "name": {"type": "string"}, "ram": {"type": "string"}, "cpus": {"type": "string"}, "initramfs": {"type": "string"}, "drivercache": {"type": "string"}, "pvinterface": {"type": "string"}, "kernel_parameter": {"type": "string"}, "pvcdrom": {"type": "string"}, "os": {"type": "string"}, "interface": {"type": "string"}, "kblayout": {"type": "string"}, "name_prefix": {"type": "string"}, "arch": {"type": "string"}, "advkernelconf": {"type": "string"}, "rtcoffset": {"type": "string"}}}, "settings_udm_hook": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/SettingsUdm_hookProperties"}}}]}, "computers_ubuntu": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/ComputersUbuntuProperties"}}}]}, "SamlServiceproviderProperties": {"type": "object", "properties": {"singleLogoutService": {"type": "string"}, "privacypolicyURL": {"type": "string"}, "simplesamlAttributes": {"type": "string"}, "isActivated": {"type": "string"}, "AssertionConsumerService": {"items": {"type": "string"}, "type": "array"}, "attributesNameFormat": {"type": "string"}, "simplesamlNameIDAttribute": {"type": "string"}, "NameIDFormat": {"type": "string"}, "rawsimplesamlSPconfig": {"type": "string"}, "serviceproviderdescription": {"type": "string"}, "serviceProviderMetadata": {"type": "string"}, "Identifier": {"type": "string"}, "serviceProviderOrganizationName": {"type": "string"}, "LDAPattributes": {"items": {"type": "string"}, "type": "array"}}}, "DhcpHostProperties": {"type": "object", "properties": {"hwaddress": {"type": "string"}, "fixedaddress": {"items": {"type": "string"}, "type": "array"}, "statements": {"items": {"type": "string"}, "type": "array"}, "host": {"type": "string"}, "option": {"items": {"type": "string"}, "type": "array"}}}, "computers_domaincontroller_slave": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/ComputersDomaincontroller_slaveProperties"}}}]}, "ComputersTrustaccountProperties": {"type": "object", "properties": {"objectFlag": {"items": {"type": "string"}, "type": "array"}, "password": {"type": "string"}, "description": {"type": "string"}, "name": {"type": "string"}}}, "settings_syntax": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/SettingsSyntaxProperties"}}}]}, "settings_printeruri": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/SettingsPrinteruriProperties"}}}]}, "UvmmCloudconnectionProperties": {"type": "object", "properties": {"name": {"type": "string"}, "ManageableBy": {"items": {"type": "string"}, "type": "array"}, "type": {"type": "string"}, "availableImages": {"items": {"type": "string"}, "type": "array"}, "searchPattern": {"type": "string"}, "parameter": {"items": {"type": "string"}, "type": "array"}, "includeUCSimages": {"type": "string"}}}, "SettingsSambadomainProperties": {"type": "object", "properties": {"domainPasswordComplex": {"type": "string"}, "resetCountMinutes": {"type": "string"}, "minPasswordAge": {"type": "string"}, "passwordLength": {"type": "string"}, "NextUserRid": {"type": "string"}, "lockoutDuration": {"type": "string"}, "disconnectTime": {"type": "string"}, "domainPasswordStoreCleartext": {"type": "string"}, "refuseMachinePWChange": {"type": "string"}, "NextRid": {"type": "string"}, "maxPasswordAge": {"type": "string"}, "passwordHistory": {"type": "string"}, "SID": {"type": "string"}, "badLockoutAttempts": {"type": "string"}, "domainPwdProperties": {"type": "string"}, "NextGroupRid": {"type": "string"}, "logonToChangePW": {"type": "string"}, "name": {"type": "string"}}}, "PoliciesRegistryProperties": {"type": "object", "properties": {"ldapFilter": {"type": "string"}, "name": {"type": "string"}, "emptyAttributes": {"items": {"type": "string"}, "type": "array"}, "prohibitedObjectClasses": {"items": {"type": "string"}, "type": "array"}, "requiredObjectClasses": {"items": {"type": "string"}, "type": "array"}, "registry": {"type": "object"}, "fixedAttributes": {"items": {"type": "string"}, "type": "array"}}}, "DhcpSharedProperties": {"type": "object", "properties": {"statements": {"items": {"type": "string"}, "type": "array"}, "name": {"type": "string"}, "option": {"items": {"type": "string"}, "type": "array"}}}, "mail_folder": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/MailFolderProperties"}}}]}, "UvmmInfoProperties": {"type": "object", "properties": {"profile": {"type": "string"}, "contact": {"type": "string"}, "os": {"type": "string"}, "description": {"type": "string"}, "uuid": {"type": "string"}}}, "SettingsUsertemplateProperties": {"type": "object", "properties": {"sambahome": {"type": "string"}, "disabled": {"type": "string"}, "homeShare": {"type": "string"}, "postcode": {"type": "string"}, "scriptpath": {"type": "string"}, "city": {"type": "string"}, "employeeType": {"type": "string"}, "homedrive": {"type": "string"}, "title": {"type": "string"}, "mailAlternativeAddress": {"items": {"type": "string"}, "type": "array"}, "serviceprovider": {"items": {"type": "string"}, "type": "array"}, "homeSharePath": {"type": "string"}, "e-mail": {"items": {"type": "string"}, "type": "array"}, "unixhome": {"type": "string"}, "departmentNumber": {"type": "string"}, "shell": {"type": "string"}, "street": {"type": "string"}, "description": {"type": "string"}, "phone": {"items": {"type": "string"}, "type": "array"}, "employeeNumber": {"type": "string"}, "groups": {"items": {"type": "string"}, "type": "array"}, "primaryGroup": {"type": "string"}, "mailPrimaryAddress": {"type": "string"}, "displayName": {"type": "string"}, "name": {"type": "string"}, "_options": {"items": {"type": "string"}, "type": "array"}, "country": {"type": "string"}, "roomNumber": {"type": "string"}, "pwdChangeNextLogin": {"type": "string"}, "profilepath": {"type": "string"}, "organisation": {"type": "string"}, "secretary": {"items": {"type": "string"}, "type": "array"}}}, "DnsPtr_recordProperties": {"type": "object", "properties": {"ptr_record": {"items": {"type": "string"}, "type": "array"}, "ip": {"type": "string"}, "address": {"type": "string"}}}, "settings_xconfig_choices": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/SettingsXconfig_choicesProperties"}}}]}, "nagios_nagios": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/NagiosNagiosProperties"}}}]}, "settings_portal_entry": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/SettingsPortal_entryProperties"}}}]}, "UsersUser_homePostalAddress": {"type": "object", "properties": {"city": {"type": "string"}, "street": {"type": "string"}, "zipcode": {"type": "string"}}}, "settings_udm_module": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/SettingsUdm_moduleProperties"}}}]}, "SettingsExtended_attributeProperties": {"type": "object", "properties": {"translationLongDescription": {"items": {"type": "string"}, "type": "array"}, "objectClass": {"type": "string"}, "groupPosition": {"type": "string"}, "module": {"items": {"type": "string"}, "type": "array"}, "overwritePosition": {"type": "string"}, "hook": {"type": "string"}, "overwriteTab": {"type": "string"}, "translationTabName": {"items": {"type": "string"}, "type": "array"}, "shortDescription": {"type": "string"}, "copyable": {"type": "string"}, "groupName": {"type": "string"}, "version": {"type": "string"}, "valueRequired": {"type": "string"}, "CLIName": {"type": "string"}, "translationGroupName": {"items": {"type": "string"}, "type": "array"}, "translationShortDescription": {"items": {"type": "string"}, "type": "array"}, "fullWidth": {"type": "string"}, "longDescription": {"type": "string"}, "doNotSearch": {"type": "string"}, "tabName": {"type": "string"}, "syntax": {"type": "string"}, "tabAdvanced": {"type": "string"}, "name": {"type": "string"}, "default": {"type": "string"}, "mayChange": {"type": "string"}, "multivalue": {"type": "string"}, "ldapMapping": {"type": "string"}, "deleteObjectClass": {"type": "string"}, "notEditable": {"type": "string"}, "options": {"items": {"type": "string"}, "type": "array"}, "tabPosition": {"type": "string"}, "disableUDMWeb": {"type": "string"}}}, "SettingsUdm_syntaxProperties": {"type": "object", "properties": {"ucsversionstart": {"type": "string"}, "name": {"type": "string"}, "package": {"type": "string"}, "filename": {"type": "string"}, "messagecatalog": {"items": {"type": "string"}, "type": "array"}, "ucsversionend": {"type": "string"}, "active": {"type": "string"}, "packageversion": {"type": "string"}, "data": {"type": "string"}, "appidentifier": {"items": {"type": "string"}, "type": "array"}}}, "DnsSrv_recordProperties": {"type": "object", "properties": {"location": {"items": {"type": "string"}, "type": "array"}, "zonettl": {"type": "string"}, "name": {"type": "string"}}}, "SettingsPackagesProperties": {"type": "object", "properties": {"packageList": {"items": {"type": "string"}, "type": "array"}, "name": {"type": "string"}}}, "UsersLdapProperties": {"type": "object", "properties": {"username": {"type": "string"}, "locked": {"type": "string"}, "description": {"type": "string"}, "lastname": {"type": "string"}, "overridePWLength": {"type": "string"}, "disabled": {"type": "boolean"}, "objectFlag": {"items": {"type": "string"}, "type": "array"}, "overridePWHistory": {"type": "string"}, "password": {"type": "string"}, "name": {"type": "string"}}}, "computers_computer": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/ComputersComputerProperties"}}}]}, "kerberos_kdcentry": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/KerberosKdcentryProperties"}}}]}, "PoliciesMemberpackagesProperties": {"type": "object", "properties": {"ldapFilter": {"type": "string"}, "name": {"type": "string"}, "emptyAttributes": {"items": {"type": "string"}, "type": "array"}, "prohibitedObjectClasses": {"items": {"type": "string"}, "type": "array"}, "requiredObjectClasses": {"items": {"type": "string"}, "type": "array"}, "memberPackages": {"items": {"type": "string"}, "type": "array"}, "memberPackagesRemove": {"items": {"type": "string"}, "type": "array"}, "fixedAttributes": {"items": {"type": "string"}, "type": "array"}}}, "policies_dhcp_scope": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/PoliciesDhcp_scopeProperties"}}}]}, "computers_macos": {"allOf": [{"$ref": "#/definitions/base"}, {"type": "object", "properties": {"uri": {"type": "string"}, "props": {"$ref": "#/definitions/ComputersMacosProperties"}}}]}}, "security": [{"basic": []}], "swagger": "2.0", "consumes": ["application/json"]}
