#!/bin/bash
#
# Univention LDAP Replication
#  re-synchronize the local LDAP directory
#
# Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006 Univention GmbH
#
# http://www.univention.de/
#
# All rights reserved.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 2 as
# published by the Free Software Foundation.
#
# Binary versions of this file provided by Univention to you as
# well as other copyrighted, protected or trademarked materials like
# Logos, graphics, fonts, specific documentations and configurations,
# cryptographic keys etc. are subject to a license agreement between
# you and Univention.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
# Univention LDAP Listener replication module

eval `univention-baseconfig shell`
export faileddns=`tempfile`



display_header() {
        echo ""
        echo "univention-ldap-replication-resync: Resync local LDAP using a failed.ldif"
        echo "copyright (c) 2001-@%@copyright_lastyear@%@ Univention GmbH, Germany"
        echo ""
}


base64decode()
{
	export IFS=''
	cat << EOF | python2.4 - $1
import base64,sys
x=sys.argv[1]
print base64.decodestring(x)
EOF
}

getdns()
{
	export IFS=''
	cat $1 | ldapsearch-wrapper | grep '^dn:' | sort -u | {
		while
			read i
		do
			if echo $i | grep '^dn:: '>/dev/null
			then
				base64decode `echo "$i"| sed 's/^dn:: //g'`
			else
				echo "$i"| sed 's/^dn: //g'
			fi
		done
	}
}

display_header

if [ -n "$1" ]
then
	if ! pidof slapd > /dev/null 2>&1
		then
		echo "No slapd-process found, resync is not possible."
		echo "run /etc/init.d/slapd start"
		exit 1
	fi

	if ! test -f $1
		then
		echo "Input $1 is no regular file"
		exit 1
	fi

	date >> /var/log/univention/ldap-replication-resync.log
	echo "Try to sync changes stored in $1 into local LDAP" | tee -a /var/log/univention/ldap-replication-resync.log
	runsvctrl down /etc/runit/univention-ldap-listener
	echo -n "waiting for listener-shutdown "
	while ! runsvstat /etc/runit/univention-ldap-listener | grep "/etc/runit/univention-ldap-listener: down" >/dev/null
	  do sleep 1
	  echo -n " ."
	done
	echo " shutdown done"

	echo "replay stored changes ..."
	if ldapmodify -x -w`cat /etc/ldap/rootpw.conf |cut -d'"' -f 2` -D "cn=update,${ldap_base}" -c -S"${faileddns}" -f "$1" >> /var/log/univention/ldap-replication-resync.log 2>&1
	then
		echo ""
		d=`date +%F-%X`
		echo "Restored modifies sucessfuly, the ldif-file will be moved to /tmp/replayed.ldif_$d"
		rm "${faileddns}"
		mv $1 /tmp/replayed.ldif_$d
		/etc/init.d/univention-ldap-listener start
	else
		echo "some DNs have failed and have to be synced manually:"
		getdns "${faileddns}"
		echo ""
		echo "You can find the failed modifications in ${faileddns}"
		echo "Check them for being sync with the master-LDAP, then delete $1 and start the listener again typing:"
		echo "/etc/init.d/univention-ldap-listener start"
	fi
else
	echo "usage: $0 <failed.ldif>"
fi
