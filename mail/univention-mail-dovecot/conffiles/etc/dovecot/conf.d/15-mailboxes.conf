@%@UCRWARNING=# @%@

##
## Mailbox definitions
##

# NOTE: Assumes "namespace inbox" has been defined in 10-mail.conf.
namespace inbox {

  #mailbox name {
    # auto=create will automatically create this mailbox.
    # auto=subscribe will both create and subscribe to the mailbox.
    #auto = no

    # Space separated list of IMAP SPECIAL-USE attributes as specified by
    # RFC 6154: \All \Archive \Drafts \Flagged \Junk \Sent \Trash
    #special_use =
  #}

@!@
specials = dict([(x[0].split("/")[-1], x[1]) for x in configRegistry.items() if x[0].startswith("mail/dovecot/mailboxes/special/") and x[1].strip()])
autos = dict([(x[0].split("/")[-1], x[1]) for x in configRegistry.items() if x[0].startswith("mail/dovecot/mailboxes/auto/") and x[1].strip()])

dove_spam_folder = configRegistry.get("mail/dovecot/folder/spam")
if dove_spam_folder and dove_spam_folder.lower() != "none":
	if dove_spam_folder not in specials:
		specials[dove_spam_folder] = "\Junk"

	spam_auto = configRegistry.get("mail/dovecot/mailboxes/auto/" + dove_spam_folder, "subscribe")
	if spam_auto.lower() != "none" and dove_spam_folder not in autos:
		autos[dove_spam_folder] = spam_auto

dove_ham_folder = configRegistry.get("mail/dovecot/folder/ham")
if dove_ham_folder and dove_ham_folder.lower() != "none":
	ham_auto = configRegistry.get("mail/dovecot/mailboxes/auto/" + dove_ham_folder, "subscribe")
	if ham_auto.lower() != "none" and dove_ham_folder not in autos:
		autos[dove_ham_folder] = ham_auto

mailboxes = specials.keys()
mailboxes.extend(autos.keys())
mailboxes = set(mailboxes)

for mailbox in sorted(mailboxes):
	print '  mailbox "%s" {' % mailbox
	if mailbox in specials:
		print '    special_use = %s' % specials[mailbox]
	if mailbox in autos:
		print '    auto = %s' % autos[mailbox]
	print '  }\n'
@!@
}
