@%@BCWARNING=# @%@

servername: @%@hostname@%@.@%@domainname@%@
configdirectory: /var/lib/mupdate
partition-default: /var/tmp/mupdate
userprefix: user
sharedprefix: shared
virtdomains: userid
postuser: univentioninternalpostuser
robot101mode: yes
altnamespace: no
unixhierarchysep: yes
defaultacl: anyone none
lmtp_downcase_rcpt: yes
admins: cyrus root @!@
mail_cyrus_admins = configRegistry.get('mail/cyrus/admins')
if mail_cyrus_admins:
	print '%s' % mail_cyrus_admins.replace(',',' '),
mail_cyrus_murder_master = configRegistry.get('mail/cyrus/murder/master')
if mail_cyrus_murder_master:
	mail_cyrus_murder_servers = configRegistry.get('mail/cyrus/murder/servers')
	if mail_cyrus_murder_servers:
		print '%s' % mail_cyrus_murder_servers
@!@

lmtp_admins: postman cyrus
imap_admins: cyrus root @!@
mail_cyrus_imap_admins = configRegistry.get('mail/cyrus/imap/admins')
if mail_cyrus_imap_admins:
	print '%s' % mail_cyrus_imap_admins.replace(',',' ')
@!@

allowanonymouslogin: no
popminpoll: 0

autocreatequota: 0
@!@
quotawarnpercent = configRegistry.get('mail/cyrus/imap/quotawarnpercent')
if quotawarnpercent:
        print 'quotawarn: %s' % quotawarnpercent
quotawarnkb = configRegistry.get('mail/cyrus/imap/quotawarnkb')
if quotawarnkb:
        print 'quotawarnkb: %s' % quotawarnkb
@!@

umask: 077
sieveusehomedir: false
sievedir: /var/spool/cyrus/sieve
allowplaintext: yes
sasl_mech_list: PLAIN
@!@
mail_cyrus_loginrealms = configRegistry.get('mail/cyrus/loginrealms')
if mail_cyrus_loginrealms:
	print 'loginrealms: %s' % mail_cyrus_loginrealms
hosteddomains = configRegistry.get('mail/hosteddomains')
if hosteddomains:
	print 'loginrealms: %s' % hosteddomains
else:
	print 'loginrealms: %s' % configRegistry['domainname']
@!@

sasl_pwcheck_method: saslauthd
sasl_auxprop_plugin: sasldb
sasl_auto_transition: no

@!@
if configRegistry.get('mail/cyrus/imap/lookup_groups').lower() == 'no':
	print 'unix_group_enable: no'
else:
	print 'unix_group_enable: yes'
@!@
auth_ldap_group: true
ldap_base: @%@ldap/base@%@
ldap_host: @%@ldap/server/name@%@
@!@
print 'ldap_port: %s' % configRegistry.get("ldap/server/port", 7389)
@!@
ldap_bindpwfile: @%@mail/cyrus/ldap/pwfile@%@
ldap_binddn: @%@ldap/hostdn@%@
ldap_to_attr: uid
ldap_from_attr: mailPrimaryAddress

@!@
print 'tls_cert_file: %s' % configRegistry.get('mail/cyrus/ssl/certificate', '/var/lib/cyrus/cert.pem')
print 'tls_key_file: %s' % configRegistry.get('mail/cyrus/ssl/key', '/var/lib/cyrus/private.key')
@!@
tls_ca_path: /etc/univention/ssl/ucsCA/certs/
tls_session_timeout: 1440
tls_cipher_list: TLSv1:SSLv3:SSLv2:!NULL:!EXPORT:!DES:!LOW:@STRENGTH

lmtpsocket: /var/run/cyrus/socket/lmtp
idlesocket: /var/run/cyrus/socket/idle
notifysocket: /var/run/cyrus/socket/notify

@!@
mail_cyrus_murder_master = configRegistry.get('mail/cyrus/murder/master')
if mail_cyrus_murder_master:
	import os
	if os.path.exists('/etc/machine.secret'):
		file = open('/etc/machine.secret','r')
		machinepass = file.read().strip()
		print '# how to contact the MUPDATE master'
		print 'mupdate_server: %s' % mail_cyrus_murder_master
		print 'mupdate_authname: %s$' % configRegistry.get("hostname")
		print 'mupdate_password: %s' % machinepass
		print ''
		print '# how to contact the backend servers'
		print 'proxy_authname: %s$' % configRegistry.get("hostname")
		print 'proxy_password: %s' % machinepass
@!@
